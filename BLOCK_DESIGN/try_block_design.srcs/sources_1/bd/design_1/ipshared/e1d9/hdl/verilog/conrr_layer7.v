// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conrr_layer7 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        corr6_out_V_valid_V_dout,
        corr6_out_V_valid_V_empty_n,
        corr6_out_V_valid_V_read,
        corr6_out_V_data_V_dout,
        corr6_out_V_data_V_empty_n,
        corr6_out_V_data_V_read,
        corr6_out_V_keep_V_dout,
        corr6_out_V_keep_V_empty_n,
        corr6_out_V_keep_V_read,
        corr6_out_V_user_V_dout,
        corr6_out_V_user_V_empty_n,
        corr6_out_V_user_V_read,
        corr6_out_V_last_V_dout,
        corr6_out_V_last_V_empty_n,
        corr6_out_V_last_V_read,
        corr6_out_V_id_V_dout,
        corr6_out_V_id_V_empty_n,
        corr6_out_V_id_V_read,
        corr6_out_V_dest_V_dout,
        corr6_out_V_dest_V_empty_n,
        corr6_out_V_dest_V_read,
        corr7_out_V_valid_V_din,
        corr7_out_V_valid_V_full_n,
        corr7_out_V_valid_V_write,
        corr7_out_V_data_V_din,
        corr7_out_V_data_V_full_n,
        corr7_out_V_data_V_write,
        corr7_out_V_keep_V_din,
        corr7_out_V_keep_V_full_n,
        corr7_out_V_keep_V_write,
        corr7_out_V_user_V_din,
        corr7_out_V_user_V_full_n,
        corr7_out_V_user_V_write,
        corr7_out_V_last_V_din,
        corr7_out_V_last_V_full_n,
        corr7_out_V_last_V_write,
        corr7_out_V_id_V_din,
        corr7_out_V_id_V_full_n,
        corr7_out_V_id_V_write,
        corr7_out_V_dest_V_din,
        corr7_out_V_dest_V_full_n,
        corr7_out_V_dest_V_write
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [0:0] corr6_out_V_valid_V_dout;
input   corr6_out_V_valid_V_empty_n;
output   corr6_out_V_valid_V_read;
input  [11:0] corr6_out_V_data_V_dout;
input   corr6_out_V_data_V_empty_n;
output   corr6_out_V_data_V_read;
input  [3:0] corr6_out_V_keep_V_dout;
input   corr6_out_V_keep_V_empty_n;
output   corr6_out_V_keep_V_read;
input  [0:0] corr6_out_V_user_V_dout;
input   corr6_out_V_user_V_empty_n;
output   corr6_out_V_user_V_read;
input  [0:0] corr6_out_V_last_V_dout;
input   corr6_out_V_last_V_empty_n;
output   corr6_out_V_last_V_read;
input  [0:0] corr6_out_V_id_V_dout;
input   corr6_out_V_id_V_empty_n;
output   corr6_out_V_id_V_read;
input  [0:0] corr6_out_V_dest_V_dout;
input   corr6_out_V_dest_V_empty_n;
output   corr6_out_V_dest_V_read;
output  [0:0] corr7_out_V_valid_V_din;
input   corr7_out_V_valid_V_full_n;
output   corr7_out_V_valid_V_write;
output  [11:0] corr7_out_V_data_V_din;
input   corr7_out_V_data_V_full_n;
output   corr7_out_V_data_V_write;
output  [3:0] corr7_out_V_keep_V_din;
input   corr7_out_V_keep_V_full_n;
output   corr7_out_V_keep_V_write;
output  [0:0] corr7_out_V_user_V_din;
input   corr7_out_V_user_V_full_n;
output   corr7_out_V_user_V_write;
output  [0:0] corr7_out_V_last_V_din;
input   corr7_out_V_last_V_full_n;
output   corr7_out_V_last_V_write;
output  [0:0] corr7_out_V_id_V_din;
input   corr7_out_V_id_V_full_n;
output   corr7_out_V_id_V_write;
output  [0:0] corr7_out_V_dest_V_din;
input   corr7_out_V_dest_V_full_n;
output   corr7_out_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg corr6_out_V_valid_V_read;
reg corr6_out_V_data_V_read;
reg corr6_out_V_keep_V_read;
reg corr6_out_V_user_V_read;
reg corr6_out_V_last_V_read;
reg corr6_out_V_id_V_read;
reg corr6_out_V_dest_V_read;
reg corr7_out_V_valid_V_write;
reg corr7_out_V_data_V_write;
reg corr7_out_V_keep_V_write;
reg corr7_out_V_user_V_write;
reg corr7_out_V_last_V_write;
reg corr7_out_V_id_V_write;
reg corr7_out_V_dest_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [11:0] out_layer_data_V_4_address0;
reg    out_layer_data_V_4_ce0;
reg    out_layer_data_V_4_we0;
reg   [11:0] out_layer_data_V_4_d0;
wire   [11:0] out_layer_data_V_4_q0;
wire   [9:0] weights_layer7_V_0_address0;
reg    weights_layer7_V_0_ce0;
wire   [4:0] weights_layer7_V_0_q0;
wire   [5:0] biases_layer7_V_address0;
reg    biases_layer7_V_ce0;
wire   [2:0] biases_layer7_V_q0;
reg    corr6_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state6;
reg   [0:0] icmp_ln886_reg_1149;
wire   [0:0] icmp_ln889_fu_864_p2;
wire   [0:0] icmp_ln908_fu_833_p2;
reg    corr6_out_V_data_V_blk_n;
reg    corr6_out_V_keep_V_blk_n;
reg    corr6_out_V_user_V_blk_n;
reg    corr6_out_V_last_V_blk_n;
reg    corr6_out_V_id_V_blk_n;
reg    corr6_out_V_dest_V_blk_n;
reg    corr7_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state18;
reg    corr7_out_V_data_V_blk_n;
reg    corr7_out_V_keep_V_blk_n;
reg    corr7_out_V_user_V_blk_n;
reg    corr7_out_V_last_V_blk_n;
reg    corr7_out_V_id_V_blk_n;
reg    corr7_out_V_dest_V_blk_n;
wire   [6:0] current_line_fu_747_p2;
reg   [6:0] current_line_reg_1131;
wire    ap_CS_fsm_state2;
wire   [5:0] i_fu_759_p2;
reg   [5:0] i_reg_1139;
wire    ap_CS_fsm_state3;
wire   [12:0] zext_ln867_fu_773_p1;
reg   [12:0] zext_ln867_reg_1144;
wire   [0:0] icmp_ln866_fu_753_p2;
wire   [0:0] icmp_ln886_fu_777_p2;
wire   [6:0] j_fu_789_p2;
wire    ap_CS_fsm_state4;
wire   [3:0] current_input_channe_2_fu_815_p2;
reg   [3:0] current_input_channe_2_reg_1164;
wire    ap_CS_fsm_state5;
wire   [10:0] zext_ln886_fu_829_p1;
reg   [10:0] zext_ln886_reg_1169;
wire   [0:0] icmp_ln871_fu_809_p2;
wire   [6:0] index_input_element_5_fu_839_p2;
wire    io_acc_block_signal_op96;
reg    ap_predicate_op96_read_state6;
wire    io_acc_block_signal_op125;
reg    ap_predicate_op125_read_state6;
reg    ap_block_state6;
wire   [6:0] index_input_element_fu_870_p2;
wire   [5:0] current_filter_fu_901_p2;
reg   [5:0] current_filter_reg_1194;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln949_fu_907_p1;
reg   [63:0] zext_ln949_reg_1199;
wire   [0:0] icmp_ln943_fu_895_p2;
wire   [10:0] zext_ln1265_fu_911_p1;
reg   [10:0] zext_ln1265_reg_1204;
wire   [12:0] zext_ln945_fu_923_p1;
reg   [12:0] zext_ln945_reg_1209;
wire   [3:0] current_input_channe_3_fu_933_p2;
reg   [3:0] current_input_channe_3_reg_1218;
wire    ap_CS_fsm_state8;
wire   [10:0] zext_ln203_26_fu_947_p1;
reg   [10:0] zext_ln203_26_reg_1223;
wire   [0:0] icmp_ln945_fu_927_p2;
reg   [4:0] subfilter_layer_0_V_reg_1238;
wire    ap_CS_fsm_state9;
wire   [6:0] add_ln953_fu_985_p2;
reg   [6:0] add_ln953_reg_1246;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln953_fu_979_p2;
wire  signed [5:0] sext_ln958_fu_1005_p1;
reg   [5:0] sext_ln958_reg_1256;
wire   [6:0] index_input_element_7_fu_1020_p2;
reg   [6:0] index_input_element_7_reg_1264;
wire    ap_CS_fsm_state13;
reg   [11:0] out_layer_data_V_4_a_1_reg_1269;
wire   [0:0] icmp_ln959_fu_1014_p2;
wire  signed [11:0] sext_ln1265_fu_1052_p1;
reg  signed [11:0] sext_ln1265_reg_1279;
wire    ap_CS_fsm_state15;
wire  signed [10:0] sext_ln703_fu_1056_p1;
reg  signed [10:0] sext_ln703_reg_1284;
wire   [6:0] index_input_element_6_fu_1066_p2;
reg   [6:0] index_input_element_6_reg_1292;
wire    ap_CS_fsm_state16;
reg   [11:0] out_layer_data_V_4_a_2_reg_1297;
wire   [0:0] icmp_ln964_fu_1060_p2;
wire    ap_CS_fsm_state17;
wire   [10:0] p_Val2_5_fu_1115_p3;
reg   [10:0] p_Val2_5_reg_1327;
reg   [5:0] correlate_img_address0;
reg    correlate_img_ce0;
reg    correlate_img_we0;
wire   [11:0] correlate_img_q0;
reg   [9:0] img_channel_0_data_s_address0;
reg    img_channel_0_data_s_ce0;
reg    img_channel_0_data_s_we0;
wire   [11:0] img_channel_0_data_s_q0;
reg   [9:0] img_channel_0_keep_s_address0;
reg    img_channel_0_keep_s_ce0;
reg    img_channel_0_keep_s_we0;
wire   [3:0] img_channel_0_keep_s_q0;
reg   [9:0] img_channel_0_user_s_address0;
reg    img_channel_0_user_s_ce0;
reg    img_channel_0_user_s_we0;
wire   [0:0] img_channel_0_user_s_q0;
reg   [9:0] img_channel_0_last_s_address0;
reg    img_channel_0_last_s_ce0;
reg    img_channel_0_last_s_we0;
wire   [0:0] img_channel_0_last_s_q0;
reg   [9:0] img_channel_0_id_V_address0;
reg    img_channel_0_id_V_ce0;
reg    img_channel_0_id_V_we0;
wire   [0:0] img_channel_0_id_V_q0;
reg   [9:0] img_channel_0_dest_s_address0;
reg    img_channel_0_dest_s_ce0;
reg    img_channel_0_dest_s_we0;
wire   [0:0] img_channel_0_dest_s_q0;
reg   [12:0] channel_from_prev_ou_address0;
reg    channel_from_prev_ou_ce0;
reg    channel_from_prev_ou_we0;
wire   [11:0] channel_from_prev_ou_q0;
wire    grp_CORRELATE_fu_704_ap_start;
wire    grp_CORRELATE_fu_704_ap_done;
wire    grp_CORRELATE_fu_704_ap_idle;
wire    grp_CORRELATE_fu_704_ap_ready;
wire   [12:0] grp_CORRELATE_fu_704_prev_output_channel_V_address0;
wire    grp_CORRELATE_fu_704_prev_output_channel_V_ce0;
wire   [5:0] grp_CORRELATE_fu_704_correlate_img_V_address0;
wire    grp_CORRELATE_fu_704_correlate_img_V_ce0;
wire    grp_CORRELATE_fu_704_correlate_img_V_we0;
wire   [11:0] grp_CORRELATE_fu_704_correlate_img_V_d0;
reg   [6:0] current_line_0_reg_580;
reg    ap_block_state1;
reg   [5:0] i_0_reg_592;
wire   [0:0] icmp_ln867_fu_783_p2;
wire   [0:0] icmp_ln863_fu_741_p2;
reg   [6:0] j_0_reg_603;
reg   [3:0] current_input_channe_reg_614;
reg   [6:0] index_input_element1_1_reg_625;
reg   [6:0] index_input_element1_reg_636;
reg   [5:0] current_filter_0_reg_647;
reg   [3:0] current_input_channe_4_reg_658;
reg   [6:0] index_input_element2_reg_669;
wire    ap_CS_fsm_state11;
reg   [6:0] index_input_element2_4_reg_681;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
reg   [6:0] index_input_element2_5_reg_692;
wire    io_acc_block_signal_op247;
reg    grp_CORRELATE_fu_704_ap_start_reg;
wire   [63:0] zext_ln203_21_fu_804_p1;
wire   [63:0] zext_ln203_25_fu_854_p1;
wire   [63:0] zext_ln203_23_fu_885_p1;
wire  signed [63:0] sext_ln203_fu_974_p1;
wire   [63:0] zext_ln203_29_fu_1000_p1;
wire   [63:0] zext_ln955_fu_1009_p1;
wire   [63:0] zext_ln1265_12_fu_1040_p1;
wire   [63:0] zext_ln961_fu_1026_p1;
wire   [63:0] zext_ln1265_10_fu_1081_p1;
wire   [63:0] zext_ln966_fu_1086_p1;
wire   [11:0] tmp_data_V_6_fu_1123_p1;
wire   [11:0] add_ln703_fu_1045_p2;
wire   [11:0] tmp_fu_765_p3;
wire   [12:0] zext_ln203_fu_795_p1;
wire   [12:0] add_ln203_11_fu_799_p2;
wire   [9:0] tmp_s_fu_821_p3;
wire   [10:0] zext_ln203_24_fu_845_p1;
wire   [10:0] add_ln203_13_fu_849_p2;
wire   [10:0] zext_ln203_22_fu_876_p1;
wire   [10:0] add_ln203_12_fu_880_p2;
wire   [11:0] tmp_28_fu_915_p3;
wire   [9:0] tmp_29_fu_939_p3;
wire   [6:0] tmp_30_fu_951_p3;
wire   [10:0] zext_ln203_27_fu_959_p1;
wire   [10:0] sub_ln203_fu_963_p2;
wire   [10:0] add_ln203_14_fu_969_p2;
wire   [10:0] zext_ln203_28_fu_991_p1;
wire   [10:0] add_ln203_15_fu_995_p2;
wire   [12:0] zext_ln1265_11_fu_1031_p1;
wire   [12:0] add_ln1265_4_fu_1035_p2;
wire  signed [2:0] sext_ln1265_fu_1052_p0;
wire  signed [2:0] sext_ln703_fu_1056_p0;
wire   [12:0] zext_ln1265_9_fu_1072_p1;
wire   [12:0] add_ln1265_fu_1076_p2;
wire   [10:0] trunc_ln703_fu_1095_p1;
wire   [11:0] aux_sum_V_fu_1099_p2;
wire   [0:0] icmp_ln1494_fu_1109_p2;
wire   [10:0] add_ln203_fu_1104_p2;
reg   [17:0] ap_NS_fsm;
reg    ap_condition_872;
reg    ap_condition_876;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 18'd1;
#0 grp_CORRELATE_fu_704_ap_start_reg = 1'b0;
end

conrr_layer7_out_bFp #(
    .DataWidth( 12 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
out_layer_data_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_layer_data_V_4_address0),
    .ce0(out_layer_data_V_4_ce0),
    .we0(out_layer_data_V_4_we0),
    .d0(out_layer_data_V_4_d0),
    .q0(out_layer_data_V_4_q0)
);

conrr_layer7_weigbGp #(
    .DataWidth( 5 ),
    .AddressRange( 672 ),
    .AddressWidth( 10 ))
weights_layer7_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer7_V_0_address0),
    .ce0(weights_layer7_V_0_ce0),
    .q0(weights_layer7_V_0_q0)
);

conrr_layer7_biasbHp #(
    .DataWidth( 3 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
biases_layer7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_layer7_V_address0),
    .ce0(biases_layer7_V_ce0),
    .q0(biases_layer7_V_q0)
);

conrr_layer1_corrfYi #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
correlate_img_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(correlate_img_address0),
    .ce0(correlate_img_ce0),
    .we0(correlate_img_we0),
    .d0(grp_CORRELATE_fu_704_correlate_img_V_d0),
    .q0(correlate_img_q0)
);

conrr_layer7_img_bJp #(
    .DataWidth( 12 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_data_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_data_s_address0),
    .ce0(img_channel_0_data_s_ce0),
    .we0(img_channel_0_data_s_we0),
    .d0(corr6_out_V_data_V_dout),
    .q0(img_channel_0_data_s_q0)
);

conrr_layer7_img_bKp #(
    .DataWidth( 4 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_keep_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_keep_s_address0),
    .ce0(img_channel_0_keep_s_ce0),
    .we0(img_channel_0_keep_s_we0),
    .d0(corr6_out_V_keep_V_dout),
    .q0(img_channel_0_keep_s_q0)
);

conrr_layer7_img_bLp #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_user_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_user_s_address0),
    .ce0(img_channel_0_user_s_ce0),
    .we0(img_channel_0_user_s_we0),
    .d0(corr6_out_V_user_V_dout),
    .q0(img_channel_0_user_s_q0)
);

conrr_layer7_img_bLp #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_last_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_last_s_address0),
    .ce0(img_channel_0_last_s_ce0),
    .we0(img_channel_0_last_s_we0),
    .d0(corr6_out_V_last_V_dout),
    .q0(img_channel_0_last_s_q0)
);

conrr_layer7_img_bLp #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_id_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_id_V_address0),
    .ce0(img_channel_0_id_V_ce0),
    .we0(img_channel_0_id_V_we0),
    .d0(corr6_out_V_id_V_dout),
    .q0(img_channel_0_id_V_q0)
);

conrr_layer7_img_bLp #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_dest_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_dest_s_address0),
    .ce0(img_channel_0_dest_s_ce0),
    .we0(img_channel_0_dest_s_we0),
    .d0(corr6_out_V_dest_V_dout),
    .q0(img_channel_0_dest_s_q0)
);

conrr_layer2_chanBew #(
    .DataWidth( 12 ),
    .AddressRange( 5508 ),
    .AddressWidth( 13 ))
channel_from_prev_ou_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(channel_from_prev_ou_address0),
    .ce0(channel_from_prev_ou_ce0),
    .we0(channel_from_prev_ou_we0),
    .d0(img_channel_0_data_s_q0),
    .q0(channel_from_prev_ou_q0)
);

CORRELATE grp_CORRELATE_fu_704(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CORRELATE_fu_704_ap_start),
    .ap_done(grp_CORRELATE_fu_704_ap_done),
    .ap_idle(grp_CORRELATE_fu_704_ap_idle),
    .ap_ready(grp_CORRELATE_fu_704_ap_ready),
    .prev_output_channel_V_address0(grp_CORRELATE_fu_704_prev_output_channel_V_address0),
    .prev_output_channel_V_ce0(grp_CORRELATE_fu_704_prev_output_channel_V_ce0),
    .prev_output_channel_V_q0(channel_from_prev_ou_q0),
    .filter_0_V_read(sext_ln958_reg_1256),
    .correlate_img_V_address0(grp_CORRELATE_fu_704_correlate_img_V_address0),
    .correlate_img_V_ce0(grp_CORRELATE_fu_704_correlate_img_V_ce0),
    .correlate_img_V_we0(grp_CORRELATE_fu_704_correlate_img_V_we0),
    .correlate_img_V_d0(grp_CORRELATE_fu_704_correlate_img_V_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln863_fu_741_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CORRELATE_fu_704_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln953_fu_979_p2 == 1'd1))) begin
            grp_CORRELATE_fu_704_ap_start_reg <= 1'b1;
        end else if ((grp_CORRELATE_fu_704_ap_ready == 1'b1)) begin
            grp_CORRELATE_fu_704_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln871_fu_809_p2 == 1'd1))) begin
        current_filter_0_reg_647 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln964_fu_1060_p2 == 1'd1))) begin
        current_filter_0_reg_647 <= current_filter_reg_1194;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln959_fu_1014_p2 == 1'd1))) begin
        current_input_channe_4_reg_658 <= current_input_channe_3_reg_1218;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln943_fu_895_p2 == 1'd0))) begin
        current_input_channe_4_reg_658 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln866_fu_753_p2 == 1'd1))) begin
        current_input_channe_reg_614 <= 4'd0;
    end else if ((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (((icmp_ln908_fu_833_p2 == 1'd1) & (icmp_ln886_reg_1149 == 1'd0)) | ((icmp_ln889_fu_864_p2 == 1'd1) & (icmp_ln886_reg_1149 == 1'd1))))) begin
        current_input_channe_reg_614 <= current_input_channe_2_reg_1164;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln943_fu_895_p2 == 1'd1))) begin
        current_line_0_reg_580 <= current_line_reg_1131;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_line_0_reg_580 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln863_fu_741_p2 == 1'd0))) begin
        i_0_reg_592 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln867_fu_783_p2 == 1'd1))) begin
        i_0_reg_592 <= i_reg_1139;
    end
end

always @ (posedge ap_clk) begin
    if ((icmp_ln886_reg_1149 == 1'd0)) begin
        if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln871_fu_809_p2 == 1'd0))) begin
            index_input_element1_1_reg_625 <= 7'd0;
        end else if ((1'b1 == ap_condition_872)) begin
            index_input_element1_1_reg_625 <= index_input_element_5_fu_839_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((icmp_ln886_reg_1149 == 1'd1)) begin
        if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln871_fu_809_p2 == 1'd0))) begin
            index_input_element1_reg_636 <= 7'd0;
        end else if ((1'b1 == ap_condition_876)) begin
            index_input_element1_reg_636 <= index_input_element_fu_870_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        index_input_element2_4_reg_681 <= index_input_element_7_reg_1264;
    end else if (((grp_CORRELATE_fu_704_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        index_input_element2_4_reg_681 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        index_input_element2_5_reg_692 <= 7'd0;
    end else if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        index_input_element2_5_reg_692 <= index_input_element_6_reg_1292;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        index_input_element2_reg_669 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        index_input_element2_reg_669 <= add_ln953_reg_1246;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln866_fu_753_p2 == 1'd0))) begin
        j_0_reg_603 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln867_fu_783_p2 == 1'd0))) begin
        j_0_reg_603 <= j_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln953_reg_1246 <= add_ln953_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        current_filter_reg_1194 <= current_filter_fu_901_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        current_input_channe_2_reg_1164 <= current_input_channe_2_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        current_input_channe_3_reg_1218 <= current_input_channe_3_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        current_line_reg_1131 <= current_line_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_1139 <= i_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln866_fu_753_p2 == 1'd1))) begin
        icmp_ln886_reg_1149 <= icmp_ln886_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        index_input_element_6_reg_1292 <= index_input_element_6_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        index_input_element_7_reg_1264 <= index_input_element_7_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln959_fu_1014_p2 == 1'd0))) begin
        out_layer_data_V_4_a_1_reg_1269 <= zext_ln1265_12_fu_1040_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln964_fu_1060_p2 == 1'd0))) begin
        out_layer_data_V_4_a_2_reg_1297 <= zext_ln1265_10_fu_1081_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        p_Val2_5_reg_1327 <= p_Val2_5_fu_1115_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sext_ln1265_reg_1279 <= sext_ln1265_fu_1052_p1;
        sext_ln703_reg_1284 <= sext_ln703_fu_1056_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln953_fu_979_p2 == 1'd1))) begin
        sext_ln958_reg_1256 <= sext_ln958_fu_1005_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        subfilter_layer_0_V_reg_1238 <= weights_layer7_V_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln943_fu_895_p2 == 1'd0))) begin
        zext_ln1265_reg_1204[5 : 0] <= zext_ln1265_fu_911_p1[5 : 0];
        zext_ln945_reg_1209[11 : 6] <= zext_ln945_fu_923_p1[11 : 6];
        zext_ln949_reg_1199[5 : 0] <= zext_ln949_fu_907_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln945_fu_927_p2 == 1'd0))) begin
        zext_ln203_26_reg_1223[9 : 6] <= zext_ln203_26_fu_947_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln866_fu_753_p2 == 1'd0))) begin
        zext_ln867_reg_1144[11 : 6] <= zext_ln867_fu_773_p1[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln871_fu_809_p2 == 1'd0))) begin
        zext_ln886_reg_1169[9 : 6] <= zext_ln886_fu_829_p1[9 : 6];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln863_fu_741_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        biases_layer7_V_ce0 = 1'b1;
    end else begin
        biases_layer7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        channel_from_prev_ou_address0 = zext_ln955_fu_1009_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        channel_from_prev_ou_address0 = grp_CORRELATE_fu_704_prev_output_channel_V_address0;
    end else begin
        channel_from_prev_ou_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        channel_from_prev_ou_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        channel_from_prev_ou_ce0 = grp_CORRELATE_fu_704_prev_output_channel_V_ce0;
    end else begin
        channel_from_prev_ou_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        channel_from_prev_ou_we0 = 1'b1;
    end else begin
        channel_from_prev_ou_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        corr6_out_V_data_V_blk_n = corr6_out_V_data_V_empty_n;
    end else begin
        corr6_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op125_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op96_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_data_V_read = 1'b1;
    end else begin
        corr6_out_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        corr6_out_V_dest_V_blk_n = corr6_out_V_dest_V_empty_n;
    end else begin
        corr6_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op125_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op96_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_dest_V_read = 1'b1;
    end else begin
        corr6_out_V_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        corr6_out_V_id_V_blk_n = corr6_out_V_id_V_empty_n;
    end else begin
        corr6_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op125_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op96_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_id_V_read = 1'b1;
    end else begin
        corr6_out_V_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        corr6_out_V_keep_V_blk_n = corr6_out_V_keep_V_empty_n;
    end else begin
        corr6_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op125_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op96_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_keep_V_read = 1'b1;
    end else begin
        corr6_out_V_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        corr6_out_V_last_V_blk_n = corr6_out_V_last_V_empty_n;
    end else begin
        corr6_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op125_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op96_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_last_V_read = 1'b1;
    end else begin
        corr6_out_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        corr6_out_V_user_V_blk_n = corr6_out_V_user_V_empty_n;
    end else begin
        corr6_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op125_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op96_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_user_V_read = 1'b1;
    end else begin
        corr6_out_V_user_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        corr6_out_V_valid_V_blk_n = corr6_out_V_valid_V_empty_n;
    end else begin
        corr6_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op125_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (ap_predicate_op96_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_valid_V_read = 1'b1;
    end else begin
        corr6_out_V_valid_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        corr7_out_V_data_V_blk_n = corr7_out_V_data_V_full_n;
    end else begin
        corr7_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        corr7_out_V_data_V_write = 1'b1;
    end else begin
        corr7_out_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        corr7_out_V_dest_V_blk_n = corr7_out_V_dest_V_full_n;
    end else begin
        corr7_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        corr7_out_V_dest_V_write = 1'b1;
    end else begin
        corr7_out_V_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        corr7_out_V_id_V_blk_n = corr7_out_V_id_V_full_n;
    end else begin
        corr7_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        corr7_out_V_id_V_write = 1'b1;
    end else begin
        corr7_out_V_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        corr7_out_V_keep_V_blk_n = corr7_out_V_keep_V_full_n;
    end else begin
        corr7_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        corr7_out_V_keep_V_write = 1'b1;
    end else begin
        corr7_out_V_keep_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        corr7_out_V_last_V_blk_n = corr7_out_V_last_V_full_n;
    end else begin
        corr7_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        corr7_out_V_last_V_write = 1'b1;
    end else begin
        corr7_out_V_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        corr7_out_V_user_V_blk_n = corr7_out_V_user_V_full_n;
    end else begin
        corr7_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        corr7_out_V_user_V_write = 1'b1;
    end else begin
        corr7_out_V_user_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        corr7_out_V_valid_V_blk_n = corr7_out_V_valid_V_full_n;
    end else begin
        corr7_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        corr7_out_V_valid_V_write = 1'b1;
    end else begin
        corr7_out_V_valid_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        correlate_img_address0 = zext_ln961_fu_1026_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        correlate_img_address0 = grp_CORRELATE_fu_704_correlate_img_V_address0;
    end else begin
        correlate_img_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        correlate_img_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        correlate_img_ce0 = grp_CORRELATE_fu_704_correlate_img_V_ce0;
    end else begin
        correlate_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        correlate_img_we0 = grp_CORRELATE_fu_704_correlate_img_V_we0;
    end else begin
        correlate_img_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_0_data_s_address0 = zext_ln203_29_fu_1000_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1))) begin
        img_channel_0_data_s_address0 = zext_ln203_23_fu_885_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0))) begin
        img_channel_0_data_s_address0 = zext_ln203_25_fu_854_p1;
    end else begin
        img_channel_0_data_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_data_s_ce0 = 1'b1;
    end else begin
        img_channel_0_data_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_data_s_we0 = 1'b1;
    end else begin
        img_channel_0_data_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_0_dest_s_address0 = zext_ln966_fu_1086_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1))) begin
        img_channel_0_dest_s_address0 = zext_ln203_23_fu_885_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0))) begin
        img_channel_0_dest_s_address0 = zext_ln203_25_fu_854_p1;
    end else begin
        img_channel_0_dest_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_dest_s_ce0 = 1'b1;
    end else begin
        img_channel_0_dest_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_dest_s_we0 = 1'b1;
    end else begin
        img_channel_0_dest_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_0_id_V_address0 = zext_ln966_fu_1086_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1))) begin
        img_channel_0_id_V_address0 = zext_ln203_23_fu_885_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0))) begin
        img_channel_0_id_V_address0 = zext_ln203_25_fu_854_p1;
    end else begin
        img_channel_0_id_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_id_V_ce0 = 1'b1;
    end else begin
        img_channel_0_id_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_id_V_we0 = 1'b1;
    end else begin
        img_channel_0_id_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_0_keep_s_address0 = zext_ln966_fu_1086_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1))) begin
        img_channel_0_keep_s_address0 = zext_ln203_23_fu_885_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0))) begin
        img_channel_0_keep_s_address0 = zext_ln203_25_fu_854_p1;
    end else begin
        img_channel_0_keep_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_keep_s_ce0 = 1'b1;
    end else begin
        img_channel_0_keep_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_keep_s_we0 = 1'b1;
    end else begin
        img_channel_0_keep_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_0_last_s_address0 = zext_ln966_fu_1086_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1))) begin
        img_channel_0_last_s_address0 = zext_ln203_23_fu_885_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0))) begin
        img_channel_0_last_s_address0 = zext_ln203_25_fu_854_p1;
    end else begin
        img_channel_0_last_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_last_s_ce0 = 1'b1;
    end else begin
        img_channel_0_last_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_last_s_we0 = 1'b1;
    end else begin
        img_channel_0_last_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_0_user_s_address0 = zext_ln966_fu_1086_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1))) begin
        img_channel_0_user_s_address0 = zext_ln203_23_fu_885_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0))) begin
        img_channel_0_user_s_address0 = zext_ln203_25_fu_854_p1;
    end else begin
        img_channel_0_user_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_user_s_ce0 = 1'b1;
    end else begin
        img_channel_0_user_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1)))) begin
        img_channel_0_user_s_we0 = 1'b1;
    end else begin
        img_channel_0_user_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln863_fu_741_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        out_layer_data_V_4_address0 = out_layer_data_V_4_a_2_reg_1297;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        out_layer_data_V_4_address0 = zext_ln1265_10_fu_1081_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        out_layer_data_V_4_address0 = out_layer_data_V_4_a_1_reg_1269;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        out_layer_data_V_4_address0 = zext_ln1265_12_fu_1040_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_4_address0 = zext_ln203_21_fu_804_p1;
    end else begin
        out_layer_data_V_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state4) | ((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        out_layer_data_V_4_ce0 = 1'b1;
    end else begin
        out_layer_data_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        out_layer_data_V_4_d0 = tmp_data_V_6_fu_1123_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        out_layer_data_V_4_d0 = add_ln703_fu_1045_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_4_d0 = 12'd0;
    end else begin
        out_layer_data_V_4_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln867_fu_783_p2 == 1'd0)) | ((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        out_layer_data_V_4_we0 = 1'b1;
    end else begin
        out_layer_data_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_layer7_V_0_ce0 = 1'b1;
    end else begin
        weights_layer7_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln863_fu_741_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln866_fu_753_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln867_fu_783_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln871_fu_809_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (((icmp_ln908_fu_833_p2 == 1'd1) & (icmp_ln886_reg_1149 == 1'd0)) | ((icmp_ln889_fu_864_p2 == 1'd1) & (icmp_ln886_reg_1149 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (((icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0)) | ((icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln943_fu_895_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln945_fu_927_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln953_fu_979_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_CORRELATE_fu_704_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln959_fu_1014_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln964_fu_1060_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((io_acc_block_signal_op247 == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1265_4_fu_1035_p2 = (zext_ln945_reg_1209 + zext_ln1265_11_fu_1031_p1);

assign add_ln1265_fu_1076_p2 = (zext_ln945_reg_1209 + zext_ln1265_9_fu_1072_p1);

assign add_ln203_11_fu_799_p2 = (zext_ln867_reg_1144 + zext_ln203_fu_795_p1);

assign add_ln203_12_fu_880_p2 = (zext_ln886_reg_1169 + zext_ln203_22_fu_876_p1);

assign add_ln203_13_fu_849_p2 = (zext_ln886_reg_1169 + zext_ln203_24_fu_845_p1);

assign add_ln203_14_fu_969_p2 = (sub_ln203_fu_963_p2 + zext_ln1265_reg_1204);

assign add_ln203_15_fu_995_p2 = (zext_ln203_26_reg_1223 + zext_ln203_28_fu_991_p1);

assign add_ln203_fu_1104_p2 = ($signed(sext_ln703_reg_1284) + $signed(trunc_ln703_fu_1095_p1));

assign add_ln703_fu_1045_p2 = (correlate_img_q0 + out_layer_data_V_4_q0);

assign add_ln953_fu_985_p2 = (index_input_element2_reg_669 + 7'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state6 = (((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1)));
end

always @ (*) begin
    ap_condition_872 = (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln908_fu_833_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_876 = (~(((io_acc_block_signal_op125 == 1'b0) & (ap_predicate_op125_read_state6 == 1'b1)) | ((io_acc_block_signal_op96 == 1'b0) & (ap_predicate_op96_read_state6 == 1'b1))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln889_fu_864_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op125_read_state6 = ((icmp_ln889_fu_864_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd1));
end

always @ (*) begin
    ap_predicate_op96_read_state6 = ((icmp_ln908_fu_833_p2 == 1'd0) & (icmp_ln886_reg_1149 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign aux_sum_V_fu_1099_p2 = ($signed(sext_ln1265_reg_1279) + $signed(out_layer_data_V_4_q0));

assign biases_layer7_V_address0 = zext_ln949_reg_1199;

assign corr7_out_V_data_V_din = p_Val2_5_reg_1327;

assign corr7_out_V_dest_V_din = img_channel_0_dest_s_q0;

assign corr7_out_V_id_V_din = img_channel_0_id_V_q0;

assign corr7_out_V_keep_V_din = img_channel_0_keep_s_q0;

assign corr7_out_V_last_V_din = img_channel_0_last_s_q0;

assign corr7_out_V_user_V_din = img_channel_0_user_s_q0;

assign corr7_out_V_valid_V_din = 1'd0;

assign current_filter_fu_901_p2 = (current_filter_0_reg_647 + 6'd1);

assign current_input_channe_2_fu_815_p2 = (current_input_channe_reg_614 + 4'd1);

assign current_input_channe_3_fu_933_p2 = (current_input_channe_4_reg_658 + 4'd1);

assign current_line_fu_747_p2 = (current_line_0_reg_580 + 7'd1);

assign grp_CORRELATE_fu_704_ap_start = grp_CORRELATE_fu_704_ap_start_reg;

assign i_fu_759_p2 = (i_0_reg_592 + 6'd1);

assign icmp_ln1494_fu_1109_p2 = (($signed(aux_sum_V_fu_1099_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln863_fu_741_p2 = ((current_line_0_reg_580 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln866_fu_753_p2 = ((i_0_reg_592 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln867_fu_783_p2 = ((j_0_reg_603 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln871_fu_809_p2 = ((current_input_channe_reg_614 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln886_fu_777_p2 = ((current_line_0_reg_580 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln889_fu_864_p2 = ((index_input_element1_reg_636 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_833_p2 = ((index_input_element1_1_reg_625 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln943_fu_895_p2 = ((current_filter_0_reg_647 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln945_fu_927_p2 = ((current_input_channe_4_reg_658 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln953_fu_979_p2 = ((index_input_element2_reg_669 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln959_fu_1014_p2 = ((index_input_element2_4_reg_681 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln964_fu_1060_p2 = ((index_input_element2_5_reg_692 == 7'd64) ? 1'b1 : 1'b0);

assign index_input_element_5_fu_839_p2 = (index_input_element1_1_reg_625 + 7'd1);

assign index_input_element_6_fu_1066_p2 = (index_input_element2_5_reg_692 + 7'd1);

assign index_input_element_7_fu_1020_p2 = (index_input_element2_4_reg_681 + 7'd1);

assign index_input_element_fu_870_p2 = (index_input_element1_reg_636 + 7'd1);

assign io_acc_block_signal_op125 = (corr6_out_V_valid_V_empty_n & corr6_out_V_user_V_empty_n & corr6_out_V_last_V_empty_n & corr6_out_V_keep_V_empty_n & corr6_out_V_id_V_empty_n & corr6_out_V_dest_V_empty_n & corr6_out_V_data_V_empty_n);

assign io_acc_block_signal_op247 = (corr7_out_V_valid_V_full_n & corr7_out_V_user_V_full_n & corr7_out_V_last_V_full_n & corr7_out_V_keep_V_full_n & corr7_out_V_id_V_full_n & corr7_out_V_dest_V_full_n & corr7_out_V_data_V_full_n);

assign io_acc_block_signal_op96 = (corr6_out_V_valid_V_empty_n & corr6_out_V_user_V_empty_n & corr6_out_V_last_V_empty_n & corr6_out_V_keep_V_empty_n & corr6_out_V_id_V_empty_n & corr6_out_V_dest_V_empty_n & corr6_out_V_data_V_empty_n);

assign j_fu_789_p2 = (j_0_reg_603 + 7'd1);

assign p_Val2_5_fu_1115_p3 = ((icmp_ln1494_fu_1109_p2[0:0] === 1'b1) ? add_ln203_fu_1104_p2 : 11'd0);

assign sext_ln1265_fu_1052_p0 = biases_layer7_V_q0;

assign sext_ln1265_fu_1052_p1 = sext_ln1265_fu_1052_p0;

assign sext_ln203_fu_974_p1 = $signed(add_ln203_14_fu_969_p2);

assign sext_ln703_fu_1056_p0 = biases_layer7_V_q0;

assign sext_ln703_fu_1056_p1 = sext_ln703_fu_1056_p0;

assign sext_ln958_fu_1005_p1 = $signed(subfilter_layer_0_V_reg_1238);

assign start_out = real_start;

assign sub_ln203_fu_963_p2 = (zext_ln203_26_fu_947_p1 - zext_ln203_27_fu_959_p1);

assign tmp_28_fu_915_p3 = {{current_filter_0_reg_647}, {6'd0}};

assign tmp_29_fu_939_p3 = {{current_input_channe_4_reg_658}, {6'd0}};

assign tmp_30_fu_951_p3 = {{current_input_channe_4_reg_658}, {3'd0}};

assign tmp_data_V_6_fu_1123_p1 = p_Val2_5_reg_1327;

assign tmp_fu_765_p3 = {{i_0_reg_592}, {6'd0}};

assign tmp_s_fu_821_p3 = {{current_input_channe_reg_614}, {6'd0}};

assign trunc_ln703_fu_1095_p1 = out_layer_data_V_4_q0[10:0];

assign weights_layer7_V_0_address0 = sext_ln203_fu_974_p1;

assign zext_ln1265_10_fu_1081_p1 = add_ln1265_fu_1076_p2;

assign zext_ln1265_11_fu_1031_p1 = index_input_element2_4_reg_681;

assign zext_ln1265_12_fu_1040_p1 = add_ln1265_4_fu_1035_p2;

assign zext_ln1265_9_fu_1072_p1 = index_input_element2_5_reg_692;

assign zext_ln1265_fu_911_p1 = current_filter_0_reg_647;

assign zext_ln203_21_fu_804_p1 = add_ln203_11_fu_799_p2;

assign zext_ln203_22_fu_876_p1 = index_input_element1_reg_636;

assign zext_ln203_23_fu_885_p1 = add_ln203_12_fu_880_p2;

assign zext_ln203_24_fu_845_p1 = index_input_element1_1_reg_625;

assign zext_ln203_25_fu_854_p1 = add_ln203_13_fu_849_p2;

assign zext_ln203_26_fu_947_p1 = tmp_29_fu_939_p3;

assign zext_ln203_27_fu_959_p1 = tmp_30_fu_951_p3;

assign zext_ln203_28_fu_991_p1 = index_input_element2_reg_669;

assign zext_ln203_29_fu_1000_p1 = add_ln203_15_fu_995_p2;

assign zext_ln203_fu_795_p1 = j_0_reg_603;

assign zext_ln867_fu_773_p1 = tmp_fu_765_p3;

assign zext_ln886_fu_829_p1 = tmp_s_fu_821_p3;

assign zext_ln945_fu_923_p1 = tmp_28_fu_915_p3;

assign zext_ln949_fu_907_p1 = current_filter_0_reg_647;

assign zext_ln955_fu_1009_p1 = index_input_element2_reg_669;

assign zext_ln961_fu_1026_p1 = index_input_element2_4_reg_681;

assign zext_ln966_fu_1086_p1 = index_input_element2_5_reg_692;

always @ (posedge ap_clk) begin
    zext_ln867_reg_1144[5:0] <= 6'b000000;
    zext_ln867_reg_1144[12] <= 1'b0;
    zext_ln886_reg_1169[5:0] <= 6'b000000;
    zext_ln886_reg_1169[10] <= 1'b0;
    zext_ln949_reg_1199[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln1265_reg_1204[10:6] <= 5'b00000;
    zext_ln945_reg_1209[5:0] <= 6'b000000;
    zext_ln945_reg_1209[12] <= 1'b0;
    zext_ln203_26_reg_1223[5:0] <= 6'b000000;
    zext_ln203_26_reg_1223[10] <= 1'b0;
end

endmodule //conrr_layer7
