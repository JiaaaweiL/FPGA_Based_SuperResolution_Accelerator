// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conrr_layer1 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_in_TDATA,
        stream_in_TVALID,
        stream_in_TREADY,
        stream_in_TKEEP,
        stream_in_TSTRB,
        stream_in_TUSER,
        stream_in_TLAST,
        stream_in_TID,
        stream_in_TDEST,
        corr1_out_V_valid_V_din,
        corr1_out_V_valid_V_full_n,
        corr1_out_V_valid_V_write,
        corr1_out_V_data_V_din,
        corr1_out_V_data_V_full_n,
        corr1_out_V_data_V_write,
        corr1_out_V_keep_V_din,
        corr1_out_V_keep_V_full_n,
        corr1_out_V_keep_V_write,
        corr1_out_V_user_V_din,
        corr1_out_V_user_V_full_n,
        corr1_out_V_user_V_write,
        corr1_out_V_last_V_din,
        corr1_out_V_last_V_full_n,
        corr1_out_V_last_V_write,
        corr1_out_V_id_V_din,
        corr1_out_V_id_V_full_n,
        corr1_out_V_id_V_write,
        corr1_out_V_dest_V_din,
        corr1_out_V_dest_V_full_n,
        corr1_out_V_dest_V_write
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_pp0_stage0 = 27'd4;
parameter    ap_ST_fsm_state6 = 27'd8;
parameter    ap_ST_fsm_pp1_stage0 = 27'd16;
parameter    ap_ST_fsm_state9 = 27'd32;
parameter    ap_ST_fsm_pp2_stage0 = 27'd64;
parameter    ap_ST_fsm_state12 = 27'd128;
parameter    ap_ST_fsm_pp3_stage0 = 27'd256;
parameter    ap_ST_fsm_state15 = 27'd512;
parameter    ap_ST_fsm_state16 = 27'd1024;
parameter    ap_ST_fsm_state17 = 27'd2048;
parameter    ap_ST_fsm_pp4_stage0 = 27'd4096;
parameter    ap_ST_fsm_state20 = 27'd8192;
parameter    ap_ST_fsm_pp5_stage0 = 27'd16384;
parameter    ap_ST_fsm_state23 = 27'd32768;
parameter    ap_ST_fsm_pp6_stage0 = 27'd65536;
parameter    ap_ST_fsm_state26 = 27'd131072;
parameter    ap_ST_fsm_pp7_stage0 = 27'd262144;
parameter    ap_ST_fsm_state29 = 27'd524288;
parameter    ap_ST_fsm_state30 = 27'd1048576;
parameter    ap_ST_fsm_pp8_stage0 = 27'd2097152;
parameter    ap_ST_fsm_state33 = 27'd4194304;
parameter    ap_ST_fsm_state34 = 27'd8388608;
parameter    ap_ST_fsm_state35 = 27'd16777216;
parameter    ap_ST_fsm_state36 = 27'd33554432;
parameter    ap_ST_fsm_state37 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] stream_in_TDATA;
input   stream_in_TVALID;
output   stream_in_TREADY;
input  [3:0] stream_in_TKEEP;
input  [3:0] stream_in_TSTRB;
input  [0:0] stream_in_TUSER;
input  [0:0] stream_in_TLAST;
input  [0:0] stream_in_TID;
input  [0:0] stream_in_TDEST;
output  [0:0] corr1_out_V_valid_V_din;
input   corr1_out_V_valid_V_full_n;
output   corr1_out_V_valid_V_write;
output  [11:0] corr1_out_V_data_V_din;
input   corr1_out_V_data_V_full_n;
output   corr1_out_V_data_V_write;
output  [3:0] corr1_out_V_keep_V_din;
input   corr1_out_V_keep_V_full_n;
output   corr1_out_V_keep_V_write;
output  [0:0] corr1_out_V_user_V_din;
input   corr1_out_V_user_V_full_n;
output   corr1_out_V_user_V_write;
output  [0:0] corr1_out_V_last_V_din;
input   corr1_out_V_last_V_full_n;
output   corr1_out_V_last_V_write;
output  [0:0] corr1_out_V_id_V_din;
input   corr1_out_V_id_V_full_n;
output   corr1_out_V_id_V_write;
output  [0:0] corr1_out_V_dest_V_din;
input   corr1_out_V_dest_V_full_n;
output   corr1_out_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg corr1_out_V_valid_V_write;
reg corr1_out_V_data_V_write;
reg corr1_out_V_keep_V_write;
reg corr1_out_V_user_V_write;
reg corr1_out_V_last_V_write;
reg corr1_out_V_id_V_write;
reg corr1_out_V_dest_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] stream_in_V_data_V_0_data_out;
wire    stream_in_V_data_V_0_vld_in;
wire    stream_in_V_data_V_0_vld_out;
wire    stream_in_V_data_V_0_ack_in;
reg    stream_in_V_data_V_0_ack_out;
reg   [31:0] stream_in_V_data_V_0_payload_A;
reg   [31:0] stream_in_V_data_V_0_payload_B;
reg    stream_in_V_data_V_0_sel_rd;
reg    stream_in_V_data_V_0_sel_wr;
wire    stream_in_V_data_V_0_sel;
wire    stream_in_V_data_V_0_load_A;
wire    stream_in_V_data_V_0_load_B;
reg   [1:0] stream_in_V_data_V_0_state;
wire    stream_in_V_data_V_0_state_cmp_full;
reg   [3:0] stream_in_V_keep_V_0_data_out;
wire    stream_in_V_keep_V_0_vld_in;
wire    stream_in_V_keep_V_0_vld_out;
wire    stream_in_V_keep_V_0_ack_in;
reg    stream_in_V_keep_V_0_ack_out;
reg   [3:0] stream_in_V_keep_V_0_payload_A;
reg   [3:0] stream_in_V_keep_V_0_payload_B;
reg    stream_in_V_keep_V_0_sel_rd;
reg    stream_in_V_keep_V_0_sel_wr;
wire    stream_in_V_keep_V_0_sel;
wire    stream_in_V_keep_V_0_load_A;
wire    stream_in_V_keep_V_0_load_B;
reg   [1:0] stream_in_V_keep_V_0_state;
wire    stream_in_V_keep_V_0_state_cmp_full;
reg   [3:0] stream_in_V_strb_V_0_data_out;
wire    stream_in_V_strb_V_0_vld_in;
wire    stream_in_V_strb_V_0_vld_out;
wire    stream_in_V_strb_V_0_ack_in;
reg    stream_in_V_strb_V_0_ack_out;
reg   [3:0] stream_in_V_strb_V_0_payload_A;
reg   [3:0] stream_in_V_strb_V_0_payload_B;
reg    stream_in_V_strb_V_0_sel_rd;
reg    stream_in_V_strb_V_0_sel_wr;
wire    stream_in_V_strb_V_0_sel;
wire    stream_in_V_strb_V_0_load_A;
wire    stream_in_V_strb_V_0_load_B;
reg   [1:0] stream_in_V_strb_V_0_state;
wire    stream_in_V_strb_V_0_state_cmp_full;
reg   [0:0] stream_in_V_user_V_0_data_out;
wire    stream_in_V_user_V_0_vld_in;
wire    stream_in_V_user_V_0_vld_out;
wire    stream_in_V_user_V_0_ack_in;
reg    stream_in_V_user_V_0_ack_out;
reg   [0:0] stream_in_V_user_V_0_payload_A;
reg   [0:0] stream_in_V_user_V_0_payload_B;
reg    stream_in_V_user_V_0_sel_rd;
reg    stream_in_V_user_V_0_sel_wr;
wire    stream_in_V_user_V_0_sel;
wire    stream_in_V_user_V_0_load_A;
wire    stream_in_V_user_V_0_load_B;
reg   [1:0] stream_in_V_user_V_0_state;
wire    stream_in_V_user_V_0_state_cmp_full;
reg   [0:0] stream_in_V_last_V_0_data_out;
wire    stream_in_V_last_V_0_vld_in;
wire    stream_in_V_last_V_0_vld_out;
wire    stream_in_V_last_V_0_ack_in;
reg    stream_in_V_last_V_0_ack_out;
reg   [0:0] stream_in_V_last_V_0_payload_A;
reg   [0:0] stream_in_V_last_V_0_payload_B;
reg    stream_in_V_last_V_0_sel_rd;
reg    stream_in_V_last_V_0_sel_wr;
wire    stream_in_V_last_V_0_sel;
wire    stream_in_V_last_V_0_load_A;
wire    stream_in_V_last_V_0_load_B;
reg   [1:0] stream_in_V_last_V_0_state;
wire    stream_in_V_last_V_0_state_cmp_full;
reg   [0:0] stream_in_V_id_V_0_data_out;
wire    stream_in_V_id_V_0_vld_in;
wire    stream_in_V_id_V_0_vld_out;
wire    stream_in_V_id_V_0_ack_in;
reg    stream_in_V_id_V_0_ack_out;
reg   [0:0] stream_in_V_id_V_0_payload_A;
reg   [0:0] stream_in_V_id_V_0_payload_B;
reg    stream_in_V_id_V_0_sel_rd;
reg    stream_in_V_id_V_0_sel_wr;
wire    stream_in_V_id_V_0_sel;
wire    stream_in_V_id_V_0_load_A;
wire    stream_in_V_id_V_0_load_B;
reg   [1:0] stream_in_V_id_V_0_state;
wire    stream_in_V_id_V_0_state_cmp_full;
reg   [0:0] stream_in_V_dest_V_0_data_out;
wire    stream_in_V_dest_V_0_vld_in;
wire    stream_in_V_dest_V_0_vld_out;
wire    stream_in_V_dest_V_0_ack_in;
reg    stream_in_V_dest_V_0_ack_out;
reg   [0:0] stream_in_V_dest_V_0_payload_A;
reg   [0:0] stream_in_V_dest_V_0_payload_B;
reg    stream_in_V_dest_V_0_sel_rd;
reg    stream_in_V_dest_V_0_sel_wr;
wire    stream_in_V_dest_V_0_sel;
wire    stream_in_V_dest_V_0_load_A;
wire    stream_in_V_dest_V_0_load_B;
reg   [1:0] stream_in_V_dest_V_0_state;
wire    stream_in_V_dest_V_0_state_cmp_full;
wire   [10:0] weights_layer1_V_0_address0;
reg    weights_layer1_V_0_ce0;
wire   [5:0] weights_layer1_V_0_q0;
wire   [5:0] biases_layer1_V_address0;
reg    biases_layer1_V_ce0;
wire   [4:0] biases_layer1_V_q0;
reg    stream_in_TDATA_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage0;
wire   [0:0] icmp_ln119_fu_1974_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln144_fu_2170_p2;
reg    corr1_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state37;
reg    corr1_out_V_data_V_blk_n;
reg    corr1_out_V_keep_V_blk_n;
reg    corr1_out_V_user_V_blk_n;
reg    corr1_out_V_last_V_blk_n;
reg    corr1_out_V_id_V_blk_n;
reg    corr1_out_V_dest_V_blk_n;
reg   [8:0] indvar_flatten_reg_1497;
reg   [2:0] buffer_line_0_reg_1508;
reg   [6:0] buffer_col_0_reg_1519;
reg   [6:0] buffer_col14_0_reg_1530;
reg   [1:0] buffer_col15_0_reg_1541;
reg   [6:0] buffer_col16_0_reg_1552;
reg   [1:0] buffer_col18_0_reg_1575;
reg   [6:0] buffer_col19_0_reg_1587;
reg   [6:0] buffer_col20_0_reg_1598;
reg   [6:0] buffer_col21_0_reg_1609;
reg   [4:0] filter_element_0_0_reg_1631;
reg    ap_block_state1;
wire   [0:0] icmp_ln99_fu_1721_p2;
wire    ap_CS_fsm_state2;
wire   [6:0] current_line_fu_1727_p2;
reg   [6:0] current_line_reg_2825;
wire   [0:0] icmp_ln102_fu_1733_p2;
wire   [0:0] icmp_ln104_fu_1745_p2;
reg   [0:0] icmp_ln104_reg_2834;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln104_reg_2834_pp0_iter1_reg;
wire   [8:0] add_ln104_fu_1751_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln109_1_fu_1771_p3;
reg   [2:0] select_ln109_1_reg_2843;
wire   [63:0] zext_ln321_339_fu_1863_p1;
reg   [63:0] zext_ln321_339_reg_2848;
wire   [13:0] add_ln321_265_fu_1871_p2;
reg   [13:0] add_ln321_265_reg_2856;
wire   [6:0] buffer_col_fu_1877_p2;
wire   [63:0] zext_ln321_340_fu_1883_p1;
reg   [63:0] zext_ln321_340_reg_2891;
wire   [0:0] icmp_ln116_fu_1890_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] and_ln116_fu_1902_p2;
wire   [13:0] add_ln321_266_fu_1932_p2;
reg   [13:0] add_ln321_266_reg_2922;
reg   [8:0] buffer_data_V_addr_3_reg_2930;
reg   [8:0] buffer_data_V_addr_5_reg_2935;
reg   [8:0] buffer_keep_V_addr_3_reg_2940;
reg   [8:0] buffer_keep_V_addr_5_reg_2945;
reg   [8:0] buffer_strb_V_addr_3_reg_2950;
reg   [8:0] buffer_strb_V_addr_5_reg_2955;
reg   [8:0] buffer_user_V_addr_3_reg_2960;
reg   [8:0] buffer_user_V_addr_5_reg_2965;
reg   [8:0] buffer_last_V_addr_3_reg_2970;
reg   [8:0] buffer_last_V_addr_5_reg_2975;
reg   [8:0] buffer_id_V_addr_3_reg_2980;
reg   [8:0] buffer_id_V_addr_5_reg_2985;
reg   [8:0] buffer_dest_V_addr_3_reg_2990;
reg   [8:0] buffer_dest_V_addr_5_reg_2995;
reg   [12:0] img_channel_V_addr_4_reg_3000;
reg   [12:0] img_channel_V_addr_6_reg_3005;
reg   [0:0] icmp_ln119_reg_3010;
reg    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [63:0] zext_ln321_345_fu_1989_p1;
reg   [63:0] zext_ln321_345_reg_3014;
wire   [24:0] trunc_ln1148_fu_2016_p1;
reg   [24:0] trunc_ln1148_reg_3019;
reg   [0:0] tmp_58_reg_3024;
reg   [5:0] tmp_60_reg_3030;
wire   [6:0] buffer_col_1_fu_2028_p2;
wire   [0:0] icmp_ln126_fu_2077_p2;
reg   [0:0] icmp_ln126_reg_3040;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state11_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [1:0] buffer_col_2_fu_2083_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] or_ln321_3_fu_2092_p2;
reg   [1:0] or_ln321_3_reg_3049;
wire   [0:0] icmp_ln133_fu_2126_p2;
reg   [0:0] icmp_ln133_reg_3054;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state13_pp3_stage0_iter0;
wire    ap_block_state14_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [13:0] add_ln321_269_fu_2136_p2;
reg   [13:0] add_ln321_269_reg_3058;
wire   [6:0] buffer_col_3_fu_2141_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] icmp_ln141_fu_2158_p2;
reg   [0:0] icmp_ln141_reg_3068;
wire    ap_CS_fsm_state15;
wire   [0:0] or_ln141_fu_2164_p2;
reg    ap_block_state16;
reg   [31:0] tmp_data_V_17_reg_3080;
reg   [3:0] tmp_keep_V_16_reg_3085;
reg   [3:0] tmp_strb_V_1_reg_3090;
reg   [0:0] tmp_user_V_15_reg_3095;
reg   [0:0] tmp_last_V_16_reg_3100;
reg   [0:0] tmp_id_V_16_reg_3105;
reg   [0:0] tmp_dest_V_16_reg_3110;
wire   [24:0] trunc_ln1148_1_fu_2192_p1;
reg   [24:0] trunc_ln1148_1_reg_3115;
reg   [0:0] tmp_64_reg_3120;
reg   [5:0] tmp_66_reg_3126;
wire   [6:0] buffer_col_4_fu_2269_p2;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln150_fu_2275_p2;
reg   [0:0] icmp_ln150_reg_3136;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state18_pp4_stage0_iter0;
wire    ap_block_state19_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [1:0] buffer_col_5_fu_2281_p2;
reg   [1:0] buffer_col_5_reg_3140;
reg    ap_enable_reg_pp4_iter0;
wire   [0:0] icmp_ln157_fu_2303_p2;
reg   [0:0] icmp_ln157_reg_3145;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state21_pp5_stage0_iter0;
wire    ap_block_state22_pp5_stage0_iter1;
wire    ap_block_pp5_stage0_11001;
wire   [8:0] add_ln321_271_fu_2313_p2;
reg   [8:0] add_ln321_271_reg_3149;
wire   [6:0] buffer_col_6_fu_2319_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [0:0] and_ln165_fu_2348_p2;
wire    ap_CS_fsm_state23;
wire   [13:0] add_ln321_272_fu_2378_p2;
reg   [13:0] add_ln321_272_reg_3163;
wire   [0:0] icmp_ln167_fu_2384_p2;
reg   [0:0] icmp_ln167_reg_3168;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state24_pp6_stage0_iter0;
wire    ap_block_state25_pp6_stage0_iter1;
wire    ap_block_pp6_stage0_11001;
wire   [6:0] buffer_col_7_fu_2390_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [13:0] add_ln321_273_fu_2412_p2;
reg   [13:0] add_ln321_273_reg_3182;
wire   [0:0] icmp_ln177_fu_2428_p2;
reg   [0:0] icmp_ln177_reg_3222;
wire    ap_CS_fsm_pp7_stage0;
wire    ap_block_state27_pp7_stage0_iter0;
wire    ap_block_state28_pp7_stage0_iter1;
wire    ap_block_pp7_stage0_11001;
wire   [6:0] buffer_col_8_fu_2434_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [8:0] zext_ln321_357_fu_2440_p1;
reg   [8:0] zext_ln321_357_reg_3231;
wire   [0:0] grp_fu_1672_p2;
reg   [0:0] icmp_ln185_reg_3276;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln187_fu_2479_p2;
wire    ap_CS_fsm_state30;
wire   [5:0] current_filter_fu_2485_p2;
reg   [5:0] current_filter_reg_3284;
wire   [63:0] zext_ln194_fu_2491_p1;
reg   [63:0] zext_ln194_reg_3289;
wire   [11:0] zext_ln162_fu_2495_p1;
reg   [11:0] zext_ln162_reg_3294;
wire   [12:0] zext_ln191_fu_2507_p1;
reg   [12:0] zext_ln191_reg_3299;
wire   [0:0] icmp_ln191_fu_2511_p2;
reg   [0:0] icmp_ln191_reg_3304;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state31_pp8_stage0_iter0;
wire    ap_block_state32_pp8_stage0_iter1;
wire    ap_block_pp8_stage0_11001;
wire   [4:0] add_ln191_fu_2517_p2;
reg   [4:0] add_ln191_reg_3308;
reg    ap_enable_reg_pp8_iter0;
wire    ap_CS_fsm_state33;
wire  signed [11:0] sext_ln1265_fu_2573_p1;
reg  signed [11:0] sext_ln1265_reg_3323;
wire    ap_CS_fsm_state34;
wire    grp_CORRELATE_2_fu_1655_ap_ready;
wire    grp_CORRELATE_2_fu_1655_ap_done;
wire  signed [10:0] sext_ln703_fu_2577_p1;
reg  signed [10:0] sext_ln703_reg_3328;
wire   [6:0] k_fu_2587_p2;
reg   [6:0] k_reg_3336;
wire    ap_CS_fsm_state35;
wire   [0:0] icmp_ln198_fu_2581_p2;
wire  signed [11:0] select_ln6_fu_2640_p3;
reg  signed [11:0] select_ln6_reg_3351;
wire    ap_CS_fsm_state36;
wire   [10:0] select_ln13_fu_2648_p3;
reg   [10:0] select_ln13_reg_3357;
wire   [0:0] out_layer_valid_V_q0;
reg   [0:0] tmp_valid_V_reg_3387;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
wire    ap_CS_fsm_state9;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_enable_reg_pp2_iter1;
wire    ap_CS_fsm_state12;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state13;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state18;
reg    ap_enable_reg_pp4_iter1;
wire    ap_CS_fsm_state20;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state21;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state24;
reg    ap_enable_reg_pp6_iter1;
wire    ap_CS_fsm_state26;
wire    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state27;
reg    ap_enable_reg_pp7_iter1;
wire    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state31;
reg    ap_enable_reg_pp8_iter1;
reg   [4:0] subfilter_layer_V_address0;
reg    subfilter_layer_V_ce0;
reg    subfilter_layer_V_we0;
wire   [6:0] subfilter_layer_V_d0;
wire   [6:0] subfilter_layer_V_q0;
reg   [5:0] correlate_img_address0;
reg    correlate_img_ce0;
reg    correlate_img_we0;
wire   [11:0] correlate_img_q0;
wire   [11:0] out_layer_valid_V_address0;
reg    out_layer_valid_V_ce0;
reg   [8:0] buffer_data_V_address0;
reg    buffer_data_V_ce0;
reg    buffer_data_V_we0;
reg   [31:0] buffer_data_V_d0;
wire   [31:0] buffer_data_V_q0;
reg   [8:0] buffer_data_V_address1;
reg    buffer_data_V_ce1;
reg    buffer_data_V_we1;
reg   [31:0] buffer_data_V_d1;
wire   [31:0] buffer_data_V_q1;
reg   [8:0] buffer_keep_V_address0;
reg    buffer_keep_V_ce0;
reg    buffer_keep_V_we0;
reg   [3:0] buffer_keep_V_d0;
wire   [3:0] buffer_keep_V_q0;
reg   [8:0] buffer_keep_V_address1;
reg    buffer_keep_V_ce1;
reg    buffer_keep_V_we1;
reg   [3:0] buffer_keep_V_d1;
wire   [3:0] buffer_keep_V_q1;
reg   [8:0] buffer_strb_V_address0;
reg    buffer_strb_V_ce0;
reg    buffer_strb_V_we0;
reg   [3:0] buffer_strb_V_d0;
wire   [3:0] buffer_strb_V_q0;
reg   [8:0] buffer_strb_V_address1;
reg    buffer_strb_V_ce1;
reg    buffer_strb_V_we1;
reg   [3:0] buffer_strb_V_d1;
wire   [3:0] buffer_strb_V_q1;
reg   [8:0] buffer_user_V_address0;
reg    buffer_user_V_ce0;
reg    buffer_user_V_we0;
reg   [0:0] buffer_user_V_d0;
wire   [0:0] buffer_user_V_q0;
reg   [8:0] buffer_user_V_address1;
reg    buffer_user_V_ce1;
reg    buffer_user_V_we1;
reg   [0:0] buffer_user_V_d1;
wire   [0:0] buffer_user_V_q1;
reg   [8:0] buffer_last_V_address0;
reg    buffer_last_V_ce0;
reg    buffer_last_V_we0;
reg   [0:0] buffer_last_V_d0;
wire   [0:0] buffer_last_V_q0;
reg   [8:0] buffer_last_V_address1;
reg    buffer_last_V_ce1;
reg    buffer_last_V_we1;
reg   [0:0] buffer_last_V_d1;
wire   [0:0] buffer_last_V_q1;
reg   [8:0] buffer_id_V_address0;
reg    buffer_id_V_ce0;
reg    buffer_id_V_we0;
reg   [0:0] buffer_id_V_d0;
wire   [0:0] buffer_id_V_q0;
reg   [8:0] buffer_id_V_address1;
reg    buffer_id_V_ce1;
reg    buffer_id_V_we1;
reg   [0:0] buffer_id_V_d1;
wire   [0:0] buffer_id_V_q1;
reg   [8:0] buffer_dest_V_address0;
reg    buffer_dest_V_ce0;
reg    buffer_dest_V_we0;
reg   [0:0] buffer_dest_V_d0;
wire   [0:0] buffer_dest_V_q0;
reg   [8:0] buffer_dest_V_address1;
reg    buffer_dest_V_ce1;
reg    buffer_dest_V_we1;
reg   [0:0] buffer_dest_V_d1;
wire   [0:0] buffer_dest_V_q1;
reg   [12:0] img_channel_V_address0;
reg    img_channel_V_ce0;
reg    img_channel_V_we0;
reg   [11:0] img_channel_V_d0;
wire   [11:0] img_channel_V_q0;
reg   [12:0] img_channel_V_address1;
reg    img_channel_V_ce1;
reg    img_channel_V_we1;
reg   [11:0] img_channel_V_d1;
wire   [11:0] img_channel_V_q1;
wire    grp_CORRELATE_2_fu_1655_ap_start;
wire    grp_CORRELATE_2_fu_1655_ap_idle;
wire   [12:0] grp_CORRELATE_2_fu_1655_prev_output_channel_V_address0;
wire    grp_CORRELATE_2_fu_1655_prev_output_channel_V_ce0;
wire   [4:0] grp_CORRELATE_2_fu_1655_filter_V_address0;
wire    grp_CORRELATE_2_fu_1655_filter_V_ce0;
wire   [5:0] grp_CORRELATE_2_fu_1655_correlate_img_V_address0;
wire    grp_CORRELATE_2_fu_1655_correlate_img_V_ce0;
wire    grp_CORRELATE_2_fu_1655_correlate_img_V_we0;
wire   [11:0] grp_CORRELATE_2_fu_1655_correlate_img_V_d0;
reg   [6:0] current_line_0_reg_1485;
reg   [2:0] ap_phi_mux_buffer_line_0_phi_fu_1512_p4;
wire    ap_block_pp0_stage0;
reg   [6:0] buffer_col17_0_reg_1563;
reg   [1:0] ap_phi_mux_buffer_col18_0_phi_fu_1579_p4;
wire    ap_block_pp4_stage0;
reg   [5:0] current_filter_0_reg_1620;
reg   [4:0] ap_phi_mux_filter_element_0_0_phi_fu_1635_p4;
wire    ap_block_pp8_stage0;
reg   [6:0] k_0_reg_1643;
wire    io_acc_block_signal_op692;
reg    grp_CORRELATE_2_fu_1655_ap_start_reg;
wire   [63:0] zext_ln321_343_fu_1944_p1;
wire  signed [63:0] sext_ln321_fu_1962_p1;
wire   [63:0] zext_ln321_346_fu_2114_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln321_348_fu_2147_p1;
wire    ap_block_pp3_stage0;
wire   [63:0] zext_ln321_350_fu_2214_p1;
wire   [63:0] tmp_107_fu_2287_p3;
wire   [63:0] zext_ln321_352_fu_2325_p1;
wire    ap_block_pp5_stage0;
wire   [63:0] zext_ln170_fu_2396_p1;
wire    ap_block_pp6_stage0;
wire   [63:0] zext_ln321_356_fu_2417_p1;
wire   [63:0] zext_ln321_358_fu_2450_p1;
wire    ap_block_pp7_stage0;
wire   [63:0] zext_ln321_359_fu_2467_p1;
wire  signed [63:0] sext_ln203_fu_2558_p1;
wire   [63:0] zext_ln194_1_fu_2563_p1;
wire   [63:0] zext_ln162_2_fu_2607_p1;
wire   [63:0] zext_ln200_fu_2593_p1;
wire   [63:0] zext_ln321_361_fu_2672_p1;
wire   [11:0] select_ln1148_1_fu_2069_p3;
wire   [11:0] select_ln1148_3_fu_2261_p3;
wire   [4:0] grp_fu_1662_p4;
wire   [0:0] icmp_ln106_fu_1757_p2;
wire   [2:0] buffer_line_fu_1739_p2;
wire   [8:0] tmp_53_fu_1779_p3;
wire   [4:0] tmp_54_fu_1791_p3;
wire   [13:0] zext_ln321_fu_1787_p1;
wire   [13:0] zext_ln321_335_fu_1799_p1;
wire   [2:0] add_ln109_fu_1809_p2;
wire   [2:0] select_ln109_2_fu_1815_p3;
wire   [8:0] tmp_55_fu_1823_p3;
wire   [4:0] tmp_56_fu_1835_p3;
wire   [13:0] zext_ln321_336_fu_1831_p1;
wire   [13:0] zext_ln321_337_fu_1843_p1;
wire   [6:0] select_ln109_fu_1763_p3;
wire   [13:0] zext_ln321_338_fu_1853_p1;
wire   [13:0] add_ln321_263_fu_1847_p2;
wire   [13:0] add_ln321_264_fu_1857_p2;
wire   [13:0] add_ln321_fu_1803_p2;
wire   [0:0] icmp_ln116_1_fu_1896_p2;
wire   [12:0] tmp_105_fu_1908_p3;
wire   [8:0] tmp_106_fu_1920_p3;
wire   [13:0] zext_ln321_342_fu_1928_p1;
wire   [13:0] zext_ln321_341_fu_1916_p1;
wire   [13:0] or_ln321_fu_1938_p2;
wire   [13:0] add_ln321_267_fu_1956_p2;
wire   [13:0] zext_ln321_344_fu_1980_p1;
wire   [13:0] add_ln321_268_fu_1984_p2;
wire   [7:0] trunc_ln731_fu_2000_p1;
wire  signed [11:0] t_V_fu_2004_p3;
wire  signed [25:0] mul_ln1148_fu_2725_p2;
wire   [24:0] sub_ln1148_fu_2034_p2;
wire   [4:0] tmp_59_fu_2039_p4;
wire  signed [11:0] sext_ln1148_1_fu_2049_p1;
wire  signed [11:0] sext_ln1148_2_fu_2053_p1;
wire   [11:0] select_ln1148_fu_2056_p3;
wire   [11:0] sub_ln1148_1_fu_2063_p2;
wire   [1:0] trunc_ln321_fu_2089_p1;
wire   [11:0] tmp_61_fu_2098_p4;
wire   [13:0] tmp_62_fu_2107_p3;
wire   [13:0] zext_ln321_347_fu_2132_p1;
wire   [7:0] trunc_ln731_1_fu_2176_p1;
wire  signed [11:0] t_V_1_fu_2180_p3;
wire  signed [25:0] mul_ln1148_1_fu_2733_p2;
wire   [8:0] zext_ln321_349_fu_2204_p1;
wire   [8:0] add_ln321_270_fu_2208_p2;
wire   [24:0] sub_ln1148_2_fu_2226_p2;
wire   [4:0] tmp_65_fu_2231_p4;
wire  signed [11:0] sext_ln1148_4_fu_2241_p1;
wire  signed [11:0] sext_ln1148_5_fu_2245_p1;
wire   [11:0] select_ln1148_2_fu_2248_p3;
wire   [11:0] sub_ln1148_3_fu_2255_p2;
wire   [8:0] zext_ln321_351_fu_2309_p1;
wire   [0:0] icmp_ln165_fu_2336_p2;
wire   [0:0] icmp_ln165_1_fu_2342_p2;
wire   [12:0] tmp_108_fu_2354_p3;
wire   [8:0] tmp_109_fu_2366_p3;
wire   [13:0] zext_ln321_354_fu_2374_p1;
wire   [13:0] zext_ln321_353_fu_2362_p1;
wire   [13:0] zext_ln321_355_fu_2408_p1;
wire   [8:0] add_ln321_274_fu_2444_p2;
wire   [8:0] add_ln321_275_fu_2462_p2;
wire   [11:0] tmp_110_fu_2499_p3;
wire   [10:0] tmp_111_fu_2523_p3;
wire   [7:0] tmp_112_fu_2535_p3;
wire   [11:0] zext_ln203_fu_2531_p1;
wire   [11:0] zext_ln203_94_fu_2543_p1;
wire   [11:0] sub_ln203_fu_2547_p2;
wire   [11:0] add_ln203_56_fu_2553_p2;
wire  signed [4:0] sext_ln1265_fu_2573_p0;
wire  signed [4:0] sext_ln703_fu_2577_p0;
wire   [12:0] zext_ln162_1_fu_2598_p1;
wire   [12:0] add_ln162_fu_2602_p2;
wire   [10:0] trunc_ln703_fu_2612_p1;
wire   [11:0] aux_sum_V_fu_2616_p2;
wire   [0:0] tmp_68_fu_2632_p3;
wire   [0:0] icmp_ln1494_fu_2626_p2;
wire   [10:0] add_ln203_1_fu_2621_p2;
wire   [6:0] add_ln203_fu_2656_p2;
wire   [7:0] zext_ln321_360_fu_2662_p1;
wire   [7:0] add_ln321_276_fu_2666_p2;
wire  signed [15:0] sext_ln1192_fu_2681_p1;
wire   [15:0] p_shl_fu_2684_p3;
wire   [14:0] lhs_V_fu_2697_p3;
wire   [15:0] zext_ln728_fu_2704_p1;
wire   [15:0] sub_ln1192_fu_2691_p2;
wire   [15:0] ret_V_fu_2708_p2;
wire   [13:0] mul_ln1148_fu_2725_p1;
wire   [13:0] mul_ln1148_1_fu_2733_p1;
reg   [26:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 27'd1;
#0 stream_in_V_data_V_0_sel_rd = 1'b0;
#0 stream_in_V_data_V_0_sel_wr = 1'b0;
#0 stream_in_V_data_V_0_state = 2'd0;
#0 stream_in_V_keep_V_0_sel_rd = 1'b0;
#0 stream_in_V_keep_V_0_sel_wr = 1'b0;
#0 stream_in_V_keep_V_0_state = 2'd0;
#0 stream_in_V_strb_V_0_sel_rd = 1'b0;
#0 stream_in_V_strb_V_0_sel_wr = 1'b0;
#0 stream_in_V_strb_V_0_state = 2'd0;
#0 stream_in_V_user_V_0_sel_rd = 1'b0;
#0 stream_in_V_user_V_0_sel_wr = 1'b0;
#0 stream_in_V_user_V_0_state = 2'd0;
#0 stream_in_V_last_V_0_sel_rd = 1'b0;
#0 stream_in_V_last_V_0_sel_wr = 1'b0;
#0 stream_in_V_last_V_0_state = 2'd0;
#0 stream_in_V_id_V_0_sel_rd = 1'b0;
#0 stream_in_V_id_V_0_sel_wr = 1'b0;
#0 stream_in_V_id_V_0_state = 2'd0;
#0 stream_in_V_dest_V_0_sel_rd = 1'b0;
#0 stream_in_V_dest_V_0_sel_wr = 1'b0;
#0 stream_in_V_dest_V_0_state = 2'd0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 grp_CORRELATE_2_fu_1655_ap_start_reg = 1'b0;
end

conrr_layer1_weigcud #(
    .DataWidth( 6 ),
    .AddressRange( 1400 ),
    .AddressWidth( 11 ))
weights_layer1_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer1_V_0_address0),
    .ce0(weights_layer1_V_0_ce0),
    .q0(weights_layer1_V_0_q0)
);

conrr_layer1_biasdEe #(
    .DataWidth( 5 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
biases_layer1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_layer1_V_address0),
    .ce0(biases_layer1_V_ce0),
    .q0(biases_layer1_V_q0)
);

conrr_layer1_subfeOg #(
    .DataWidth( 7 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
subfilter_layer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(subfilter_layer_V_address0),
    .ce0(subfilter_layer_V_ce0),
    .we0(subfilter_layer_V_we0),
    .d0(subfilter_layer_V_d0),
    .q0(subfilter_layer_V_q0)
);

conrr_layer1_corrfYi #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
correlate_img_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(correlate_img_address0),
    .ce0(correlate_img_ce0),
    .we0(correlate_img_we0),
    .d0(grp_CORRELATE_2_fu_1655_correlate_img_V_d0),
    .q0(correlate_img_q0)
);

conrr_layer1_out_g8j #(
    .DataWidth( 1 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
out_layer_valid_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_layer_valid_V_address0),
    .ce0(out_layer_valid_V_ce0),
    .q0(out_layer_valid_V_q0)
);

conrr_layer1_buffhbi #(
    .DataWidth( 32 ),
    .AddressRange( 340 ),
    .AddressWidth( 9 ))
buffer_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_data_V_address0),
    .ce0(buffer_data_V_ce0),
    .we0(buffer_data_V_we0),
    .d0(buffer_data_V_d0),
    .q0(buffer_data_V_q0),
    .address1(buffer_data_V_address1),
    .ce1(buffer_data_V_ce1),
    .we1(buffer_data_V_we1),
    .d1(buffer_data_V_d1),
    .q1(buffer_data_V_q1)
);

conrr_layer1_buffibs #(
    .DataWidth( 4 ),
    .AddressRange( 340 ),
    .AddressWidth( 9 ))
buffer_keep_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_keep_V_address0),
    .ce0(buffer_keep_V_ce0),
    .we0(buffer_keep_V_we0),
    .d0(buffer_keep_V_d0),
    .q0(buffer_keep_V_q0),
    .address1(buffer_keep_V_address1),
    .ce1(buffer_keep_V_ce1),
    .we1(buffer_keep_V_we1),
    .d1(buffer_keep_V_d1),
    .q1(buffer_keep_V_q1)
);

conrr_layer1_buffibs #(
    .DataWidth( 4 ),
    .AddressRange( 340 ),
    .AddressWidth( 9 ))
buffer_strb_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_strb_V_address0),
    .ce0(buffer_strb_V_ce0),
    .we0(buffer_strb_V_we0),
    .d0(buffer_strb_V_d0),
    .q0(buffer_strb_V_q0),
    .address1(buffer_strb_V_address1),
    .ce1(buffer_strb_V_ce1),
    .we1(buffer_strb_V_we1),
    .d1(buffer_strb_V_d1),
    .q1(buffer_strb_V_q1)
);

conrr_layer1_buffkbM #(
    .DataWidth( 1 ),
    .AddressRange( 340 ),
    .AddressWidth( 9 ))
buffer_user_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_user_V_address0),
    .ce0(buffer_user_V_ce0),
    .we0(buffer_user_V_we0),
    .d0(buffer_user_V_d0),
    .q0(buffer_user_V_q0),
    .address1(buffer_user_V_address1),
    .ce1(buffer_user_V_ce1),
    .we1(buffer_user_V_we1),
    .d1(buffer_user_V_d1),
    .q1(buffer_user_V_q1)
);

conrr_layer1_buffkbM #(
    .DataWidth( 1 ),
    .AddressRange( 340 ),
    .AddressWidth( 9 ))
buffer_last_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_last_V_address0),
    .ce0(buffer_last_V_ce0),
    .we0(buffer_last_V_we0),
    .d0(buffer_last_V_d0),
    .q0(buffer_last_V_q0),
    .address1(buffer_last_V_address1),
    .ce1(buffer_last_V_ce1),
    .we1(buffer_last_V_we1),
    .d1(buffer_last_V_d1),
    .q1(buffer_last_V_q1)
);

conrr_layer1_buffkbM #(
    .DataWidth( 1 ),
    .AddressRange( 340 ),
    .AddressWidth( 9 ))
buffer_id_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_id_V_address0),
    .ce0(buffer_id_V_ce0),
    .we0(buffer_id_V_we0),
    .d0(buffer_id_V_d0),
    .q0(buffer_id_V_q0),
    .address1(buffer_id_V_address1),
    .ce1(buffer_id_V_ce1),
    .we1(buffer_id_V_we1),
    .d1(buffer_id_V_d1),
    .q1(buffer_id_V_q1)
);

conrr_layer1_buffkbM #(
    .DataWidth( 1 ),
    .AddressRange( 340 ),
    .AddressWidth( 9 ))
buffer_dest_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buffer_dest_V_address0),
    .ce0(buffer_dest_V_ce0),
    .we0(buffer_dest_V_we0),
    .d0(buffer_dest_V_d0),
    .q0(buffer_dest_V_q0),
    .address1(buffer_dest_V_address1),
    .ce1(buffer_dest_V_ce1),
    .we1(buffer_dest_V_we1),
    .d1(buffer_dest_V_d1),
    .q1(buffer_dest_V_q1)
);

conrr_layer1_img_ocq #(
    .DataWidth( 12 ),
    .AddressRange( 5508 ),
    .AddressWidth( 13 ))
img_channel_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_V_address0),
    .ce0(img_channel_V_ce0),
    .we0(img_channel_V_we0),
    .d0(img_channel_V_d0),
    .q0(img_channel_V_q0),
    .address1(img_channel_V_address1),
    .ce1(img_channel_V_ce1),
    .we1(img_channel_V_we1),
    .d1(img_channel_V_d1),
    .q1(img_channel_V_q1)
);

CORRELATE_2 grp_CORRELATE_2_fu_1655(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CORRELATE_2_fu_1655_ap_start),
    .ap_done(grp_CORRELATE_2_fu_1655_ap_done),
    .ap_idle(grp_CORRELATE_2_fu_1655_ap_idle),
    .ap_ready(grp_CORRELATE_2_fu_1655_ap_ready),
    .prev_output_channel_V_address0(grp_CORRELATE_2_fu_1655_prev_output_channel_V_address0),
    .prev_output_channel_V_ce0(grp_CORRELATE_2_fu_1655_prev_output_channel_V_ce0),
    .prev_output_channel_V_q0(img_channel_V_q0),
    .filter_V_address0(grp_CORRELATE_2_fu_1655_filter_V_address0),
    .filter_V_ce0(grp_CORRELATE_2_fu_1655_filter_V_ce0),
    .filter_V_q0(subfilter_layer_V_q0),
    .correlate_img_V_address0(grp_CORRELATE_2_fu_1655_correlate_img_V_address0),
    .correlate_img_V_ce0(grp_CORRELATE_2_fu_1655_correlate_img_V_ce0),
    .correlate_img_V_we0(grp_CORRELATE_2_fu_1655_correlate_img_V_we0),
    .correlate_img_V_d0(grp_CORRELATE_2_fu_1655_correlate_img_V_d0)
);

FSRCNN_mul_mul_12pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 26 ))
FSRCNN_mul_mul_12pcA_U6(
    .din0(t_V_fu_2004_p3),
    .din1(mul_ln1148_fu_2725_p1),
    .dout(mul_ln1148_fu_2725_p2)
);

FSRCNN_mul_mul_12pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 26 ))
FSRCNN_mul_mul_12pcA_U7(
    .din0(t_V_1_fu_2180_p3),
    .din1(mul_ln1148_1_fu_2733_p1),
    .dout(mul_ln1148_1_fu_2733_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln99_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln102_fu_1733_p2 == 1'd1) & (icmp_ln99_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln102_fu_1733_p2 == 1'd1) & (icmp_ln99_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & ((1'd1 == and_ln116_fu_1902_p2) | (icmp_ln116_fu_1890_p2 == 1'd1)))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state6) & ((1'd1 == and_ln116_fu_1902_p2) | (icmp_ln116_fu_1890_p2 == 1'd1)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state10);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state13) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state13) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state18) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state18) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if ((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state21) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp5_exit_iter0_state21) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state21);
        end else if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state24) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln165_fu_2348_p2) & (1'b1 == ap_CS_fsm_state23))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp6_exit_iter0_state24) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state24);
        end else if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
        end else if (((1'd1 == and_ln165_fu_2348_p2) & (1'b1 == ap_CS_fsm_state23))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state27) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if (((icmp_ln141_reg_3068 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp7_exit_iter0_state27) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state27);
        end else if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
        end else if (((icmp_ln141_reg_3068 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
            ap_enable_reg_pp7_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp8_exit_iter0_state31) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if (((icmp_ln187_fu_2479_p2 == 1'd0) & (icmp_ln185_reg_3276 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp8_exit_iter0_state31) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
            ap_enable_reg_pp8_iter1 <= (1'b1 ^ ap_condition_pp8_exit_iter0_state31);
        end else if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
        end else if (((icmp_ln187_fu_2479_p2 == 1'd0) & (icmp_ln185_reg_3276 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
            ap_enable_reg_pp8_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CORRELATE_2_fu_1655_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state33)) begin
            grp_CORRELATE_2_fu_1655_ap_start_reg <= 1'b1;
        end else if ((grp_CORRELATE_2_fu_1655_ap_ready == 1'b1)) begin
            grp_CORRELATE_2_fu_1655_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_data_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_V_data_V_0_ack_out == 1'b1) & (stream_in_V_data_V_0_vld_out == 1'b1))) begin
            stream_in_V_data_V_0_sel_rd <= ~stream_in_V_data_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_data_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_V_data_V_0_ack_in == 1'b1) & (stream_in_V_data_V_0_vld_in == 1'b1))) begin
            stream_in_V_data_V_0_sel_wr <= ~stream_in_V_data_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_data_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_V_data_V_0_state == 2'd2) & (stream_in_V_data_V_0_vld_in == 1'b0)) | ((stream_in_V_data_V_0_state == 2'd3) & (stream_in_V_data_V_0_vld_in == 1'b0) & (stream_in_V_data_V_0_ack_out == 1'b1)))) begin
            stream_in_V_data_V_0_state <= 2'd2;
        end else if ((((stream_in_V_data_V_0_state == 2'd1) & (stream_in_V_data_V_0_ack_out == 1'b0)) | ((stream_in_V_data_V_0_state == 2'd3) & (stream_in_V_data_V_0_ack_out == 1'b0) & (stream_in_V_data_V_0_vld_in == 1'b1)))) begin
            stream_in_V_data_V_0_state <= 2'd1;
        end else if (((~((stream_in_V_data_V_0_vld_in == 1'b0) & (stream_in_V_data_V_0_ack_out == 1'b1)) & ~((stream_in_V_data_V_0_ack_out == 1'b0) & (stream_in_V_data_V_0_vld_in == 1'b1)) & (stream_in_V_data_V_0_state == 2'd3)) | ((stream_in_V_data_V_0_state == 2'd1) & (stream_in_V_data_V_0_ack_out == 1'b1)) | ((stream_in_V_data_V_0_state == 2'd2) & (stream_in_V_data_V_0_vld_in == 1'b1)))) begin
            stream_in_V_data_V_0_state <= 2'd3;
        end else begin
            stream_in_V_data_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_dest_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_V_dest_V_0_ack_out == 1'b1) & (stream_in_V_dest_V_0_vld_out == 1'b1))) begin
            stream_in_V_dest_V_0_sel_rd <= ~stream_in_V_dest_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_dest_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_V_dest_V_0_ack_in == 1'b1) & (stream_in_V_dest_V_0_vld_in == 1'b1))) begin
            stream_in_V_dest_V_0_sel_wr <= ~stream_in_V_dest_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_dest_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_V_dest_V_0_state == 2'd2) & (stream_in_V_dest_V_0_vld_in == 1'b0)) | ((stream_in_V_dest_V_0_state == 2'd3) & (stream_in_V_dest_V_0_vld_in == 1'b0) & (stream_in_V_dest_V_0_ack_out == 1'b1)))) begin
            stream_in_V_dest_V_0_state <= 2'd2;
        end else if ((((stream_in_V_dest_V_0_state == 2'd1) & (stream_in_V_dest_V_0_ack_out == 1'b0)) | ((stream_in_V_dest_V_0_state == 2'd3) & (stream_in_V_dest_V_0_ack_out == 1'b0) & (stream_in_V_dest_V_0_vld_in == 1'b1)))) begin
            stream_in_V_dest_V_0_state <= 2'd1;
        end else if (((~((stream_in_V_dest_V_0_vld_in == 1'b0) & (stream_in_V_dest_V_0_ack_out == 1'b1)) & ~((stream_in_V_dest_V_0_ack_out == 1'b0) & (stream_in_V_dest_V_0_vld_in == 1'b1)) & (stream_in_V_dest_V_0_state == 2'd3)) | ((stream_in_V_dest_V_0_state == 2'd1) & (stream_in_V_dest_V_0_ack_out == 1'b1)) | ((stream_in_V_dest_V_0_state == 2'd2) & (stream_in_V_dest_V_0_vld_in == 1'b1)))) begin
            stream_in_V_dest_V_0_state <= 2'd3;
        end else begin
            stream_in_V_dest_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_id_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_V_id_V_0_ack_out == 1'b1) & (stream_in_V_id_V_0_vld_out == 1'b1))) begin
            stream_in_V_id_V_0_sel_rd <= ~stream_in_V_id_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_id_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_V_id_V_0_ack_in == 1'b1) & (stream_in_V_id_V_0_vld_in == 1'b1))) begin
            stream_in_V_id_V_0_sel_wr <= ~stream_in_V_id_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_id_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_V_id_V_0_state == 2'd2) & (stream_in_V_id_V_0_vld_in == 1'b0)) | ((stream_in_V_id_V_0_state == 2'd3) & (stream_in_V_id_V_0_vld_in == 1'b0) & (stream_in_V_id_V_0_ack_out == 1'b1)))) begin
            stream_in_V_id_V_0_state <= 2'd2;
        end else if ((((stream_in_V_id_V_0_state == 2'd1) & (stream_in_V_id_V_0_ack_out == 1'b0)) | ((stream_in_V_id_V_0_state == 2'd3) & (stream_in_V_id_V_0_ack_out == 1'b0) & (stream_in_V_id_V_0_vld_in == 1'b1)))) begin
            stream_in_V_id_V_0_state <= 2'd1;
        end else if (((~((stream_in_V_id_V_0_vld_in == 1'b0) & (stream_in_V_id_V_0_ack_out == 1'b1)) & ~((stream_in_V_id_V_0_ack_out == 1'b0) & (stream_in_V_id_V_0_vld_in == 1'b1)) & (stream_in_V_id_V_0_state == 2'd3)) | ((stream_in_V_id_V_0_state == 2'd1) & (stream_in_V_id_V_0_ack_out == 1'b1)) | ((stream_in_V_id_V_0_state == 2'd2) & (stream_in_V_id_V_0_vld_in == 1'b1)))) begin
            stream_in_V_id_V_0_state <= 2'd3;
        end else begin
            stream_in_V_id_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_keep_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_V_keep_V_0_ack_out == 1'b1) & (stream_in_V_keep_V_0_vld_out == 1'b1))) begin
            stream_in_V_keep_V_0_sel_rd <= ~stream_in_V_keep_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_keep_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_V_keep_V_0_ack_in == 1'b1) & (stream_in_V_keep_V_0_vld_in == 1'b1))) begin
            stream_in_V_keep_V_0_sel_wr <= ~stream_in_V_keep_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_keep_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_V_keep_V_0_state == 2'd2) & (stream_in_V_keep_V_0_vld_in == 1'b0)) | ((stream_in_V_keep_V_0_state == 2'd3) & (stream_in_V_keep_V_0_vld_in == 1'b0) & (stream_in_V_keep_V_0_ack_out == 1'b1)))) begin
            stream_in_V_keep_V_0_state <= 2'd2;
        end else if ((((stream_in_V_keep_V_0_state == 2'd1) & (stream_in_V_keep_V_0_ack_out == 1'b0)) | ((stream_in_V_keep_V_0_state == 2'd3) & (stream_in_V_keep_V_0_ack_out == 1'b0) & (stream_in_V_keep_V_0_vld_in == 1'b1)))) begin
            stream_in_V_keep_V_0_state <= 2'd1;
        end else if (((~((stream_in_V_keep_V_0_vld_in == 1'b0) & (stream_in_V_keep_V_0_ack_out == 1'b1)) & ~((stream_in_V_keep_V_0_ack_out == 1'b0) & (stream_in_V_keep_V_0_vld_in == 1'b1)) & (stream_in_V_keep_V_0_state == 2'd3)) | ((stream_in_V_keep_V_0_state == 2'd1) & (stream_in_V_keep_V_0_ack_out == 1'b1)) | ((stream_in_V_keep_V_0_state == 2'd2) & (stream_in_V_keep_V_0_vld_in == 1'b1)))) begin
            stream_in_V_keep_V_0_state <= 2'd3;
        end else begin
            stream_in_V_keep_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_last_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_V_last_V_0_ack_out == 1'b1) & (stream_in_V_last_V_0_vld_out == 1'b1))) begin
            stream_in_V_last_V_0_sel_rd <= ~stream_in_V_last_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_last_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_V_last_V_0_ack_in == 1'b1) & (stream_in_V_last_V_0_vld_in == 1'b1))) begin
            stream_in_V_last_V_0_sel_wr <= ~stream_in_V_last_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_last_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_V_last_V_0_state == 2'd2) & (stream_in_V_last_V_0_vld_in == 1'b0)) | ((stream_in_V_last_V_0_state == 2'd3) & (stream_in_V_last_V_0_vld_in == 1'b0) & (stream_in_V_last_V_0_ack_out == 1'b1)))) begin
            stream_in_V_last_V_0_state <= 2'd2;
        end else if ((((stream_in_V_last_V_0_state == 2'd1) & (stream_in_V_last_V_0_ack_out == 1'b0)) | ((stream_in_V_last_V_0_state == 2'd3) & (stream_in_V_last_V_0_ack_out == 1'b0) & (stream_in_V_last_V_0_vld_in == 1'b1)))) begin
            stream_in_V_last_V_0_state <= 2'd1;
        end else if (((~((stream_in_V_last_V_0_vld_in == 1'b0) & (stream_in_V_last_V_0_ack_out == 1'b1)) & ~((stream_in_V_last_V_0_ack_out == 1'b0) & (stream_in_V_last_V_0_vld_in == 1'b1)) & (stream_in_V_last_V_0_state == 2'd3)) | ((stream_in_V_last_V_0_state == 2'd1) & (stream_in_V_last_V_0_ack_out == 1'b1)) | ((stream_in_V_last_V_0_state == 2'd2) & (stream_in_V_last_V_0_vld_in == 1'b1)))) begin
            stream_in_V_last_V_0_state <= 2'd3;
        end else begin
            stream_in_V_last_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_strb_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_V_strb_V_0_ack_out == 1'b1) & (stream_in_V_strb_V_0_vld_out == 1'b1))) begin
            stream_in_V_strb_V_0_sel_rd <= ~stream_in_V_strb_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_strb_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_V_strb_V_0_ack_in == 1'b1) & (stream_in_V_strb_V_0_vld_in == 1'b1))) begin
            stream_in_V_strb_V_0_sel_wr <= ~stream_in_V_strb_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_strb_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_V_strb_V_0_state == 2'd2) & (stream_in_V_strb_V_0_vld_in == 1'b0)) | ((stream_in_V_strb_V_0_state == 2'd3) & (stream_in_V_strb_V_0_vld_in == 1'b0) & (stream_in_V_strb_V_0_ack_out == 1'b1)))) begin
            stream_in_V_strb_V_0_state <= 2'd2;
        end else if ((((stream_in_V_strb_V_0_state == 2'd1) & (stream_in_V_strb_V_0_ack_out == 1'b0)) | ((stream_in_V_strb_V_0_state == 2'd3) & (stream_in_V_strb_V_0_ack_out == 1'b0) & (stream_in_V_strb_V_0_vld_in == 1'b1)))) begin
            stream_in_V_strb_V_0_state <= 2'd1;
        end else if (((~((stream_in_V_strb_V_0_vld_in == 1'b0) & (stream_in_V_strb_V_0_ack_out == 1'b1)) & ~((stream_in_V_strb_V_0_ack_out == 1'b0) & (stream_in_V_strb_V_0_vld_in == 1'b1)) & (stream_in_V_strb_V_0_state == 2'd3)) | ((stream_in_V_strb_V_0_state == 2'd1) & (stream_in_V_strb_V_0_ack_out == 1'b1)) | ((stream_in_V_strb_V_0_state == 2'd2) & (stream_in_V_strb_V_0_vld_in == 1'b1)))) begin
            stream_in_V_strb_V_0_state <= 2'd3;
        end else begin
            stream_in_V_strb_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_user_V_0_sel_rd <= 1'b0;
    end else begin
        if (((stream_in_V_user_V_0_ack_out == 1'b1) & (stream_in_V_user_V_0_vld_out == 1'b1))) begin
            stream_in_V_user_V_0_sel_rd <= ~stream_in_V_user_V_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_user_V_0_sel_wr <= 1'b0;
    end else begin
        if (((stream_in_V_user_V_0_ack_in == 1'b1) & (stream_in_V_user_V_0_vld_in == 1'b1))) begin
            stream_in_V_user_V_0_sel_wr <= ~stream_in_V_user_V_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        stream_in_V_user_V_0_state <= 2'd0;
    end else begin
        if ((((stream_in_V_user_V_0_state == 2'd2) & (stream_in_V_user_V_0_vld_in == 1'b0)) | ((stream_in_V_user_V_0_state == 2'd3) & (stream_in_V_user_V_0_vld_in == 1'b0) & (stream_in_V_user_V_0_ack_out == 1'b1)))) begin
            stream_in_V_user_V_0_state <= 2'd2;
        end else if ((((stream_in_V_user_V_0_state == 2'd1) & (stream_in_V_user_V_0_ack_out == 1'b0)) | ((stream_in_V_user_V_0_state == 2'd3) & (stream_in_V_user_V_0_ack_out == 1'b0) & (stream_in_V_user_V_0_vld_in == 1'b1)))) begin
            stream_in_V_user_V_0_state <= 2'd1;
        end else if (((~((stream_in_V_user_V_0_vld_in == 1'b0) & (stream_in_V_user_V_0_ack_out == 1'b1)) & ~((stream_in_V_user_V_0_ack_out == 1'b0) & (stream_in_V_user_V_0_vld_in == 1'b1)) & (stream_in_V_user_V_0_state == 2'd3)) | ((stream_in_V_user_V_0_state == 2'd1) & (stream_in_V_user_V_0_ack_out == 1'b1)) | ((stream_in_V_user_V_0_state == 2'd2) & (stream_in_V_user_V_0_vld_in == 1'b1)))) begin
            stream_in_V_user_V_0_state <= 2'd3;
        end else begin
            stream_in_V_user_V_0_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_col14_0_reg_1530 <= buffer_col_1_fu_2028_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & ((1'd1 == and_ln116_fu_1902_p2) | (icmp_ln116_fu_1890_p2 == 1'd1)))) begin
        buffer_col14_0_reg_1530 <= 7'd2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        buffer_col15_0_reg_1541 <= 2'd0;
    end else if (((icmp_ln126_fu_2077_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buffer_col15_0_reg_1541 <= buffer_col_2_fu_2083_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        buffer_col16_0_reg_1552 <= 7'd66;
    end else if (((icmp_ln133_fu_2126_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buffer_col16_0_reg_1552 <= buffer_col_3_fu_2141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln141_fu_2164_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        buffer_col17_0_reg_1563 <= 7'd2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_col17_0_reg_1563 <= buffer_col_4_fu_2269_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        buffer_col18_0_reg_1575 <= 2'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1))) begin
        buffer_col18_0_reg_1575 <= buffer_col_5_reg_3140;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        buffer_col19_0_reg_1587 <= 7'd66;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_fu_2303_p2 == 1'd0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        buffer_col19_0_reg_1587 <= buffer_col_6_fu_2319_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln165_fu_2348_p2) & (1'b1 == ap_CS_fsm_state23))) begin
        buffer_col20_0_reg_1598 <= 7'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_fu_2384_p2 == 1'd0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        buffer_col20_0_reg_1598 <= buffer_col_7_fu_2390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln141_reg_3068 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        buffer_col21_0_reg_1609 <= 7'd0;
    end else if (((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_fu_2428_p2 == 1'd0) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        buffer_col21_0_reg_1609 <= buffer_col_8_fu_2434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_1733_p2 == 1'd1) & (icmp_ln99_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_col_0_reg_1519 <= 7'd0;
    end else if (((icmp_ln104_fu_1745_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        buffer_col_0_reg_1519 <= buffer_col_fu_1877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_1733_p2 == 1'd1) & (icmp_ln99_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        buffer_line_0_reg_1508 <= 3'd0;
    end else if (((icmp_ln104_reg_2834 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        buffer_line_0_reg_1508 <= select_ln109_1_reg_2843;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_1672_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        current_filter_0_reg_1620 <= 6'd0;
    end else if (((icmp_ln198_fu_2581_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        current_filter_0_reg_1620 <= current_filter_reg_3284;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_line_0_reg_1485 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state30) & ((icmp_ln187_fu_2479_p2 == 1'd1) | (icmp_ln185_reg_3276 == 1'd1)))) begin
        current_line_0_reg_1485 <= current_line_reg_2825;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln187_fu_2479_p2 == 1'd0) & (icmp_ln185_reg_3276 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        filter_element_0_0_reg_1631 <= 5'd0;
    end else if (((icmp_ln191_reg_3304 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        filter_element_0_0_reg_1631 <= add_ln191_reg_3308;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln102_fu_1733_p2 == 1'd1) & (icmp_ln99_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_1497 <= 9'd0;
    end else if (((icmp_ln104_fu_1745_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_1497 <= add_ln104_fu_1751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        k_0_reg_1643 <= k_reg_3336;
    end else if (((1'b1 == ap_CS_fsm_state34) & (grp_CORRELATE_2_fu_1655_ap_done == 1'b1))) begin
        k_0_reg_1643 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        add_ln191_reg_3308 <= add_ln191_fu_2517_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_1745_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln321_265_reg_2856 <= add_ln321_265_fu_1871_p2;
        zext_ln321_339_reg_2848[13 : 0] <= zext_ln321_339_fu_1863_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ((1'd1 == and_ln116_fu_1902_p2) | (icmp_ln116_fu_1890_p2 == 1'd1)))) begin
        add_ln321_266_reg_2922[13 : 2] <= add_ln321_266_fu_1932_p2[13 : 2];
        buffer_data_V_addr_3_reg_2930[8 : 2] <= zext_ln321_343_fu_1944_p1[8 : 2];
        buffer_data_V_addr_5_reg_2935[8 : 2] <= sext_ln321_fu_1962_p1[8 : 2];
        buffer_dest_V_addr_3_reg_2990[8 : 2] <= zext_ln321_343_fu_1944_p1[8 : 2];
        buffer_dest_V_addr_5_reg_2995[8 : 2] <= sext_ln321_fu_1962_p1[8 : 2];
        buffer_id_V_addr_3_reg_2980[8 : 2] <= zext_ln321_343_fu_1944_p1[8 : 2];
        buffer_id_V_addr_5_reg_2985[8 : 2] <= sext_ln321_fu_1962_p1[8 : 2];
        buffer_keep_V_addr_3_reg_2940[8 : 2] <= zext_ln321_343_fu_1944_p1[8 : 2];
        buffer_keep_V_addr_5_reg_2945[8 : 2] <= sext_ln321_fu_1962_p1[8 : 2];
        buffer_last_V_addr_3_reg_2970[8 : 2] <= zext_ln321_343_fu_1944_p1[8 : 2];
        buffer_last_V_addr_5_reg_2975[8 : 2] <= sext_ln321_fu_1962_p1[8 : 2];
        buffer_strb_V_addr_3_reg_2950[8 : 2] <= zext_ln321_343_fu_1944_p1[8 : 2];
        buffer_strb_V_addr_5_reg_2955[8 : 2] <= sext_ln321_fu_1962_p1[8 : 2];
        buffer_user_V_addr_3_reg_2960[8 : 2] <= zext_ln321_343_fu_1944_p1[8 : 2];
        buffer_user_V_addr_5_reg_2965[8 : 2] <= sext_ln321_fu_1962_p1[8 : 2];
        img_channel_V_addr_4_reg_3000[12 : 2] <= zext_ln321_343_fu_1944_p1[12 : 2];
        img_channel_V_addr_6_reg_3005[12 : 2] <= sext_ln321_fu_1962_p1[12 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_2126_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        add_ln321_269_reg_3058 <= add_ln321_269_fu_2136_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_fu_2303_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        add_ln321_271_reg_3149 <= add_ln321_271_fu_2313_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln165_fu_2348_p2) & (1'b1 == ap_CS_fsm_state23))) begin
        add_ln321_272_reg_3163[13 : 2] <= add_ln321_272_fu_2378_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_fu_2384_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        add_ln321_273_reg_3182 <= add_ln321_273_fu_2412_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        buffer_col_5_reg_3140 <= buffer_col_5_fu_2281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_reg_3276 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        current_filter_reg_3284 <= current_filter_fu_2485_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        current_line_reg_2825 <= current_line_fu_1727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln104_reg_2834 <= icmp_ln104_fu_1745_p2;
        icmp_ln104_reg_2834_pp0_iter1_reg <= icmp_ln104_reg_2834;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln119_reg_3010 <= icmp_ln119_fu_1974_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln126_reg_3040 <= icmp_ln126_fu_2077_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln133_reg_3054 <= icmp_ln133_fu_2126_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln141_reg_3068 <= icmp_ln141_fu_2158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln150_reg_3136 <= icmp_ln150_fu_2275_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln157_reg_3145 <= icmp_ln157_fu_2303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln167_reg_3168 <= icmp_ln167_fu_2384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln177_reg_3222 <= icmp_ln177_fu_2428_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        icmp_ln185_reg_3276 <= grp_fu_1672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        icmp_ln191_reg_3304 <= icmp_ln191_fu_2511_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        k_reg_3336 <= k_fu_2587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln126_fu_2077_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        or_ln321_3_reg_3049 <= or_ln321_3_fu_2092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_1745_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln109_1_reg_2843 <= select_ln109_1_fu_1771_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        select_ln13_reg_3357 <= select_ln13_fu_2648_p3;
        select_ln6_reg_3351 <= select_ln6_fu_2640_p3;
        tmp_valid_V_reg_3387 <= out_layer_valid_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state34) & (grp_CORRELATE_2_fu_1655_ap_done == 1'b1))) begin
        sext_ln1265_reg_3323 <= sext_ln1265_fu_2573_p1;
        sext_ln703_reg_3328 <= sext_ln703_fu_2577_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_data_V_0_load_A == 1'b1)) begin
        stream_in_V_data_V_0_payload_A <= stream_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_data_V_0_load_B == 1'b1)) begin
        stream_in_V_data_V_0_payload_B <= stream_in_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_dest_V_0_load_A == 1'b1)) begin
        stream_in_V_dest_V_0_payload_A <= stream_in_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_dest_V_0_load_B == 1'b1)) begin
        stream_in_V_dest_V_0_payload_B <= stream_in_TDEST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_id_V_0_load_A == 1'b1)) begin
        stream_in_V_id_V_0_payload_A <= stream_in_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_id_V_0_load_B == 1'b1)) begin
        stream_in_V_id_V_0_payload_B <= stream_in_TID;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_keep_V_0_load_A == 1'b1)) begin
        stream_in_V_keep_V_0_payload_A <= stream_in_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_keep_V_0_load_B == 1'b1)) begin
        stream_in_V_keep_V_0_payload_B <= stream_in_TKEEP;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_last_V_0_load_A == 1'b1)) begin
        stream_in_V_last_V_0_payload_A <= stream_in_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_last_V_0_load_B == 1'b1)) begin
        stream_in_V_last_V_0_payload_B <= stream_in_TLAST;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_strb_V_0_load_A == 1'b1)) begin
        stream_in_V_strb_V_0_payload_A <= stream_in_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_strb_V_0_load_B == 1'b1)) begin
        stream_in_V_strb_V_0_payload_B <= stream_in_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_user_V_0_load_A == 1'b1)) begin
        stream_in_V_user_V_0_payload_A <= stream_in_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if ((stream_in_V_user_V_0_load_B == 1'b1)) begin
        stream_in_V_user_V_0_payload_B <= stream_in_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_58_reg_3024 <= stream_in_V_data_V_0_data_out[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_60_reg_3030 <= {{mul_ln1148_fu_2725_p2[25:20]}};
        trunc_ln1148_reg_3019 <= trunc_ln1148_fu_2016_p1;
        zext_ln321_345_reg_3014[13 : 0] <= zext_ln321_345_fu_1989_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        tmp_64_reg_3120 <= stream_in_V_data_V_0_data_out[32'd7];
        tmp_66_reg_3126 <= {{mul_ln1148_1_fu_2733_p2[25:20]}};
        tmp_data_V_17_reg_3080 <= stream_in_V_data_V_0_data_out;
        tmp_dest_V_16_reg_3110 <= stream_in_V_dest_V_0_data_out;
        tmp_id_V_16_reg_3105 <= stream_in_V_id_V_0_data_out;
        tmp_keep_V_16_reg_3085 <= stream_in_V_keep_V_0_data_out;
        tmp_last_V_16_reg_3100 <= stream_in_V_last_V_0_data_out;
        tmp_strb_V_1_reg_3090 <= stream_in_V_strb_V_0_data_out;
        tmp_user_V_15_reg_3095 <= stream_in_V_user_V_0_data_out;
        trunc_ln1148_1_reg_3115 <= trunc_ln1148_1_fu_2192_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln187_fu_2479_p2 == 1'd0) & (icmp_ln185_reg_3276 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        zext_ln162_reg_3294[5 : 0] <= zext_ln162_fu_2495_p1[5 : 0];
        zext_ln191_reg_3299[11 : 6] <= zext_ln191_fu_2507_p1[11 : 6];
        zext_ln194_reg_3289[5 : 0] <= zext_ln194_fu_2491_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_reg_2834 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln321_340_reg_2891[13 : 0] <= zext_ln321_340_fu_1883_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_fu_2428_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        zext_ln321_357_reg_3231[6 : 0] <= zext_ln321_357_fu_2440_p1[6 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln104_fu_1745_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln119_fu_1974_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln126_fu_2077_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln133_fu_2126_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln150_fu_2275_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln157_fu_2303_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln167_fu_2384_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln177_fu_2428_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state27 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state27 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln191_fu_2511_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state31 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state31 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln99_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter0 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter0 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b0) & (ap_enable_reg_pp7_iter1 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 = buffer_col_5_reg_3140;
    end else begin
        ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 = buffer_col18_0_reg_1575;
    end
end

always @ (*) begin
    if (((icmp_ln104_reg_2834 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_buffer_line_0_phi_fu_1512_p4 = select_ln109_1_reg_2843;
    end else begin
        ap_phi_mux_buffer_line_0_phi_fu_1512_p4 = buffer_line_0_reg_1508;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_3304 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0))) begin
        ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 = add_ln191_reg_3308;
    end else begin
        ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 = filter_element_0_0_reg_1631;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        biases_layer1_V_ce0 = 1'b1;
    end else begin
        biases_layer1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_data_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_data_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_data_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_data_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_data_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_data_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_data_V_address0 = zext_ln321_345_fu_1989_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_data_V_address0 = zext_ln321_339_reg_2848;
    end else begin
        buffer_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_data_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_data_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_data_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_data_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_data_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_data_V_address1 = buffer_data_V_addr_5_reg_2935;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_data_V_address1 = buffer_data_V_addr_3_reg_2930;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_data_V_address1 = zext_ln321_340_reg_2891;
    end else begin
        buffer_data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_data_V_ce0 = 1'b1;
    end else begin
        buffer_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buffer_data_V_ce1 = 1'b1;
    end else begin
        buffer_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        buffer_data_V_d0 = buffer_data_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_data_V_d0 = stream_in_V_data_V_0_data_out;
    end else begin
        buffer_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_data_V_d1 = tmp_data_V_17_reg_3080;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        buffer_data_V_d1 = buffer_data_V_q0;
    end else begin
        buffer_data_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_data_V_we0 = 1'b1;
    end else begin
        buffer_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buffer_data_V_we1 = 1'b1;
    end else begin
        buffer_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        buffer_dest_V_address0 = zext_ln321_361_fu_2672_p1;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_dest_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_dest_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_dest_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_dest_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_dest_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_dest_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_dest_V_address0 = zext_ln321_345_fu_1989_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_dest_V_address0 = zext_ln321_339_fu_1863_p1;
    end else begin
        buffer_dest_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_dest_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_dest_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_dest_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_dest_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_dest_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_dest_V_address1 = buffer_dest_V_addr_5_reg_2995;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_dest_V_address1 = buffer_dest_V_addr_3_reg_2990;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_dest_V_address1 = zext_ln321_340_fu_1883_p1;
    end else begin
        buffer_dest_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_dest_V_ce0 = 1'b1;
    end else begin
        buffer_dest_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_dest_V_ce1 = 1'b1;
    end else begin
        buffer_dest_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        buffer_dest_V_d0 = buffer_dest_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_dest_V_d0 = stream_in_V_dest_V_0_data_out;
    end else begin
        buffer_dest_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_dest_V_d1 = tmp_dest_V_16_reg_3110;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        buffer_dest_V_d1 = buffer_dest_V_q0;
    end else begin
        buffer_dest_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_dest_V_we0 = 1'b1;
    end else begin
        buffer_dest_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_dest_V_we1 = 1'b1;
    end else begin
        buffer_dest_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        buffer_id_V_address0 = zext_ln321_361_fu_2672_p1;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_id_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_id_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_id_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_id_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_id_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_id_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_id_V_address0 = zext_ln321_345_fu_1989_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_id_V_address0 = zext_ln321_339_fu_1863_p1;
    end else begin
        buffer_id_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_id_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_id_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_id_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_id_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_id_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_id_V_address1 = buffer_id_V_addr_5_reg_2985;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_id_V_address1 = buffer_id_V_addr_3_reg_2980;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_id_V_address1 = zext_ln321_340_fu_1883_p1;
    end else begin
        buffer_id_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_id_V_ce0 = 1'b1;
    end else begin
        buffer_id_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_id_V_ce1 = 1'b1;
    end else begin
        buffer_id_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        buffer_id_V_d0 = buffer_id_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_id_V_d0 = stream_in_V_id_V_0_data_out;
    end else begin
        buffer_id_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_id_V_d1 = tmp_id_V_16_reg_3105;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        buffer_id_V_d1 = buffer_id_V_q0;
    end else begin
        buffer_id_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_id_V_we0 = 1'b1;
    end else begin
        buffer_id_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_id_V_we1 = 1'b1;
    end else begin
        buffer_id_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        buffer_keep_V_address0 = zext_ln321_361_fu_2672_p1;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_keep_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_keep_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_keep_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_keep_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_keep_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_keep_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_keep_V_address0 = zext_ln321_345_fu_1989_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_keep_V_address0 = zext_ln321_339_reg_2848;
    end else begin
        buffer_keep_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_keep_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_keep_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_keep_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_keep_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_keep_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_keep_V_address1 = buffer_keep_V_addr_5_reg_2945;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_keep_V_address1 = buffer_keep_V_addr_3_reg_2940;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_keep_V_address1 = zext_ln321_340_reg_2891;
    end else begin
        buffer_keep_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_keep_V_ce0 = 1'b1;
    end else begin
        buffer_keep_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buffer_keep_V_ce1 = 1'b1;
    end else begin
        buffer_keep_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        buffer_keep_V_d0 = buffer_keep_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_keep_V_d0 = stream_in_V_keep_V_0_data_out;
    end else begin
        buffer_keep_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_keep_V_d1 = tmp_keep_V_16_reg_3085;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        buffer_keep_V_d1 = buffer_keep_V_q0;
    end else begin
        buffer_keep_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_keep_V_we0 = 1'b1;
    end else begin
        buffer_keep_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buffer_keep_V_we1 = 1'b1;
    end else begin
        buffer_keep_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        buffer_last_V_address0 = zext_ln321_361_fu_2672_p1;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_last_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_last_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_last_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_last_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_last_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_last_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_last_V_address0 = zext_ln321_345_fu_1989_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_last_V_address0 = zext_ln321_339_fu_1863_p1;
    end else begin
        buffer_last_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_last_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_last_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_last_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_last_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_last_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_last_V_address1 = buffer_last_V_addr_5_reg_2975;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_last_V_address1 = buffer_last_V_addr_3_reg_2970;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_last_V_address1 = zext_ln321_340_fu_1883_p1;
    end else begin
        buffer_last_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_last_V_ce0 = 1'b1;
    end else begin
        buffer_last_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_last_V_ce1 = 1'b1;
    end else begin
        buffer_last_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        buffer_last_V_d0 = buffer_last_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_last_V_d0 = stream_in_V_last_V_0_data_out;
    end else begin
        buffer_last_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_last_V_d1 = tmp_last_V_16_reg_3100;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        buffer_last_V_d1 = buffer_last_V_q0;
    end else begin
        buffer_last_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_last_V_we0 = 1'b1;
    end else begin
        buffer_last_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_last_V_we1 = 1'b1;
    end else begin
        buffer_last_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_strb_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_strb_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_strb_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_strb_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_strb_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_strb_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_strb_V_address0 = zext_ln321_345_fu_1989_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_strb_V_address0 = zext_ln321_339_reg_2848;
    end else begin
        buffer_strb_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_strb_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_strb_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_strb_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_strb_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_strb_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_strb_V_address1 = buffer_strb_V_addr_5_reg_2955;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_strb_V_address1 = buffer_strb_V_addr_3_reg_2950;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_strb_V_address1 = zext_ln321_340_reg_2891;
    end else begin
        buffer_strb_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_strb_V_ce0 = 1'b1;
    end else begin
        buffer_strb_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buffer_strb_V_ce1 = 1'b1;
    end else begin
        buffer_strb_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        buffer_strb_V_d0 = buffer_strb_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_strb_V_d0 = stream_in_V_strb_V_0_data_out;
    end else begin
        buffer_strb_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_strb_V_d1 = tmp_strb_V_1_reg_3090;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        buffer_strb_V_d1 = buffer_strb_V_q0;
    end else begin
        buffer_strb_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_strb_V_we0 = 1'b1;
    end else begin
        buffer_strb_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buffer_strb_V_we1 = 1'b1;
    end else begin
        buffer_strb_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        buffer_user_V_address0 = zext_ln321_361_fu_2672_p1;
    end else if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_user_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_user_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_user_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_user_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_user_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_user_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_user_V_address0 = zext_ln321_345_fu_1989_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_user_V_address0 = zext_ln321_339_fu_1863_p1;
    end else begin
        buffer_user_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        buffer_user_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        buffer_user_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        buffer_user_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        buffer_user_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_user_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        buffer_user_V_address1 = buffer_user_V_addr_5_reg_2965;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        buffer_user_V_address1 = buffer_user_V_addr_3_reg_2960;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        buffer_user_V_address1 = zext_ln321_340_fu_1883_p1;
    end else begin
        buffer_user_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_user_V_ce0 = 1'b1;
    end else begin
        buffer_user_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_user_V_ce1 = 1'b1;
    end else begin
        buffer_user_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        buffer_user_V_d0 = buffer_user_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buffer_user_V_d0 = stream_in_V_user_V_0_data_out;
    end else begin
        buffer_user_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        buffer_user_V_d1 = tmp_user_V_15_reg_3095;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        buffer_user_V_d1 = buffer_user_V_q0;
    end else begin
        buffer_user_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        buffer_user_V_we0 = 1'b1;
    end else begin
        buffer_user_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        buffer_user_V_we1 = 1'b1;
    end else begin
        buffer_user_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        corr1_out_V_data_V_blk_n = corr1_out_V_data_V_full_n;
    end else begin
        corr1_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        corr1_out_V_data_V_write = 1'b1;
    end else begin
        corr1_out_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        corr1_out_V_dest_V_blk_n = corr1_out_V_dest_V_full_n;
    end else begin
        corr1_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        corr1_out_V_dest_V_write = 1'b1;
    end else begin
        corr1_out_V_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        corr1_out_V_id_V_blk_n = corr1_out_V_id_V_full_n;
    end else begin
        corr1_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        corr1_out_V_id_V_write = 1'b1;
    end else begin
        corr1_out_V_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        corr1_out_V_keep_V_blk_n = corr1_out_V_keep_V_full_n;
    end else begin
        corr1_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        corr1_out_V_keep_V_write = 1'b1;
    end else begin
        corr1_out_V_keep_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        corr1_out_V_last_V_blk_n = corr1_out_V_last_V_full_n;
    end else begin
        corr1_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        corr1_out_V_last_V_write = 1'b1;
    end else begin
        corr1_out_V_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        corr1_out_V_user_V_blk_n = corr1_out_V_user_V_full_n;
    end else begin
        corr1_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        corr1_out_V_user_V_write = 1'b1;
    end else begin
        corr1_out_V_user_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        corr1_out_V_valid_V_blk_n = corr1_out_V_valid_V_full_n;
    end else begin
        corr1_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
        corr1_out_V_valid_V_write = 1'b1;
    end else begin
        corr1_out_V_valid_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        correlate_img_address0 = zext_ln200_fu_2593_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        correlate_img_address0 = grp_CORRELATE_2_fu_1655_correlate_img_V_address0;
    end else begin
        correlate_img_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        correlate_img_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        correlate_img_ce0 = grp_CORRELATE_2_fu_1655_correlate_img_V_ce0;
    end else begin
        correlate_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        correlate_img_we0 = grp_CORRELATE_2_fu_1655_correlate_img_V_we0;
    end else begin
        correlate_img_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0) & (1'b0 == ap_block_pp7_stage0))) begin
        img_channel_V_address0 = zext_ln321_358_fu_2450_p1;
    end else if (((ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (1'b0 == ap_block_pp6_stage0))) begin
        img_channel_V_address0 = zext_ln170_fu_2396_p1;
    end else if (((ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_block_pp5_stage0))) begin
        img_channel_V_address0 = 64'd337;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        img_channel_V_address0 = 64'd274;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        img_channel_V_address0 = zext_ln321_348_fu_2147_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        img_channel_V_address0 = zext_ln321_346_fu_2114_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        img_channel_V_address0 = zext_ln321_345_reg_3014;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_V_address0 = zext_ln321_339_reg_2848;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        img_channel_V_address0 = grp_CORRELATE_2_fu_1655_prev_output_channel_V_address0;
    end else begin
        img_channel_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0))) begin
        img_channel_V_address1 = zext_ln321_359_fu_2467_p1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0))) begin
        img_channel_V_address1 = zext_ln321_356_fu_2417_p1;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0))) begin
        img_channel_V_address1 = zext_ln321_352_fu_2325_p1;
    end else if (((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0))) begin
        img_channel_V_address1 = tmp_107_fu_2287_p3;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_V_address1 = zext_ln321_350_fu_2214_p1;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0))) begin
        img_channel_V_address1 = img_channel_V_addr_6_reg_3005;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        img_channel_V_address1 = img_channel_V_addr_4_reg_3000;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_V_address1 = zext_ln321_340_reg_2891;
    end else begin
        img_channel_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp7_stage0_11001) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        img_channel_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        img_channel_V_ce0 = grp_CORRELATE_2_fu_1655_prev_output_channel_V_ce0;
    end else begin
        img_channel_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        img_channel_V_ce1 = 1'b1;
    end else begin
        img_channel_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0)))) begin
        img_channel_V_d0 = img_channel_V_q1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        img_channel_V_d0 = select_ln1148_1_fu_2069_p3;
    end else begin
        img_channel_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_V_d1 = select_ln1148_3_fu_2261_p3;
    end else if ((((1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b0 == ap_block_pp7_stage0)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b0 == ap_block_pp6_stage0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b0 == ap_block_pp5_stage0)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b0 == ap_block_pp4_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_V_d1 = img_channel_V_q0;
    end else begin
        img_channel_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln133_reg_3054 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1)) | ((icmp_ln126_reg_3040 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1)) | ((icmp_ln119_reg_3010 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1)))) begin
        img_channel_V_we0 = 1'b1;
    end else begin
        img_channel_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln177_reg_3222 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter1 == 1'b1)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln167_reg_3168 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter1 == 1'b1)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln157_reg_3145 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter1 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln150_reg_3136 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter1 == 1'b1)) | ((icmp_ln104_reg_2834_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        img_channel_V_we1 = 1'b1;
    end else begin
        img_channel_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln99_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        out_layer_valid_V_ce0 = 1'b1;
    end else begin
        out_layer_valid_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_TDATA_blk_n = stream_in_V_data_V_0_state[1'd0];
    end else begin
        stream_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_V_data_V_0_ack_out = 1'b1;
    end else begin
        stream_in_V_data_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_V_data_V_0_sel == 1'b1)) begin
        stream_in_V_data_V_0_data_out = stream_in_V_data_V_0_payload_B;
    end else begin
        stream_in_V_data_V_0_data_out = stream_in_V_data_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_V_dest_V_0_ack_out = 1'b1;
    end else begin
        stream_in_V_dest_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_V_dest_V_0_sel == 1'b1)) begin
        stream_in_V_dest_V_0_data_out = stream_in_V_dest_V_0_payload_B;
    end else begin
        stream_in_V_dest_V_0_data_out = stream_in_V_dest_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_V_id_V_0_ack_out = 1'b1;
    end else begin
        stream_in_V_id_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_V_id_V_0_sel == 1'b1)) begin
        stream_in_V_id_V_0_data_out = stream_in_V_id_V_0_payload_B;
    end else begin
        stream_in_V_id_V_0_data_out = stream_in_V_id_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_V_keep_V_0_ack_out = 1'b1;
    end else begin
        stream_in_V_keep_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_V_keep_V_0_sel == 1'b1)) begin
        stream_in_V_keep_V_0_data_out = stream_in_V_keep_V_0_payload_B;
    end else begin
        stream_in_V_keep_V_0_data_out = stream_in_V_keep_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_V_last_V_0_ack_out = 1'b1;
    end else begin
        stream_in_V_last_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_V_last_V_0_sel == 1'b1)) begin
        stream_in_V_last_V_0_data_out = stream_in_V_last_V_0_payload_B;
    end else begin
        stream_in_V_last_V_0_data_out = stream_in_V_last_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_V_strb_V_0_ack_out = 1'b1;
    end else begin
        stream_in_V_strb_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_V_strb_V_0_sel == 1'b1)) begin
        stream_in_V_strb_V_0_data_out = stream_in_V_strb_V_0_payload_B;
    end else begin
        stream_in_V_strb_V_0_data_out = stream_in_V_strb_V_0_payload_A;
    end
end

always @ (*) begin
    if (((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln119_fu_1974_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        stream_in_V_user_V_0_ack_out = 1'b1;
    end else begin
        stream_in_V_user_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((stream_in_V_user_V_0_sel == 1'b1)) begin
        stream_in_V_user_V_0_data_out = stream_in_V_user_V_0_payload_B;
    end else begin
        stream_in_V_user_V_0_data_out = stream_in_V_user_V_0_payload_A;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0))) begin
        subfilter_layer_V_address0 = zext_ln194_1_fu_2563_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        subfilter_layer_V_address0 = grp_CORRELATE_2_fu_1655_filter_V_address0;
    end else begin
        subfilter_layer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        subfilter_layer_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        subfilter_layer_V_ce0 = grp_CORRELATE_2_fu_1655_filter_V_ce0;
    end else begin
        subfilter_layer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_3304 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        subfilter_layer_V_we0 = 1'b1;
    end else begin
        subfilter_layer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        weights_layer1_V_0_ce0 = 1'b1;
    end else begin
        weights_layer1_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln99_fu_1721_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln102_fu_1733_p2 == 1'd1) & (icmp_ln99_fu_1721_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln104_fu_1745_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln104_fu_1745_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & ((1'd1 == and_ln116_fu_1902_p2) | (icmp_ln116_fu_1890_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((icmp_ln119_fu_1974_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((icmp_ln119_fu_1974_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln126_fu_2077_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln126_fu_2077_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~((icmp_ln133_fu_2126_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((icmp_ln133_fu_2126_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((or_ln141_fu_2164_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state16 : begin
            if ((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((~((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0)) & (icmp_ln144_fu_2170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if (~((icmp_ln150_fu_2275_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((icmp_ln150_fu_2275_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((icmp_ln157_fu_2303_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if (((icmp_ln157_fu_2303_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'd1 == and_ln165_fu_2348_p2) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_pp6_stage0 : begin
            if (~((icmp_ln167_fu_2384_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if (((icmp_ln167_fu_2384_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln141_reg_3068 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if (~((icmp_ln177_fu_2428_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if (((icmp_ln177_fu_2428_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & ((icmp_ln187_fu_2479_p2 == 1'd1) | (icmp_ln185_reg_3276 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if (~((icmp_ln191_fu_2511_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if (((icmp_ln191_fu_2511_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            if (((1'b1 == ap_CS_fsm_state34) & (grp_CORRELATE_2_fu_1655_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((icmp_ln198_fu_2581_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (io_acc_block_signal_op692 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_1751_p2 = (indvar_flatten_reg_1497 + 9'd1);

assign add_ln109_fu_1809_p2 = (ap_phi_mux_buffer_line_0_phi_fu_1512_p4 + 3'd2);

assign add_ln162_fu_2602_p2 = (zext_ln162_1_fu_2598_p1 + zext_ln191_reg_3299);

assign add_ln191_fu_2517_p2 = (ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 + 5'd1);

assign add_ln203_1_fu_2621_p2 = ($signed(sext_ln703_reg_3328) + $signed(trunc_ln703_fu_2612_p1));

assign add_ln203_56_fu_2553_p2 = (sub_ln203_fu_2547_p2 + zext_ln162_reg_3294);

assign add_ln203_fu_2656_p2 = (7'd2 + k_0_reg_1643);

assign add_ln321_263_fu_1847_p2 = (zext_ln321_336_fu_1831_p1 + zext_ln321_337_fu_1843_p1);

assign add_ln321_264_fu_1857_p2 = (zext_ln321_338_fu_1853_p1 + add_ln321_263_fu_1847_p2);

assign add_ln321_265_fu_1871_p2 = (zext_ln321_338_fu_1853_p1 + add_ln321_fu_1803_p2);

assign add_ln321_266_fu_1932_p2 = (zext_ln321_342_fu_1928_p1 + zext_ln321_341_fu_1916_p1);

assign add_ln321_267_fu_1956_p2 = (add_ln321_266_fu_1932_p2 + 14'd65);

assign add_ln321_268_fu_1984_p2 = (zext_ln321_344_fu_1980_p1 + add_ln321_266_reg_2922);

assign add_ln321_269_fu_2136_p2 = (add_ln321_266_reg_2922 + zext_ln321_347_fu_2132_p1);

assign add_ln321_270_fu_2208_p2 = ($signed(zext_ln321_349_fu_2204_p1) + $signed(9'd272));

assign add_ln321_271_fu_2313_p2 = ($signed(zext_ln321_351_fu_2309_p1) + $signed(9'd272));

assign add_ln321_272_fu_2378_p2 = (zext_ln321_354_fu_2374_p1 + zext_ln321_353_fu_2362_p1);

assign add_ln321_273_fu_2412_p2 = (add_ln321_272_reg_3163 + zext_ln321_355_fu_2408_p1);

assign add_ln321_274_fu_2444_p2 = (zext_ln321_357_fu_2440_p1 + 9'd204);

assign add_ln321_275_fu_2462_p2 = ($signed(zext_ln321_357_reg_3231) + $signed(9'd272));

assign add_ln321_276_fu_2666_p2 = ($signed(8'd136) + $signed(zext_ln321_360_fu_2662_p1));

assign add_ln321_fu_1803_p2 = (zext_ln321_fu_1787_p1 + zext_ln321_335_fu_1799_p1);

assign and_ln116_fu_1902_p2 = (icmp_ln116_1_fu_1896_p2 & grp_fu_1672_p2);

assign and_ln165_fu_2348_p2 = (icmp_ln165_fu_2336_p2 & icmp_ln165_1_fu_2342_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln119_fu_1974_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln119_fu_1974_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16 = ((icmp_ln144_fu_2170_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0));
end

assign ap_block_state18_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter0 = ((icmp_ln119_fu_1974_p2 == 1'd0) & (stream_in_V_data_V_0_vld_out == 1'b0));
end

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign aux_sum_V_fu_2616_p2 = ($signed(sext_ln1265_reg_3323) + $signed(correlate_img_q0));

assign biases_layer1_V_address0 = zext_ln194_reg_3289;

assign buffer_col_1_fu_2028_p2 = (buffer_col14_0_reg_1530 + 7'd1);

assign buffer_col_2_fu_2083_p2 = (buffer_col15_0_reg_1541 + 2'd1);

assign buffer_col_3_fu_2141_p2 = (buffer_col16_0_reg_1552 + 7'd1);

assign buffer_col_4_fu_2269_p2 = (buffer_col17_0_reg_1563 + 7'd1);

assign buffer_col_5_fu_2281_p2 = (ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 + 2'd1);

assign buffer_col_6_fu_2319_p2 = (buffer_col19_0_reg_1587 + 7'd1);

assign buffer_col_7_fu_2390_p2 = (buffer_col20_0_reg_1598 + 7'd1);

assign buffer_col_8_fu_2434_p2 = (buffer_col21_0_reg_1609 + 7'd1);

assign buffer_col_fu_1877_p2 = (select_ln109_fu_1763_p3 + 7'd1);

assign buffer_line_fu_1739_p2 = (ap_phi_mux_buffer_line_0_phi_fu_1512_p4 + 3'd1);

assign corr1_out_V_data_V_din = {{ret_V_fu_2708_p2[15:4]}};

assign corr1_out_V_dest_V_din = buffer_dest_V_q0;

assign corr1_out_V_id_V_din = buffer_id_V_q0;

assign corr1_out_V_keep_V_din = buffer_keep_V_q0;

assign corr1_out_V_last_V_din = buffer_last_V_q0;

assign corr1_out_V_user_V_din = buffer_user_V_q0;

assign corr1_out_V_valid_V_din = tmp_valid_V_reg_3387;

assign current_filter_fu_2485_p2 = (current_filter_0_reg_1620 + 6'd1);

assign current_line_fu_1727_p2 = (current_line_0_reg_1485 + 7'd1);

assign grp_CORRELATE_2_fu_1655_ap_start = grp_CORRELATE_2_fu_1655_ap_start_reg;

assign grp_fu_1662_p4 = {{current_line_0_reg_1485[6:2]}};

assign grp_fu_1672_p2 = ((grp_fu_1662_p4 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_1733_p2 = ((current_line_0_reg_1485 > 7'd4) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_1745_p2 = ((indvar_flatten_reg_1497 == 9'd272) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_1757_p2 = ((buffer_col_0_reg_1519 == 7'd68) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_1896_p2 = ((current_line_0_reg_1485 > 7'd2) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_1890_p2 = ((current_line_0_reg_1485 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_1974_p2 = ((buffer_col14_0_reg_1530 == 7'd66) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_2077_p2 = ((buffer_col15_0_reg_1541 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_2126_p2 = ((buffer_col16_0_reg_1552 == 7'd68) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_2158_p2 = ((current_line_0_reg_1485 > 7'd65) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_2170_p2 = ((buffer_col17_0_reg_1563 == 7'd66) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_2626_p2 = (($signed(aux_sum_V_fu_2616_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_2275_p2 = ((ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln157_fu_2303_p2 = ((buffer_col19_0_reg_1587 == 7'd68) ? 1'b1 : 1'b0);

assign icmp_ln165_1_fu_2342_p2 = ((current_line_0_reg_1485 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_2336_p2 = ((current_line_0_reg_1485 < 7'd3) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_2384_p2 = ((buffer_col20_0_reg_1598 == 7'd68) ? 1'b1 : 1'b0);

assign icmp_ln177_fu_2428_p2 = ((buffer_col21_0_reg_1609 == 7'd68) ? 1'b1 : 1'b0);

assign icmp_ln187_fu_2479_p2 = ((current_filter_0_reg_1620 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_2511_p2 = ((ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln198_fu_2581_p2 = ((k_0_reg_1643 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_1721_p2 = ((current_line_0_reg_1485 == 7'd68) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op692 = (corr1_out_V_valid_V_full_n & corr1_out_V_user_V_full_n & corr1_out_V_last_V_full_n & corr1_out_V_keep_V_full_n & corr1_out_V_id_V_full_n & corr1_out_V_dest_V_full_n & corr1_out_V_data_V_full_n);

assign k_fu_2587_p2 = (k_0_reg_1643 + 7'd1);

assign lhs_V_fu_2697_p3 = {{select_ln13_reg_3357}, {4'd0}};

assign mul_ln1148_1_fu_2733_p1 = 26'd4113;

assign mul_ln1148_fu_2725_p1 = 26'd4113;

assign or_ln141_fu_2164_p2 = (icmp_ln141_fu_2158_p2 | grp_fu_1672_p2);

assign or_ln321_3_fu_2092_p2 = (trunc_ln321_fu_2089_p1 | buffer_col15_0_reg_1541);

assign or_ln321_fu_1938_p2 = (14'd2 | add_ln321_266_fu_1932_p2);

assign out_layer_valid_V_address0 = zext_ln162_2_fu_2607_p1;

assign p_shl_fu_2684_p3 = {{select_ln6_reg_3351}, {4'd0}};

assign ret_V_fu_2708_p2 = (zext_ln728_fu_2704_p1 + sub_ln1192_fu_2691_p2);

assign select_ln109_1_fu_1771_p3 = ((icmp_ln106_fu_1757_p2[0:0] === 1'b1) ? buffer_line_fu_1739_p2 : ap_phi_mux_buffer_line_0_phi_fu_1512_p4);

assign select_ln109_2_fu_1815_p3 = ((icmp_ln106_fu_1757_p2[0:0] === 1'b1) ? add_ln109_fu_1809_p2 : buffer_line_fu_1739_p2);

assign select_ln109_fu_1763_p3 = ((icmp_ln106_fu_1757_p2[0:0] === 1'b1) ? 7'd0 : buffer_col_0_reg_1519);

assign select_ln1148_1_fu_2069_p3 = ((tmp_58_reg_3024[0:0] === 1'b1) ? sub_ln1148_1_fu_2063_p2 : sext_ln1148_2_fu_2053_p1);

assign select_ln1148_2_fu_2248_p3 = ((tmp_64_reg_3120[0:0] === 1'b1) ? sext_ln1148_4_fu_2241_p1 : sext_ln1148_5_fu_2245_p1);

assign select_ln1148_3_fu_2261_p3 = ((tmp_64_reg_3120[0:0] === 1'b1) ? sub_ln1148_3_fu_2255_p2 : sext_ln1148_5_fu_2245_p1);

assign select_ln1148_fu_2056_p3 = ((tmp_58_reg_3024[0:0] === 1'b1) ? sext_ln1148_1_fu_2049_p1 : sext_ln1148_2_fu_2053_p1);

assign select_ln13_fu_2648_p3 = ((icmp_ln1494_fu_2626_p2[0:0] === 1'b1) ? add_ln203_1_fu_2621_p2 : 11'd0);

assign select_ln6_fu_2640_p3 = ((tmp_68_fu_2632_p3[0:0] === 1'b1) ? aux_sum_V_fu_2616_p2 : 12'd0);

assign sext_ln1148_1_fu_2049_p1 = $signed(tmp_59_fu_2039_p4);

assign sext_ln1148_2_fu_2053_p1 = $signed(tmp_60_reg_3030);

assign sext_ln1148_4_fu_2241_p1 = $signed(tmp_65_fu_2231_p4);

assign sext_ln1148_5_fu_2245_p1 = $signed(tmp_66_reg_3126);

assign sext_ln1192_fu_2681_p1 = select_ln6_reg_3351;

assign sext_ln1265_fu_2573_p0 = biases_layer1_V_q0;

assign sext_ln1265_fu_2573_p1 = sext_ln1265_fu_2573_p0;

assign sext_ln203_fu_2558_p1 = $signed(add_ln203_56_fu_2553_p2);

assign sext_ln321_fu_1962_p1 = $signed(add_ln321_267_fu_1956_p2);

assign sext_ln703_fu_2577_p0 = biases_layer1_V_q0;

assign sext_ln703_fu_2577_p1 = sext_ln703_fu_2577_p0;

assign start_out = real_start;

assign stream_in_TREADY = stream_in_V_dest_V_0_state[1'd1];

assign stream_in_V_data_V_0_ack_in = stream_in_V_data_V_0_state[1'd1];

assign stream_in_V_data_V_0_load_A = (stream_in_V_data_V_0_state_cmp_full & ~stream_in_V_data_V_0_sel_wr);

assign stream_in_V_data_V_0_load_B = (stream_in_V_data_V_0_state_cmp_full & stream_in_V_data_V_0_sel_wr);

assign stream_in_V_data_V_0_sel = stream_in_V_data_V_0_sel_rd;

assign stream_in_V_data_V_0_state_cmp_full = ((stream_in_V_data_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_V_data_V_0_vld_in = stream_in_TVALID;

assign stream_in_V_data_V_0_vld_out = stream_in_V_data_V_0_state[1'd0];

assign stream_in_V_dest_V_0_ack_in = stream_in_V_dest_V_0_state[1'd1];

assign stream_in_V_dest_V_0_load_A = (stream_in_V_dest_V_0_state_cmp_full & ~stream_in_V_dest_V_0_sel_wr);

assign stream_in_V_dest_V_0_load_B = (stream_in_V_dest_V_0_state_cmp_full & stream_in_V_dest_V_0_sel_wr);

assign stream_in_V_dest_V_0_sel = stream_in_V_dest_V_0_sel_rd;

assign stream_in_V_dest_V_0_state_cmp_full = ((stream_in_V_dest_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_V_dest_V_0_vld_in = stream_in_TVALID;

assign stream_in_V_dest_V_0_vld_out = stream_in_V_dest_V_0_state[1'd0];

assign stream_in_V_id_V_0_ack_in = stream_in_V_id_V_0_state[1'd1];

assign stream_in_V_id_V_0_load_A = (stream_in_V_id_V_0_state_cmp_full & ~stream_in_V_id_V_0_sel_wr);

assign stream_in_V_id_V_0_load_B = (stream_in_V_id_V_0_state_cmp_full & stream_in_V_id_V_0_sel_wr);

assign stream_in_V_id_V_0_sel = stream_in_V_id_V_0_sel_rd;

assign stream_in_V_id_V_0_state_cmp_full = ((stream_in_V_id_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_V_id_V_0_vld_in = stream_in_TVALID;

assign stream_in_V_id_V_0_vld_out = stream_in_V_id_V_0_state[1'd0];

assign stream_in_V_keep_V_0_ack_in = stream_in_V_keep_V_0_state[1'd1];

assign stream_in_V_keep_V_0_load_A = (stream_in_V_keep_V_0_state_cmp_full & ~stream_in_V_keep_V_0_sel_wr);

assign stream_in_V_keep_V_0_load_B = (stream_in_V_keep_V_0_state_cmp_full & stream_in_V_keep_V_0_sel_wr);

assign stream_in_V_keep_V_0_sel = stream_in_V_keep_V_0_sel_rd;

assign stream_in_V_keep_V_0_state_cmp_full = ((stream_in_V_keep_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_V_keep_V_0_vld_in = stream_in_TVALID;

assign stream_in_V_keep_V_0_vld_out = stream_in_V_keep_V_0_state[1'd0];

assign stream_in_V_last_V_0_ack_in = stream_in_V_last_V_0_state[1'd1];

assign stream_in_V_last_V_0_load_A = (stream_in_V_last_V_0_state_cmp_full & ~stream_in_V_last_V_0_sel_wr);

assign stream_in_V_last_V_0_load_B = (stream_in_V_last_V_0_state_cmp_full & stream_in_V_last_V_0_sel_wr);

assign stream_in_V_last_V_0_sel = stream_in_V_last_V_0_sel_rd;

assign stream_in_V_last_V_0_state_cmp_full = ((stream_in_V_last_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_V_last_V_0_vld_in = stream_in_TVALID;

assign stream_in_V_last_V_0_vld_out = stream_in_V_last_V_0_state[1'd0];

assign stream_in_V_strb_V_0_ack_in = stream_in_V_strb_V_0_state[1'd1];

assign stream_in_V_strb_V_0_load_A = (stream_in_V_strb_V_0_state_cmp_full & ~stream_in_V_strb_V_0_sel_wr);

assign stream_in_V_strb_V_0_load_B = (stream_in_V_strb_V_0_state_cmp_full & stream_in_V_strb_V_0_sel_wr);

assign stream_in_V_strb_V_0_sel = stream_in_V_strb_V_0_sel_rd;

assign stream_in_V_strb_V_0_state_cmp_full = ((stream_in_V_strb_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_V_strb_V_0_vld_in = stream_in_TVALID;

assign stream_in_V_strb_V_0_vld_out = stream_in_V_strb_V_0_state[1'd0];

assign stream_in_V_user_V_0_ack_in = stream_in_V_user_V_0_state[1'd1];

assign stream_in_V_user_V_0_load_A = (stream_in_V_user_V_0_state_cmp_full & ~stream_in_V_user_V_0_sel_wr);

assign stream_in_V_user_V_0_load_B = (stream_in_V_user_V_0_state_cmp_full & stream_in_V_user_V_0_sel_wr);

assign stream_in_V_user_V_0_sel = stream_in_V_user_V_0_sel_rd;

assign stream_in_V_user_V_0_state_cmp_full = ((stream_in_V_user_V_0_state != 2'd1) ? 1'b1 : 1'b0);

assign stream_in_V_user_V_0_vld_in = stream_in_TVALID;

assign stream_in_V_user_V_0_vld_out = stream_in_V_user_V_0_state[1'd0];

assign sub_ln1148_1_fu_2063_p2 = (12'd0 - select_ln1148_fu_2056_p3);

assign sub_ln1148_2_fu_2226_p2 = (25'd0 - trunc_ln1148_1_reg_3115);

assign sub_ln1148_3_fu_2255_p2 = (12'd0 - select_ln1148_2_fu_2248_p3);

assign sub_ln1148_fu_2034_p2 = (25'd0 - trunc_ln1148_reg_3019);

assign sub_ln1192_fu_2691_p2 = ($signed(sext_ln1192_fu_2681_p1) - $signed(p_shl_fu_2684_p3));

assign sub_ln203_fu_2547_p2 = (zext_ln203_fu_2531_p1 - zext_ln203_94_fu_2543_p1);

assign subfilter_layer_V_d0 = $signed(weights_layer1_V_0_q0);

assign t_V_1_fu_2180_p3 = {{trunc_ln731_1_fu_2176_p1}, {4'd0}};

assign t_V_fu_2004_p3 = {{trunc_ln731_fu_2000_p1}, {4'd0}};

assign tmp_105_fu_1908_p3 = {{current_line_0_reg_1485}, {6'd0}};

assign tmp_106_fu_1920_p3 = {{current_line_0_reg_1485}, {2'd0}};

assign tmp_107_fu_2287_p3 = {{62'd68}, {buffer_col18_0_reg_1575}};

assign tmp_108_fu_2354_p3 = {{current_line_0_reg_1485}, {6'd0}};

assign tmp_109_fu_2366_p3 = {{current_line_0_reg_1485}, {2'd0}};

assign tmp_110_fu_2499_p3 = {{current_filter_0_reg_1620}, {6'd0}};

assign tmp_111_fu_2523_p3 = {{ap_phi_mux_filter_element_0_0_phi_fu_1635_p4}, {6'd0}};

assign tmp_112_fu_2535_p3 = {{ap_phi_mux_filter_element_0_0_phi_fu_1635_p4}, {3'd0}};

assign tmp_53_fu_1779_p3 = {{select_ln109_1_fu_1771_p3}, {6'd0}};

assign tmp_54_fu_1791_p3 = {{select_ln109_1_fu_1771_p3}, {2'd0}};

assign tmp_55_fu_1823_p3 = {{select_ln109_2_fu_1815_p3}, {6'd0}};

assign tmp_56_fu_1835_p3 = {{select_ln109_2_fu_1815_p3}, {2'd0}};

assign tmp_59_fu_2039_p4 = {{sub_ln1148_fu_2034_p2[24:20]}};

assign tmp_61_fu_2098_p4 = {{add_ln321_266_reg_2922[13:2]}};

assign tmp_62_fu_2107_p3 = {{tmp_61_fu_2098_p4}, {or_ln321_3_reg_3049}};

assign tmp_65_fu_2231_p4 = {{sub_ln1148_2_fu_2226_p2[24:20]}};

assign tmp_68_fu_2632_p3 = aux_sum_V_fu_2616_p2[32'd11];

assign trunc_ln1148_1_fu_2192_p1 = mul_ln1148_1_fu_2733_p2[24:0];

assign trunc_ln1148_fu_2016_p1 = mul_ln1148_fu_2725_p2[24:0];

assign trunc_ln321_fu_2089_p1 = add_ln321_266_reg_2922[1:0];

assign trunc_ln703_fu_2612_p1 = correlate_img_q0[10:0];

assign trunc_ln731_1_fu_2176_p1 = stream_in_V_data_V_0_data_out[7:0];

assign trunc_ln731_fu_2000_p1 = stream_in_V_data_V_0_data_out[7:0];

assign weights_layer1_V_0_address0 = sext_ln203_fu_2558_p1;

assign zext_ln162_1_fu_2598_p1 = k_0_reg_1643;

assign zext_ln162_2_fu_2607_p1 = add_ln162_fu_2602_p2;

assign zext_ln162_fu_2495_p1 = current_filter_0_reg_1620;

assign zext_ln170_fu_2396_p1 = buffer_col20_0_reg_1598;

assign zext_ln191_fu_2507_p1 = tmp_110_fu_2499_p3;

assign zext_ln194_1_fu_2563_p1 = filter_element_0_0_reg_1631;

assign zext_ln194_fu_2491_p1 = current_filter_0_reg_1620;

assign zext_ln200_fu_2593_p1 = k_0_reg_1643;

assign zext_ln203_94_fu_2543_p1 = tmp_112_fu_2535_p3;

assign zext_ln203_fu_2531_p1 = tmp_111_fu_2523_p3;

assign zext_ln321_335_fu_1799_p1 = tmp_54_fu_1791_p3;

assign zext_ln321_336_fu_1831_p1 = tmp_55_fu_1823_p3;

assign zext_ln321_337_fu_1843_p1 = tmp_56_fu_1835_p3;

assign zext_ln321_338_fu_1853_p1 = select_ln109_fu_1763_p3;

assign zext_ln321_339_fu_1863_p1 = add_ln321_264_fu_1857_p2;

assign zext_ln321_340_fu_1883_p1 = add_ln321_265_reg_2856;

assign zext_ln321_341_fu_1916_p1 = tmp_105_fu_1908_p3;

assign zext_ln321_342_fu_1928_p1 = tmp_106_fu_1920_p3;

assign zext_ln321_343_fu_1944_p1 = or_ln321_fu_1938_p2;

assign zext_ln321_344_fu_1980_p1 = buffer_col14_0_reg_1530;

assign zext_ln321_345_fu_1989_p1 = add_ln321_268_fu_1984_p2;

assign zext_ln321_346_fu_2114_p1 = tmp_62_fu_2107_p3;

assign zext_ln321_347_fu_2132_p1 = buffer_col16_0_reg_1552;

assign zext_ln321_348_fu_2147_p1 = add_ln321_269_reg_3058;

assign zext_ln321_349_fu_2204_p1 = buffer_col17_0_reg_1563;

assign zext_ln321_350_fu_2214_p1 = add_ln321_270_fu_2208_p2;

assign zext_ln321_351_fu_2309_p1 = buffer_col19_0_reg_1587;

assign zext_ln321_352_fu_2325_p1 = add_ln321_271_reg_3149;

assign zext_ln321_353_fu_2362_p1 = tmp_108_fu_2354_p3;

assign zext_ln321_354_fu_2374_p1 = tmp_109_fu_2366_p3;

assign zext_ln321_355_fu_2408_p1 = buffer_col20_0_reg_1598;

assign zext_ln321_356_fu_2417_p1 = add_ln321_273_reg_3182;

assign zext_ln321_357_fu_2440_p1 = buffer_col21_0_reg_1609;

assign zext_ln321_358_fu_2450_p1 = add_ln321_274_fu_2444_p2;

assign zext_ln321_359_fu_2467_p1 = add_ln321_275_fu_2462_p2;

assign zext_ln321_360_fu_2662_p1 = add_ln203_fu_2656_p2;

assign zext_ln321_361_fu_2672_p1 = add_ln321_276_fu_2666_p2;

assign zext_ln321_fu_1787_p1 = tmp_53_fu_1779_p3;

assign zext_ln728_fu_2704_p1 = lhs_V_fu_2697_p3;

always @ (posedge ap_clk) begin
    zext_ln321_339_reg_2848[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    zext_ln321_340_reg_2891[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    add_ln321_266_reg_2922[1:0] <= 2'b00;
    buffer_data_V_addr_3_reg_2930[1:0] <= 2'b10;
    buffer_data_V_addr_5_reg_2935[1:0] <= 2'b01;
    buffer_keep_V_addr_3_reg_2940[1:0] <= 2'b10;
    buffer_keep_V_addr_5_reg_2945[1:0] <= 2'b01;
    buffer_strb_V_addr_3_reg_2950[1:0] <= 2'b10;
    buffer_strb_V_addr_5_reg_2955[1:0] <= 2'b01;
    buffer_user_V_addr_3_reg_2960[1:0] <= 2'b10;
    buffer_user_V_addr_5_reg_2965[1:0] <= 2'b01;
    buffer_last_V_addr_3_reg_2970[1:0] <= 2'b10;
    buffer_last_V_addr_5_reg_2975[1:0] <= 2'b01;
    buffer_id_V_addr_3_reg_2980[1:0] <= 2'b10;
    buffer_id_V_addr_5_reg_2985[1:0] <= 2'b01;
    buffer_dest_V_addr_3_reg_2990[1:0] <= 2'b10;
    buffer_dest_V_addr_5_reg_2995[1:0] <= 2'b01;
    img_channel_V_addr_4_reg_3000[1:0] <= 2'b10;
    img_channel_V_addr_6_reg_3005[1:0] <= 2'b01;
    zext_ln321_345_reg_3014[63:14] <= 50'b00000000000000000000000000000000000000000000000000;
    add_ln321_272_reg_3163[1:0] <= 2'b00;
    zext_ln321_357_reg_3231[8:7] <= 2'b00;
    zext_ln194_reg_3289[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln162_reg_3294[11:6] <= 6'b000000;
    zext_ln191_reg_3299[5:0] <= 6'b000000;
    zext_ln191_reg_3299[12] <= 1'b0;
end

endmodule //conrr_layer1
