// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conrr_layer2 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        corr1_out_V_valid_V_dout,
        corr1_out_V_valid_V_empty_n,
        corr1_out_V_valid_V_read,
        corr1_out_V_data_V_dout,
        corr1_out_V_data_V_empty_n,
        corr1_out_V_data_V_read,
        corr1_out_V_keep_V_dout,
        corr1_out_V_keep_V_empty_n,
        corr1_out_V_keep_V_read,
        corr1_out_V_user_V_dout,
        corr1_out_V_user_V_empty_n,
        corr1_out_V_user_V_read,
        corr1_out_V_last_V_dout,
        corr1_out_V_last_V_empty_n,
        corr1_out_V_last_V_read,
        corr1_out_V_id_V_dout,
        corr1_out_V_id_V_empty_n,
        corr1_out_V_id_V_read,
        corr1_out_V_dest_V_dout,
        corr1_out_V_dest_V_empty_n,
        corr1_out_V_dest_V_read,
        corr2_out_V_valid_V_din,
        corr2_out_V_valid_V_full_n,
        corr2_out_V_valid_V_write,
        corr2_out_V_data_V_din,
        corr2_out_V_data_V_full_n,
        corr2_out_V_data_V_write,
        corr2_out_V_keep_V_din,
        corr2_out_V_keep_V_full_n,
        corr2_out_V_keep_V_write,
        corr2_out_V_user_V_din,
        corr2_out_V_user_V_full_n,
        corr2_out_V_user_V_write,
        corr2_out_V_last_V_din,
        corr2_out_V_last_V_full_n,
        corr2_out_V_last_V_write,
        corr2_out_V_id_V_din,
        corr2_out_V_id_V_full_n,
        corr2_out_V_id_V_write,
        corr2_out_V_dest_V_din,
        corr2_out_V_dest_V_full_n,
        corr2_out_V_dest_V_write
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_pp0_stage0 = 20'd32;
parameter    ap_ST_fsm_state8 = 20'd64;
parameter    ap_ST_fsm_pp1_stage0 = 20'd128;
parameter    ap_ST_fsm_state11 = 20'd256;
parameter    ap_ST_fsm_state12 = 20'd512;
parameter    ap_ST_fsm_state13 = 20'd1024;
parameter    ap_ST_fsm_pp2_stage0 = 20'd2048;
parameter    ap_ST_fsm_state16 = 20'd4096;
parameter    ap_ST_fsm_state17 = 20'd8192;
parameter    ap_ST_fsm_state18 = 20'd16384;
parameter    ap_ST_fsm_state19 = 20'd32768;
parameter    ap_ST_fsm_state20 = 20'd65536;
parameter    ap_ST_fsm_state21 = 20'd131072;
parameter    ap_ST_fsm_state22 = 20'd262144;
parameter    ap_ST_fsm_state23 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [0:0] corr1_out_V_valid_V_dout;
input   corr1_out_V_valid_V_empty_n;
output   corr1_out_V_valid_V_read;
input  [11:0] corr1_out_V_data_V_dout;
input   corr1_out_V_data_V_empty_n;
output   corr1_out_V_data_V_read;
input  [3:0] corr1_out_V_keep_V_dout;
input   corr1_out_V_keep_V_empty_n;
output   corr1_out_V_keep_V_read;
input  [0:0] corr1_out_V_user_V_dout;
input   corr1_out_V_user_V_empty_n;
output   corr1_out_V_user_V_read;
input  [0:0] corr1_out_V_last_V_dout;
input   corr1_out_V_last_V_empty_n;
output   corr1_out_V_last_V_read;
input  [0:0] corr1_out_V_id_V_dout;
input   corr1_out_V_id_V_empty_n;
output   corr1_out_V_id_V_read;
input  [0:0] corr1_out_V_dest_V_dout;
input   corr1_out_V_dest_V_empty_n;
output   corr1_out_V_dest_V_read;
output  [0:0] corr2_out_V_valid_V_din;
input   corr2_out_V_valid_V_full_n;
output   corr2_out_V_valid_V_write;
output  [11:0] corr2_out_V_data_V_din;
input   corr2_out_V_data_V_full_n;
output   corr2_out_V_data_V_write;
output  [3:0] corr2_out_V_keep_V_din;
input   corr2_out_V_keep_V_full_n;
output   corr2_out_V_keep_V_write;
output  [0:0] corr2_out_V_user_V_din;
input   corr2_out_V_user_V_full_n;
output   corr2_out_V_user_V_write;
output  [0:0] corr2_out_V_last_V_din;
input   corr2_out_V_last_V_full_n;
output   corr2_out_V_last_V_write;
output  [0:0] corr2_out_V_id_V_din;
input   corr2_out_V_id_V_full_n;
output   corr2_out_V_id_V_write;
output  [0:0] corr2_out_V_dest_V_din;
input   corr2_out_V_dest_V_full_n;
output   corr2_out_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg corr1_out_V_valid_V_read;
reg corr1_out_V_data_V_read;
reg corr1_out_V_keep_V_read;
reg corr1_out_V_user_V_read;
reg corr1_out_V_last_V_read;
reg corr1_out_V_id_V_read;
reg corr1_out_V_dest_V_read;
reg corr2_out_V_valid_V_write;
reg corr2_out_V_data_V_write;
reg corr2_out_V_keep_V_write;
reg corr2_out_V_user_V_write;
reg corr2_out_V_last_V_write;
reg corr2_out_V_id_V_write;
reg corr2_out_V_dest_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [9:0] out_layer_data_V_address0;
reg    out_layer_data_V_ce0;
reg    out_layer_data_V_we0;
reg   [11:0] out_layer_data_V_d0;
wire   [11:0] out_layer_data_V_q0;
wire   [9:0] weights_layer2_V_0_address0;
reg    weights_layer2_V_0_ce0;
wire   [5:0] weights_layer2_V_0_q0;
wire   [3:0] biases_layer2_V_address0;
reg    biases_layer2_V_ce0;
wire   [3:0] biases_layer2_V_q0;
reg    corr1_out_V_valid_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln247_reg_1294;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln269_reg_1280;
reg    corr1_out_V_data_V_blk_n;
reg    corr1_out_V_keep_V_blk_n;
reg    corr1_out_V_user_V_blk_n;
reg    corr1_out_V_last_V_blk_n;
reg    corr1_out_V_id_V_blk_n;
reg    corr1_out_V_dest_V_blk_n;
reg    corr2_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state23;
reg    corr2_out_V_data_V_blk_n;
reg    corr2_out_V_keep_V_blk_n;
reg    corr2_out_V_user_V_blk_n;
reg    corr2_out_V_last_V_blk_n;
reg    corr2_out_V_id_V_blk_n;
reg    corr2_out_V_dest_V_blk_n;
reg   [6:0] index_input_element1_10_reg_659;
reg   [6:0] index_input_element1_reg_670;
reg   [6:0] index_input_element2_reg_704;
wire   [6:0] current_line_fu_782_p2;
reg   [6:0] current_line_reg_1235;
wire    ap_CS_fsm_state2;
wire   [3:0] i_fu_794_p2;
reg   [3:0] i_reg_1243;
wire    ap_CS_fsm_state3;
wire   [10:0] zext_ln225_fu_808_p1;
reg   [10:0] zext_ln225_reg_1248;
wire   [0:0] icmp_ln224_fu_788_p2;
wire   [0:0] icmp_ln244_fu_812_p2;
reg   [0:0] icmp_ln244_reg_1253;
wire   [6:0] j_fu_824_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln229_fu_844_p2;
wire    ap_CS_fsm_state5;
wire   [5:0] current_input_channe_12_fu_850_p2;
reg   [5:0] current_input_channe_12_reg_1269;
wire   [12:0] zext_ln244_fu_864_p1;
reg   [12:0] zext_ln244_reg_1274;
wire   [0:0] icmp_ln269_fu_868_p2;
wire    ap_block_state6_pp0_stage0_iter0;
wire    io_acc_block_signal_op103;
reg    ap_block_state7_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] index_input_element_35_fu_874_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [12:0] add_ln203_53_fu_884_p2;
reg   [12:0] add_ln203_53_reg_1289;
wire   [0:0] icmp_ln247_fu_898_p2;
wire    ap_block_state9_pp1_stage0_iter0;
wire    io_acc_block_signal_op137;
reg    ap_block_state10_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [6:0] index_input_element_fu_904_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [12:0] add_ln203_52_fu_914_p2;
reg   [12:0] add_ln203_52_reg_1303;
wire   [3:0] current_filter_fu_934_p2;
reg   [3:0] current_filter_reg_1311;
wire    ap_CS_fsm_state11;
wire   [63:0] zext_ln314_fu_940_p1;
reg   [63:0] zext_ln314_reg_1316;
wire   [0:0] icmp_ln308_fu_928_p2;
wire   [10:0] zext_ln1265_fu_944_p1;
reg   [10:0] zext_ln1265_reg_1321;
wire   [10:0] zext_ln310_fu_956_p1;
reg   [10:0] zext_ln310_reg_1326;
wire   [5:0] current_input_channe_13_fu_966_p2;
reg   [5:0] current_input_channe_13_reg_1335;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln310_fu_960_p2;
wire   [12:0] zext_ln203_91_fu_1020_p1;
reg   [12:0] zext_ln203_91_reg_1350;
wire    ap_CS_fsm_state13;
reg   [5:0] subfilter_layer_0_V_reg_1355;
wire   [0:0] icmp_ln318_fu_1024_p2;
reg   [0:0] icmp_ln318_reg_1360;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state14_pp2_stage0_iter0;
wire    ap_block_state15_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [6:0] add_ln318_fu_1030_p2;
reg   [6:0] add_ln318_reg_1364;
reg    ap_enable_reg_pp2_iter0;
wire   [6:0] index_input_element_37_fu_1061_p2;
reg   [6:0] index_input_element_37_reg_1377;
wire    ap_CS_fsm_state18;
reg   [9:0] out_layer_data_V_add_1_reg_1382;
wire   [0:0] icmp_ln325_fu_1055_p2;
wire  signed [11:0] sext_ln1265_fu_1093_p1;
reg  signed [11:0] sext_ln1265_reg_1392;
wire    ap_CS_fsm_state20;
wire  signed [10:0] sext_ln703_fu_1097_p1;
reg  signed [10:0] sext_ln703_reg_1397;
wire   [6:0] index_input_element_36_fu_1107_p2;
reg   [6:0] index_input_element_36_reg_1405;
wire    ap_CS_fsm_state21;
reg   [9:0] out_layer_data_V_add_2_reg_1410;
wire   [0:0] icmp_ln330_fu_1101_p2;
wire    ap_CS_fsm_state22;
wire   [11:0] aux_sum_V_fu_1140_p2;
reg   [11:0] aux_sum_V_reg_1440;
wire   [10:0] add_ln203_fu_1145_p2;
reg   [10:0] add_ln203_reg_1446;
reg   [0:0] tmp_52_reg_1451;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state9;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state14;
reg    ap_enable_reg_pp2_iter1;
reg   [5:0] correlate_img_address0;
reg    correlate_img_ce0;
reg    correlate_img_we0;
wire   [11:0] correlate_img_q0;
reg   [11:0] img_channel_0_data_s_address0;
reg    img_channel_0_data_s_ce0;
reg    img_channel_0_data_s_we0;
wire   [11:0] img_channel_0_data_s_q0;
reg   [11:0] img_channel_0_keep_s_address0;
reg    img_channel_0_keep_s_ce0;
reg    img_channel_0_keep_s_we0;
wire   [3:0] img_channel_0_keep_s_q0;
reg   [11:0] img_channel_0_user_s_address0;
reg    img_channel_0_user_s_ce0;
reg    img_channel_0_user_s_we0;
wire   [0:0] img_channel_0_user_s_q0;
reg   [11:0] img_channel_0_last_s_address0;
reg    img_channel_0_last_s_ce0;
reg    img_channel_0_last_s_we0;
wire   [0:0] img_channel_0_last_s_q0;
reg   [11:0] img_channel_0_id_V_address0;
reg    img_channel_0_id_V_ce0;
reg    img_channel_0_id_V_we0;
wire   [0:0] img_channel_0_id_V_q0;
reg   [11:0] img_channel_0_dest_s_address0;
reg    img_channel_0_dest_s_ce0;
reg    img_channel_0_dest_s_we0;
wire   [0:0] img_channel_0_dest_s_q0;
reg   [12:0] channel_from_prev_ou_address0;
reg    channel_from_prev_ou_ce0;
reg    channel_from_prev_ou_we0;
wire   [11:0] channel_from_prev_ou_q0;
wire    grp_CORRELATE_fu_739_ap_start;
wire    grp_CORRELATE_fu_739_ap_done;
wire    grp_CORRELATE_fu_739_ap_idle;
wire    grp_CORRELATE_fu_739_ap_ready;
wire   [12:0] grp_CORRELATE_fu_739_prev_output_channel_V_address0;
wire    grp_CORRELATE_fu_739_prev_output_channel_V_ce0;
wire   [5:0] grp_CORRELATE_fu_739_correlate_img_V_address0;
wire    grp_CORRELATE_fu_739_correlate_img_V_ce0;
wire    grp_CORRELATE_fu_739_correlate_img_V_we0;
wire   [11:0] grp_CORRELATE_fu_739_correlate_img_V_d0;
reg   [6:0] current_line_0_reg_614;
reg    ap_block_state1;
reg   [3:0] i_0_reg_626;
wire   [0:0] icmp_ln225_fu_818_p2;
wire   [0:0] icmp_ln221_fu_776_p2;
reg   [6:0] j_0_reg_637;
reg   [5:0] current_input_channe_reg_648;
wire    ap_CS_fsm_state8;
reg   [3:0] current_filter_0_reg_681;
reg   [5:0] current_input_channe_19_reg_692;
reg   [6:0] ap_phi_mux_index_input_element2_phi_fu_708_p4;
wire    ap_block_pp2_stage0;
reg   [6:0] index_input_element2_18_reg_716;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state19;
reg   [6:0] index_input_element2_19_reg_727;
wire    io_acc_block_signal_op272;
reg    grp_CORRELATE_fu_739_ap_start_reg;
wire    ap_CS_fsm_state16;
wire   [63:0] zext_ln203_84_fu_839_p1;
wire   [63:0] zext_ln203_88_fu_889_p1;
wire   [63:0] zext_ln203_86_fu_919_p1;
wire  signed [63:0] sext_ln203_fu_1007_p1;
wire   [63:0] zext_ln203_93_fu_1045_p1;
wire   [63:0] zext_ln321_fu_1050_p1;
wire   [63:0] zext_ln1265_28_fu_1081_p1;
wire   [63:0] zext_ln327_fu_1067_p1;
wire   [63:0] zext_ln1265_26_fu_1122_p1;
wire   [63:0] zext_ln332_fu_1127_p1;
wire   [11:0] add_ln703_fu_1086_p2;
wire   [9:0] tmp_99_fu_800_p3;
wire   [10:0] zext_ln203_fu_830_p1;
wire   [10:0] add_ln203_51_fu_834_p2;
wire   [11:0] tmp_100_fu_856_p3;
wire   [12:0] zext_ln203_87_fu_880_p1;
wire   [12:0] zext_ln203_85_fu_910_p1;
wire   [9:0] tmp_101_fu_948_p3;
wire   [9:0] tmp_102_fu_972_p3;
wire   [7:0] tmp_103_fu_984_p3;
wire   [10:0] zext_ln203_89_fu_980_p1;
wire   [10:0] zext_ln203_90_fu_992_p1;
wire   [10:0] sub_ln203_fu_996_p2;
wire   [10:0] add_ln203_54_fu_1002_p2;
wire   [11:0] tmp_104_fu_1012_p3;
wire   [12:0] zext_ln203_92_fu_1036_p1;
wire   [12:0] add_ln203_55_fu_1040_p2;
wire   [10:0] zext_ln1265_27_fu_1072_p1;
wire   [10:0] add_ln1265_8_fu_1076_p2;
wire  signed [3:0] sext_ln1265_fu_1093_p0;
wire  signed [3:0] sext_ln703_fu_1097_p0;
wire   [10:0] zext_ln1265_25_fu_1113_p1;
wire   [10:0] add_ln1265_fu_1117_p2;
wire   [10:0] trunc_ln703_fu_1136_p1;
wire  signed [11:0] select_ln6_fu_1163_p3;
wire   [13:0] shl_ln_fu_1173_p3;
wire  signed [14:0] sext_ln1118_fu_1169_p1;
wire  signed [14:0] sext_ln1118_2_fu_1181_p1;
wire   [0:0] icmp_ln1494_fu_1158_p2;
wire   [10:0] select_ln13_fu_1191_p3;
wire   [14:0] lhs_V_fu_1198_p3;
wire   [14:0] r_V_fu_1185_p2;
wire   [15:0] zext_ln728_fu_1206_p1;
wire  signed [15:0] sext_ln1192_fu_1210_p1;
wire   [15:0] ret_V_fu_1214_p2;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_CORRELATE_fu_739_ap_start_reg = 1'b0;
end

conrr_layer2_out_rcU #(
    .DataWidth( 12 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
out_layer_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_layer_data_V_address0),
    .ce0(out_layer_data_V_ce0),
    .we0(out_layer_data_V_we0),
    .d0(out_layer_data_V_d0),
    .q0(out_layer_data_V_q0)
);

conrr_layer2_weigsc4 #(
    .DataWidth( 6 ),
    .AddressRange( 672 ),
    .AddressWidth( 10 ))
weights_layer2_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer2_V_0_address0),
    .ce0(weights_layer2_V_0_ce0),
    .q0(weights_layer2_V_0_q0)
);

conrr_layer2_biastde #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
biases_layer2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_layer2_V_address0),
    .ce0(biases_layer2_V_ce0),
    .q0(biases_layer2_V_q0)
);

conrr_layer1_corrfYi #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
correlate_img_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(correlate_img_address0),
    .ce0(correlate_img_ce0),
    .we0(correlate_img_we0),
    .d0(grp_CORRELATE_fu_739_correlate_img_V_d0),
    .q0(correlate_img_q0)
);

conrr_layer2_img_vdy #(
    .DataWidth( 12 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
img_channel_0_data_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_data_s_address0),
    .ce0(img_channel_0_data_s_ce0),
    .we0(img_channel_0_data_s_we0),
    .d0(corr1_out_V_data_V_dout),
    .q0(img_channel_0_data_s_q0)
);

conrr_layer2_img_wdI #(
    .DataWidth( 4 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
img_channel_0_keep_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_keep_s_address0),
    .ce0(img_channel_0_keep_s_ce0),
    .we0(img_channel_0_keep_s_we0),
    .d0(corr1_out_V_keep_V_dout),
    .q0(img_channel_0_keep_s_q0)
);

conrr_layer2_img_xdS #(
    .DataWidth( 1 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
img_channel_0_user_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_user_s_address0),
    .ce0(img_channel_0_user_s_ce0),
    .we0(img_channel_0_user_s_we0),
    .d0(corr1_out_V_user_V_dout),
    .q0(img_channel_0_user_s_q0)
);

conrr_layer2_img_xdS #(
    .DataWidth( 1 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
img_channel_0_last_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_last_s_address0),
    .ce0(img_channel_0_last_s_ce0),
    .we0(img_channel_0_last_s_we0),
    .d0(corr1_out_V_last_V_dout),
    .q0(img_channel_0_last_s_q0)
);

conrr_layer2_img_xdS #(
    .DataWidth( 1 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
img_channel_0_id_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_id_V_address0),
    .ce0(img_channel_0_id_V_ce0),
    .we0(img_channel_0_id_V_we0),
    .d0(corr1_out_V_id_V_dout),
    .q0(img_channel_0_id_V_q0)
);

conrr_layer2_img_xdS #(
    .DataWidth( 1 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
img_channel_0_dest_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_dest_s_address0),
    .ce0(img_channel_0_dest_s_ce0),
    .we0(img_channel_0_dest_s_we0),
    .d0(corr1_out_V_dest_V_dout),
    .q0(img_channel_0_dest_s_q0)
);

conrr_layer2_chanBew #(
    .DataWidth( 12 ),
    .AddressRange( 5508 ),
    .AddressWidth( 13 ))
channel_from_prev_ou_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(channel_from_prev_ou_address0),
    .ce0(channel_from_prev_ou_ce0),
    .we0(channel_from_prev_ou_we0),
    .d0(img_channel_0_data_s_q0),
    .q0(channel_from_prev_ou_q0)
);

CORRELATE grp_CORRELATE_fu_739(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CORRELATE_fu_739_ap_start),
    .ap_done(grp_CORRELATE_fu_739_ap_done),
    .ap_idle(grp_CORRELATE_fu_739_ap_idle),
    .ap_ready(grp_CORRELATE_fu_739_ap_ready),
    .prev_output_channel_V_address0(grp_CORRELATE_fu_739_prev_output_channel_V_address0),
    .prev_output_channel_V_ce0(grp_CORRELATE_fu_739_prev_output_channel_V_ce0),
    .prev_output_channel_V_q0(channel_from_prev_ou_q0),
    .filter_0_V_read(subfilter_layer_0_V_reg_1355),
    .correlate_img_V_address0(grp_CORRELATE_fu_739_correlate_img_V_address0),
    .correlate_img_V_ce0(grp_CORRELATE_fu_739_correlate_img_V_ce0),
    .correlate_img_V_we0(grp_CORRELATE_fu_739_correlate_img_V_we0),
    .correlate_img_V_d0(grp_CORRELATE_fu_739_correlate_img_V_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln221_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0) & (icmp_ln244_reg_1253 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0) & (icmp_ln244_reg_1253 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln244_reg_1253 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state9))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state9);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln244_reg_1253 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CORRELATE_fu_739_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_CORRELATE_fu_739_ap_start_reg <= 1'b1;
        end else if ((grp_CORRELATE_fu_739_ap_ready == 1'b1)) begin
            grp_CORRELATE_fu_739_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln229_fu_844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        current_filter_0_reg_681 <= 4'd0;
    end else if (((icmp_ln330_fu_1101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        current_filter_0_reg_681 <= current_filter_reg_1311;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln325_fu_1055_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        current_input_channe_19_reg_692 <= current_input_channe_13_reg_1335;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln308_fu_928_p2 == 1'd0))) begin
        current_input_channe_19_reg_692 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln224_fu_788_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        current_input_channe_reg_648 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        current_input_channe_reg_648 <= current_input_channe_12_reg_1269;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln308_fu_928_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        current_line_0_reg_614 <= current_line_reg_1235;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_line_0_reg_614 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln221_fu_776_p2 == 1'd0))) begin
        i_0_reg_626 <= 4'd0;
    end else if (((icmp_ln225_fu_818_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_reg_626 <= i_reg_1243;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0) & (icmp_ln244_reg_1253 == 1'd0))) begin
        index_input_element1_10_reg_659 <= 7'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_fu_868_p2 == 1'd0))) begin
        index_input_element1_10_reg_659 <= index_input_element_35_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln244_reg_1253 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0))) begin
        index_input_element1_reg_670 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_fu_898_p2 == 1'd0))) begin
        index_input_element1_reg_670 <= index_input_element_fu_904_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        index_input_element2_18_reg_716 <= index_input_element_37_reg_1377;
    end else if (((grp_CORRELATE_fu_739_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        index_input_element2_18_reg_716 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        index_input_element2_19_reg_727 <= 7'd0;
    end else if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        index_input_element2_19_reg_727 <= index_input_element_36_reg_1405;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        index_input_element2_reg_704 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln318_reg_1360 == 1'd0))) begin
        index_input_element2_reg_704 <= add_ln318_reg_1364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln224_fu_788_p2 == 1'd0))) begin
        j_0_reg_637 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln225_fu_818_p2 == 1'd0))) begin
        j_0_reg_637 <= j_fu_824_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_fu_898_p2 == 1'd0))) begin
        add_ln203_52_reg_1303 <= add_ln203_52_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_fu_868_p2 == 1'd0))) begin
        add_ln203_53_reg_1289 <= add_ln203_53_fu_884_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln203_reg_1446 <= add_ln203_fu_1145_p2;
        aux_sum_V_reg_1440 <= aux_sum_V_fu_1140_p2;
        tmp_52_reg_1451 <= aux_sum_V_fu_1140_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln318_reg_1364 <= add_ln318_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        current_filter_reg_1311 <= current_filter_fu_934_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        current_input_channe_12_reg_1269 <= current_input_channe_12_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        current_input_channe_13_reg_1335 <= current_input_channe_13_fu_966_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        current_line_reg_1235 <= current_line_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_1243 <= i_fu_794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln224_fu_788_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln244_reg_1253 <= icmp_ln244_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln247_reg_1294 <= icmp_ln247_fu_898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln269_reg_1280 <= icmp_ln269_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln318_reg_1360 <= icmp_ln318_fu_1024_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        index_input_element_36_reg_1405 <= index_input_element_36_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        index_input_element_37_reg_1377 <= index_input_element_37_fu_1061_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln325_fu_1055_p2 == 1'd0))) begin
        out_layer_data_V_add_1_reg_1382 <= zext_ln1265_28_fu_1081_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln330_fu_1101_p2 == 1'd0))) begin
        out_layer_data_V_add_2_reg_1410 <= zext_ln1265_26_fu_1122_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        sext_ln1265_reg_1392 <= sext_ln1265_fu_1093_p1;
        sext_ln703_reg_1397 <= sext_ln703_fu_1097_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        subfilter_layer_0_V_reg_1355 <= weights_layer2_V_0_q0;
        zext_ln203_91_reg_1350[11 : 6] <= zext_ln203_91_fu_1020_p1[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln308_fu_928_p2 == 1'd0))) begin
        zext_ln1265_reg_1321[3 : 0] <= zext_ln1265_fu_944_p1[3 : 0];
        zext_ln310_reg_1326[9 : 6] <= zext_ln310_fu_956_p1[9 : 6];
        zext_ln314_reg_1316[3 : 0] <= zext_ln314_fu_940_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln224_fu_788_p2 == 1'd0))) begin
        zext_ln225_reg_1248[9 : 6] <= zext_ln225_fu_808_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0))) begin
        zext_ln244_reg_1274[11 : 6] <= zext_ln244_fu_864_p1[11 : 6];
    end
end

always @ (*) begin
    if ((icmp_ln269_fu_868_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln247_fu_898_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln318_fu_1024_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln318_reg_1360 == 1'd0))) begin
        ap_phi_mux_index_input_element2_phi_fu_708_p4 = add_ln318_reg_1364;
    end else begin
        ap_phi_mux_index_input_element2_phi_fu_708_p4 = index_input_element2_reg_704;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        biases_layer2_V_ce0 = 1'b1;
    end else begin
        biases_layer2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        channel_from_prev_ou_address0 = zext_ln321_fu_1050_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        channel_from_prev_ou_address0 = grp_CORRELATE_fu_739_prev_output_channel_V_address0;
    end else begin
        channel_from_prev_ou_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        channel_from_prev_ou_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        channel_from_prev_ou_ce0 = grp_CORRELATE_fu_739_prev_output_channel_V_ce0;
    end else begin
        channel_from_prev_ou_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln318_reg_1360 == 1'd0))) begin
        channel_from_prev_ou_we0 = 1'b1;
    end else begin
        channel_from_prev_ou_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        corr1_out_V_data_V_blk_n = corr1_out_V_data_V_empty_n;
    end else begin
        corr1_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        corr1_out_V_data_V_read = 1'b1;
    end else begin
        corr1_out_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        corr1_out_V_dest_V_blk_n = corr1_out_V_dest_V_empty_n;
    end else begin
        corr1_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        corr1_out_V_dest_V_read = 1'b1;
    end else begin
        corr1_out_V_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        corr1_out_V_id_V_blk_n = corr1_out_V_id_V_empty_n;
    end else begin
        corr1_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        corr1_out_V_id_V_read = 1'b1;
    end else begin
        corr1_out_V_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        corr1_out_V_keep_V_blk_n = corr1_out_V_keep_V_empty_n;
    end else begin
        corr1_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        corr1_out_V_keep_V_read = 1'b1;
    end else begin
        corr1_out_V_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        corr1_out_V_last_V_blk_n = corr1_out_V_last_V_empty_n;
    end else begin
        corr1_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        corr1_out_V_last_V_read = 1'b1;
    end else begin
        corr1_out_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        corr1_out_V_user_V_blk_n = corr1_out_V_user_V_empty_n;
    end else begin
        corr1_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        corr1_out_V_user_V_read = 1'b1;
    end else begin
        corr1_out_V_user_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0) & (1'b0 == ap_block_pp1_stage0)))) begin
        corr1_out_V_valid_V_blk_n = corr1_out_V_valid_V_empty_n;
    end else begin
        corr1_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        corr1_out_V_valid_V_read = 1'b1;
    end else begin
        corr1_out_V_valid_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        corr2_out_V_data_V_blk_n = corr2_out_V_data_V_full_n;
    end else begin
        corr2_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        corr2_out_V_data_V_write = 1'b1;
    end else begin
        corr2_out_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        corr2_out_V_dest_V_blk_n = corr2_out_V_dest_V_full_n;
    end else begin
        corr2_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        corr2_out_V_dest_V_write = 1'b1;
    end else begin
        corr2_out_V_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        corr2_out_V_id_V_blk_n = corr2_out_V_id_V_full_n;
    end else begin
        corr2_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        corr2_out_V_id_V_write = 1'b1;
    end else begin
        corr2_out_V_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        corr2_out_V_keep_V_blk_n = corr2_out_V_keep_V_full_n;
    end else begin
        corr2_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        corr2_out_V_keep_V_write = 1'b1;
    end else begin
        corr2_out_V_keep_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        corr2_out_V_last_V_blk_n = corr2_out_V_last_V_full_n;
    end else begin
        corr2_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        corr2_out_V_last_V_write = 1'b1;
    end else begin
        corr2_out_V_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        corr2_out_V_user_V_blk_n = corr2_out_V_user_V_full_n;
    end else begin
        corr2_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        corr2_out_V_user_V_write = 1'b1;
    end else begin
        corr2_out_V_user_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        corr2_out_V_valid_V_blk_n = corr2_out_V_valid_V_full_n;
    end else begin
        corr2_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        corr2_out_V_valid_V_write = 1'b1;
    end else begin
        corr2_out_V_valid_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        correlate_img_address0 = zext_ln327_fu_1067_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        correlate_img_address0 = grp_CORRELATE_fu_739_correlate_img_V_address0;
    end else begin
        correlate_img_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        correlate_img_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        correlate_img_ce0 = grp_CORRELATE_fu_739_correlate_img_V_ce0;
    end else begin
        correlate_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        correlate_img_we0 = grp_CORRELATE_fu_739_correlate_img_V_we0;
    end else begin
        correlate_img_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        img_channel_0_data_s_address0 = zext_ln203_93_fu_1045_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        img_channel_0_data_s_address0 = zext_ln203_86_fu_919_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_0_data_s_address0 = zext_ln203_88_fu_889_p1;
    end else begin
        img_channel_0_data_s_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_channel_0_data_s_ce0 = 1'b1;
    end else begin
        img_channel_0_data_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        img_channel_0_data_s_we0 = 1'b1;
    end else begin
        img_channel_0_data_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        img_channel_0_dest_s_address0 = zext_ln332_fu_1127_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        img_channel_0_dest_s_address0 = zext_ln203_86_fu_919_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_0_dest_s_address0 = zext_ln203_88_fu_889_p1;
    end else begin
        img_channel_0_dest_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_channel_0_dest_s_ce0 = 1'b1;
    end else begin
        img_channel_0_dest_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        img_channel_0_dest_s_we0 = 1'b1;
    end else begin
        img_channel_0_dest_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        img_channel_0_id_V_address0 = zext_ln332_fu_1127_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        img_channel_0_id_V_address0 = zext_ln203_86_fu_919_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_0_id_V_address0 = zext_ln203_88_fu_889_p1;
    end else begin
        img_channel_0_id_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_channel_0_id_V_ce0 = 1'b1;
    end else begin
        img_channel_0_id_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        img_channel_0_id_V_we0 = 1'b1;
    end else begin
        img_channel_0_id_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        img_channel_0_keep_s_address0 = zext_ln332_fu_1127_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        img_channel_0_keep_s_address0 = zext_ln203_86_fu_919_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_0_keep_s_address0 = zext_ln203_88_fu_889_p1;
    end else begin
        img_channel_0_keep_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_channel_0_keep_s_ce0 = 1'b1;
    end else begin
        img_channel_0_keep_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        img_channel_0_keep_s_we0 = 1'b1;
    end else begin
        img_channel_0_keep_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        img_channel_0_last_s_address0 = zext_ln332_fu_1127_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        img_channel_0_last_s_address0 = zext_ln203_86_fu_919_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_0_last_s_address0 = zext_ln203_88_fu_889_p1;
    end else begin
        img_channel_0_last_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_channel_0_last_s_ce0 = 1'b1;
    end else begin
        img_channel_0_last_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        img_channel_0_last_s_we0 = 1'b1;
    end else begin
        img_channel_0_last_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        img_channel_0_user_s_address0 = zext_ln332_fu_1127_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        img_channel_0_user_s_address0 = zext_ln203_86_fu_919_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_0_user_s_address0 = zext_ln203_88_fu_889_p1;
    end else begin
        img_channel_0_user_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        img_channel_0_user_s_ce0 = 1'b1;
    end else begin
        img_channel_0_user_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln269_reg_1280 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln247_reg_1294 == 1'd0)))) begin
        img_channel_0_user_s_we0 = 1'b1;
    end else begin
        img_channel_0_user_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln221_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        out_layer_data_V_address0 = out_layer_data_V_add_2_reg_1410;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        out_layer_data_V_address0 = zext_ln1265_26_fu_1122_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_layer_data_V_address0 = out_layer_data_V_add_1_reg_1382;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        out_layer_data_V_address0 = zext_ln1265_28_fu_1081_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_address0 = zext_ln203_84_fu_839_p1;
    end else begin
        out_layer_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state4) | ((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23)))) begin
        out_layer_data_V_ce0 = 1'b1;
    end else begin
        out_layer_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        out_layer_data_V_d0 = {{ret_V_fu_1214_p2[15:4]}};
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        out_layer_data_V_d0 = add_ln703_fu_1086_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_d0 = 12'd0;
    end else begin
        out_layer_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln225_fu_818_p2 == 1'd0)) | ((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23)))) begin
        out_layer_data_V_we0 = 1'b1;
    end else begin
        out_layer_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        weights_layer2_V_0_ce0 = 1'b1;
    end else begin
        weights_layer2_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln221_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln224_fu_788_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln225_fu_818_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln229_fu_844_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((icmp_ln244_reg_1253 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln229_fu_844_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln269_fu_868_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln269_fu_868_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln247_fu_898_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln247_fu_898_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln308_fu_928_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln310_fu_960_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln318_fu_1024_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln318_fu_1024_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((grp_CORRELATE_fu_739_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln325_fu_1055_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln330_fu_1101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((io_acc_block_signal_op272 == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1265_8_fu_1076_p2 = (zext_ln310_reg_1326 + zext_ln1265_27_fu_1072_p1);

assign add_ln1265_fu_1117_p2 = (zext_ln310_reg_1326 + zext_ln1265_25_fu_1113_p1);

assign add_ln203_51_fu_834_p2 = (zext_ln225_reg_1248 + zext_ln203_fu_830_p1);

assign add_ln203_52_fu_914_p2 = (zext_ln244_reg_1274 + zext_ln203_85_fu_910_p1);

assign add_ln203_53_fu_884_p2 = (zext_ln244_reg_1274 + zext_ln203_87_fu_880_p1);

assign add_ln203_54_fu_1002_p2 = (sub_ln203_fu_996_p2 + zext_ln1265_reg_1321);

assign add_ln203_55_fu_1040_p2 = (zext_ln203_91_reg_1350 + zext_ln203_92_fu_1036_p1);

assign add_ln203_fu_1145_p2 = ($signed(sext_ln703_reg_1397) + $signed(trunc_ln703_fu_1136_p1));

assign add_ln318_fu_1030_p2 = (ap_phi_mux_index_input_element2_phi_fu_708_p4 + 7'd1);

assign add_ln703_fu_1086_p2 = (correlate_img_q0 + out_layer_data_V_q0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((io_acc_block_signal_op103 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln269_reg_1280 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((io_acc_block_signal_op103 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln269_reg_1280 == 1'd0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((io_acc_block_signal_op137 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln247_reg_1294 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((io_acc_block_signal_op137 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln247_reg_1294 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter1 = ((io_acc_block_signal_op137 == 1'b0) & (icmp_ln247_reg_1294 == 1'd0));
end

assign ap_block_state14_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter1 = ((io_acc_block_signal_op103 == 1'b0) & (icmp_ln269_reg_1280 == 1'd0));
end

assign ap_block_state9_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign aux_sum_V_fu_1140_p2 = ($signed(sext_ln1265_reg_1392) + $signed(out_layer_data_V_q0));

assign biases_layer2_V_address0 = zext_ln314_reg_1316;

assign corr2_out_V_data_V_din = {{ret_V_fu_1214_p2[15:4]}};

assign corr2_out_V_dest_V_din = img_channel_0_dest_s_q0;

assign corr2_out_V_id_V_din = img_channel_0_id_V_q0;

assign corr2_out_V_keep_V_din = img_channel_0_keep_s_q0;

assign corr2_out_V_last_V_din = img_channel_0_last_s_q0;

assign corr2_out_V_user_V_din = img_channel_0_user_s_q0;

assign corr2_out_V_valid_V_din = 1'd0;

assign current_filter_fu_934_p2 = (current_filter_0_reg_681 + 4'd1);

assign current_input_channe_12_fu_850_p2 = (current_input_channe_reg_648 + 6'd1);

assign current_input_channe_13_fu_966_p2 = (current_input_channe_19_reg_692 + 6'd1);

assign current_line_fu_782_p2 = (current_line_0_reg_614 + 7'd1);

assign grp_CORRELATE_fu_739_ap_start = grp_CORRELATE_fu_739_ap_start_reg;

assign i_fu_794_p2 = (i_0_reg_626 + 4'd1);

assign icmp_ln1494_fu_1158_p2 = (($signed(aux_sum_V_reg_1440) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln221_fu_776_p2 = ((current_line_0_reg_614 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_788_p2 = ((i_0_reg_626 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_818_p2 = ((j_0_reg_637 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln229_fu_844_p2 = ((current_input_channe_reg_648 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln244_fu_812_p2 = ((current_line_0_reg_614 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln247_fu_898_p2 = ((index_input_element1_reg_670 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln269_fu_868_p2 = ((index_input_element1_10_reg_659 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln308_fu_928_p2 = ((current_filter_0_reg_681 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln310_fu_960_p2 = ((current_input_channe_19_reg_692 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_1024_p2 = ((ap_phi_mux_index_input_element2_phi_fu_708_p4 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln325_fu_1055_p2 = ((index_input_element2_18_reg_716 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln330_fu_1101_p2 = ((index_input_element2_19_reg_727 == 7'd64) ? 1'b1 : 1'b0);

assign index_input_element_35_fu_874_p2 = (index_input_element1_10_reg_659 + 7'd1);

assign index_input_element_36_fu_1107_p2 = (index_input_element2_19_reg_727 + 7'd1);

assign index_input_element_37_fu_1061_p2 = (index_input_element2_18_reg_716 + 7'd1);

assign index_input_element_fu_904_p2 = (index_input_element1_reg_670 + 7'd1);

assign io_acc_block_signal_op103 = (corr1_out_V_valid_V_empty_n & corr1_out_V_user_V_empty_n & corr1_out_V_last_V_empty_n & corr1_out_V_keep_V_empty_n & corr1_out_V_id_V_empty_n & corr1_out_V_dest_V_empty_n & corr1_out_V_data_V_empty_n);

assign io_acc_block_signal_op137 = (corr1_out_V_valid_V_empty_n & corr1_out_V_user_V_empty_n & corr1_out_V_last_V_empty_n & corr1_out_V_keep_V_empty_n & corr1_out_V_id_V_empty_n & corr1_out_V_dest_V_empty_n & corr1_out_V_data_V_empty_n);

assign io_acc_block_signal_op272 = (corr2_out_V_valid_V_full_n & corr2_out_V_user_V_full_n & corr2_out_V_last_V_full_n & corr2_out_V_keep_V_full_n & corr2_out_V_id_V_full_n & corr2_out_V_dest_V_full_n & corr2_out_V_data_V_full_n);

assign j_fu_824_p2 = (j_0_reg_637 + 7'd1);

assign lhs_V_fu_1198_p3 = {{select_ln13_fu_1191_p3}, {4'd0}};

assign r_V_fu_1185_p2 = ($signed(sext_ln1118_fu_1169_p1) + $signed(sext_ln1118_2_fu_1181_p1));

assign ret_V_fu_1214_p2 = ($signed(zext_ln728_fu_1206_p1) + $signed(sext_ln1192_fu_1210_p1));

assign select_ln13_fu_1191_p3 = ((icmp_ln1494_fu_1158_p2[0:0] === 1'b1) ? add_ln203_reg_1446 : 11'd0);

assign select_ln6_fu_1163_p3 = ((tmp_52_reg_1451[0:0] === 1'b1) ? aux_sum_V_reg_1440 : 12'd0);

assign sext_ln1118_2_fu_1181_p1 = $signed(shl_ln_fu_1173_p3);

assign sext_ln1118_fu_1169_p1 = select_ln6_fu_1163_p3;

assign sext_ln1192_fu_1210_p1 = $signed(r_V_fu_1185_p2);

assign sext_ln1265_fu_1093_p0 = biases_layer2_V_q0;

assign sext_ln1265_fu_1093_p1 = sext_ln1265_fu_1093_p0;

assign sext_ln203_fu_1007_p1 = $signed(add_ln203_54_fu_1002_p2);

assign sext_ln703_fu_1097_p0 = biases_layer2_V_q0;

assign sext_ln703_fu_1097_p1 = sext_ln703_fu_1097_p0;

assign shl_ln_fu_1173_p3 = {{select_ln6_fu_1163_p3}, {2'd0}};

assign start_out = real_start;

assign sub_ln203_fu_996_p2 = (zext_ln203_89_fu_980_p1 - zext_ln203_90_fu_992_p1);

assign tmp_100_fu_856_p3 = {{current_input_channe_reg_648}, {6'd0}};

assign tmp_101_fu_948_p3 = {{current_filter_0_reg_681}, {6'd0}};

assign tmp_102_fu_972_p3 = {{current_input_channe_19_reg_692}, {4'd0}};

assign tmp_103_fu_984_p3 = {{current_input_channe_19_reg_692}, {2'd0}};

assign tmp_104_fu_1012_p3 = {{current_input_channe_19_reg_692}, {6'd0}};

assign tmp_99_fu_800_p3 = {{i_0_reg_626}, {6'd0}};

assign trunc_ln703_fu_1136_p1 = out_layer_data_V_q0[10:0];

assign weights_layer2_V_0_address0 = sext_ln203_fu_1007_p1;

assign zext_ln1265_25_fu_1113_p1 = index_input_element2_19_reg_727;

assign zext_ln1265_26_fu_1122_p1 = add_ln1265_fu_1117_p2;

assign zext_ln1265_27_fu_1072_p1 = index_input_element2_18_reg_716;

assign zext_ln1265_28_fu_1081_p1 = add_ln1265_8_fu_1076_p2;

assign zext_ln1265_fu_944_p1 = current_filter_0_reg_681;

assign zext_ln203_84_fu_839_p1 = add_ln203_51_fu_834_p2;

assign zext_ln203_85_fu_910_p1 = index_input_element1_reg_670;

assign zext_ln203_86_fu_919_p1 = add_ln203_52_reg_1303;

assign zext_ln203_87_fu_880_p1 = index_input_element1_10_reg_659;

assign zext_ln203_88_fu_889_p1 = add_ln203_53_reg_1289;

assign zext_ln203_89_fu_980_p1 = tmp_102_fu_972_p3;

assign zext_ln203_90_fu_992_p1 = tmp_103_fu_984_p3;

assign zext_ln203_91_fu_1020_p1 = tmp_104_fu_1012_p3;

assign zext_ln203_92_fu_1036_p1 = ap_phi_mux_index_input_element2_phi_fu_708_p4;

assign zext_ln203_93_fu_1045_p1 = add_ln203_55_fu_1040_p2;

assign zext_ln203_fu_830_p1 = j_0_reg_637;

assign zext_ln225_fu_808_p1 = tmp_99_fu_800_p3;

assign zext_ln244_fu_864_p1 = tmp_100_fu_856_p3;

assign zext_ln310_fu_956_p1 = tmp_101_fu_948_p3;

assign zext_ln314_fu_940_p1 = current_filter_0_reg_681;

assign zext_ln321_fu_1050_p1 = index_input_element2_reg_704;

assign zext_ln327_fu_1067_p1 = index_input_element2_18_reg_716;

assign zext_ln332_fu_1127_p1 = index_input_element2_19_reg_727;

assign zext_ln728_fu_1206_p1 = lhs_V_fu_1198_p3;

always @ (posedge ap_clk) begin
    zext_ln225_reg_1248[5:0] <= 6'b000000;
    zext_ln225_reg_1248[10] <= 1'b0;
    zext_ln244_reg_1274[5:0] <= 6'b000000;
    zext_ln244_reg_1274[12] <= 1'b0;
    zext_ln314_reg_1316[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln1265_reg_1321[10:4] <= 7'b0000000;
    zext_ln310_reg_1326[5:0] <= 6'b000000;
    zext_ln310_reg_1326[10] <= 1'b0;
    zext_ln203_91_reg_1350[5:0] <= 6'b000000;
    zext_ln203_91_reg_1350[12] <= 1'b0;
end

endmodule //conrr_layer2
