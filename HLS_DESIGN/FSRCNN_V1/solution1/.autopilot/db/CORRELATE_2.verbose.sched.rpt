

================================================================
== Vivado HLS Report for 'CORRELATE_2'
================================================================
* Date:           Fri Dec 15 20:46:53 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        FSRCNN_V1
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.702|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3201|  8001|  3201|  8001|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |  3200|  8000|   2 ~ 5  |          -|          -|  1600|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 6 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%index_filter_1 = alloca i32"   --->   Operation 7 'alloca' 'index_filter_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%sum_V_1 = alloca i12"   --->   Operation 8 'alloca' 'sum_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.76ns)   --->   "br label %1" [FSRCNN_V1/FSRCNN.cpp:46]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 4.22>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%index_0 = phi i11 [ 0, %0 ], [ %index, %hls_label_0_end ]"   --->   Operation 10 'phi' 'index_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%phi_mul = phi i23 [ 0, %0 ], [ %add_ln49, %hls_label_0_end ]" [FSRCNN_V1/FSRCNN.cpp:49]   --->   Operation 11 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%phi_urem = phi i11 [ 0, %0 ], [ %select_ln71_1, %hls_label_0_end ]" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 12 'phi' 'phi_urem' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%phi_urem33 = phi i11 [ 0, %0 ], [ %select_ln71, %hls_label_0_end ]" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 13 'phi' 'phi_urem33' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (1.88ns)   --->   "%icmp_ln46 = icmp eq i11 %index_0, -448" [FSRCNN_V1/FSRCNN.cpp:46]   --->   Operation 14 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1600, i64 1600, i64 1600)"   --->   Operation 15 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.63ns)   --->   "%index = add i11 %index_0, 1" [FSRCNN_V1/FSRCNN.cpp:46]   --->   Operation 16 'add' 'index' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln46, label %3, label %hls_label_0_begin" [FSRCNN_V1/FSRCNN.cpp:46]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (2.28ns)   --->   "%add_ln49 = add i23 2622, %phi_mul" [FSRCNN_V1/FSRCNN.cpp:49]   --->   Operation 18 'add' 'add_ln49' <Predicate = (!icmp_ln46)> <Delay = 2.28> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%tmp = call i7 @_ssdm_op_PartSelect.i7.i23.i32.i32(i23 %phi_mul, i32 16, i32 22)" [FSRCNN_V1/FSRCNN.cpp:49]   --->   Operation 19 'partselect' 'tmp' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%trunc_ln50 = trunc i11 %phi_urem to i6" [FSRCNN_V1/FSRCNN.cpp:50]   --->   Operation 20 'trunc' 'trunc_ln50' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%trunc_ln50_1 = trunc i11 %phi_urem to i5" [FSRCNN_V1/FSRCNN.cpp:50]   --->   Operation 21 'trunc' 'trunc_ln50_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln50 = zext i5 %trunc_ln50_1 to i12" [FSRCNN_V1/FSRCNN.cpp:50]   --->   Operation 22 'zext' 'zext_ln50' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (3.74ns)   --->   "%mul_ln50 = mul i12 52, %zext_ln50" [FSRCNN_V1/FSRCNN.cpp:50]   --->   Operation 23 'mul' 'mul_ln50' <Predicate = (!icmp_ln46)> <Delay = 3.74> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln51 = trunc i11 %phi_urem33 to i3" [FSRCNN_V1/FSRCNN.cpp:51]   --->   Operation 24 'trunc' 'trunc_ln51' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%trunc_ln51_1 = trunc i11 %phi_urem33 to i7" [FSRCNN_V1/FSRCNN.cpp:51]   --->   Operation 25 'trunc' 'trunc_ln51_1' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (1.87ns)   --->   "%k_y = add i7 %tmp, %trunc_ln51_1" [FSRCNN_V1/FSRCNN.cpp:51]   --->   Operation 26 'add' 'k_y' <Predicate = (!icmp_ln46)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_87 = call i1 @_ssdm_op_BitSelect.i1.i7.i32(i7 %k_y, i32 6)" [FSRCNN_V1/FSRCNN.cpp:53]   --->   Operation 27 'bitselect' 'tmp_87' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %tmp_87, label %hls_label_0_end, label %_ifconv" [FSRCNN_V1/FSRCNN.cpp:53]   --->   Operation 28 'br' <Predicate = (!icmp_ln46)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.36ns)   --->   "%icmp_ln55 = icmp ult i5 %trunc_ln50_1, 5" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 29 'icmp' 'icmp_ln55' <Predicate = (!icmp_ln46 & !tmp_87)> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.13ns)   --->   "%icmp_ln55_1 = icmp eq i3 %trunc_ln51, 0" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 30 'icmp' 'icmp_ln55_1' <Predicate = (!icmp_ln46 & !tmp_87)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_88 = call i4 @_ssdm_op_PartSelect.i4.i12.i32.i32(i12 %mul_ln50, i32 8, i32 11)" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 31 'partselect' 'tmp_88' <Predicate = (!icmp_ln46 & !tmp_87)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (1.82ns)   --->   "%add_ln65 = add i6 %trunc_ln50, -20" [FSRCNN_V1/FSRCNN.cpp:65]   --->   Operation 32 'add' 'add_ln65' <Predicate = (!icmp_ln46 & !tmp_87)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.42ns)   --->   "%icmp_ln65 = icmp ult i6 %add_ln65, 5" [FSRCNN_V1/FSRCNN.cpp:65]   --->   Operation 33 'icmp' 'icmp_ln65' <Predicate = (!icmp_ln46 & !tmp_87)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.13ns)   --->   "%icmp_ln65_1 = icmp eq i3 %trunc_ln51, -4" [FSRCNN_V1/FSRCNN.cpp:65]   --->   Operation 34 'icmp' 'icmp_ln65_1' <Predicate = (!icmp_ln46 & !tmp_87)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.97ns)   --->   "%and_ln65 = and i1 %icmp_ln65, %icmp_ln65_1" [FSRCNN_V1/FSRCNN.cpp:65]   --->   Operation 35 'and' 'and_ln65' <Predicate = (!icmp_ln46 & !tmp_87)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "ret void" [FSRCNN_V1/FSRCNN.cpp:74]   --->   Operation 36 'ret' <Predicate = (icmp_ln46)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.01>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln1116 = zext i7 %k_y to i12" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 37 'zext' 'zext_ln1116' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_89 = call i10 @_ssdm_op_BitConcatenate.i10.i4.i6(i4 %tmp_88, i6 0)" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 38 'bitconcatenate' 'tmp_89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln1116_3 = zext i10 %tmp_89 to i12" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 39 'zext' 'zext_ln1116_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_90 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %tmp_88, i2 0)" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 40 'bitconcatenate' 'tmp_90' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln1116_4 = zext i6 %tmp_90 to i12" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 41 'zext' 'zext_ln1116_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln1116 = add i12 %zext_ln1116_3, %zext_ln1116_4" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 42 'add' 'add_ln1116' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 43 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%add_ln1116_2 = add i12 %zext_ln1116, %add_ln1116" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 43 'add' 'add_ln1116_2' <Predicate = true> <Delay = 3.75> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln1116_5 = zext i12 %add_ln1116_2 to i64" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 44 'zext' 'zext_ln1116_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%prev_output_channel_s = getelementptr [5508 x i12]* %prev_output_channel_V, i64 0, i64 %zext_ln1116_5" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 45 'getelementptr' 'prev_output_channel_s' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [2/2] (3.25ns)   --->   "%prev_output_channel_1 = load i12* %prev_output_channel_s, align 2" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 46 'load' 'prev_output_channel_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 64> <RAM>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%index_filter_1_load = load i32* %index_filter_1" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 47 'load' 'index_filter_1_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln55_1)   --->   "%select_ln55 = select i1 %icmp_ln55_1, i32 0, i32 %index_filter_1_load" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 48 'select' 'select_ln55' <Predicate = (icmp_ln55)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (0.69ns) (out node of the LUT)   --->   "%select_ln55_1 = select i1 %icmp_ln55, i32 %select_ln55, i32 %index_filter_1_load" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 49 'select' 'select_ln55_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%sext_ln62 = sext i32 %select_ln55_1 to i64" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 50 'sext' 'sext_ln62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/2] (3.25ns)   --->   "%prev_output_channel_1 = load i12* %prev_output_channel_s, align 2" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 51 'load' 'prev_output_channel_1' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 64> <RAM>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%filter_V_addr = getelementptr [25 x i7]* %filter_V, i64 0, i64 %sext_ln62" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 52 'getelementptr' 'filter_V_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [2/2] (2.32ns)   --->   "%filter_V_load = load i7* %filter_V_addr, align 1" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 53 'load' 'filter_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 64> <RAM>

State 5 <SV = 4> <Delay = 8.70>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%sext_ln1116 = sext i12 %prev_output_channel_1 to i19" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 54 'sext' 'sext_ln1116' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/2] (2.32ns)   --->   "%filter_V_load = load i7* %filter_V_addr, align 1" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 55 'load' 'filter_V_load' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 64> <RAM>
ST_5 : Operation 56 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i7 %filter_V_load to i19" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 56 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 57 [1/1] (6.38ns) (root node of the DSP)   --->   "%r_V = mul i19 %sext_ln1118, %sext_ln1116" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 57 'mul' 'r_V' <Predicate = true> <Delay = 6.38> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 6.38> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 4.63>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%sum_V_1_load = load i12* %sum_V_1" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 58 'load' 'sum_V_1_load' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%sext_ln1118_4 = sext i19 %r_V to i24" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 59 'sext' 'sext_ln1118_4' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%select_ln55_2 = select i1 %icmp_ln55_1, i12 0, i12 %sum_V_1_load" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 60 'select' 'select_ln55_2' <Predicate = (!tmp_87 & icmp_ln55)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%select_ln55_3 = select i1 %icmp_ln55, i12 %select_ln55_2, i12 %sum_V_1_load" [FSRCNN_V1/FSRCNN.cpp:55]   --->   Operation 61 'select' 'select_ln55_3' <Predicate = (!tmp_87)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%lhs_V = call i16 @_ssdm_op_BitConcatenate.i16.i12.i4(i12 %select_ln55_3, i4 0)" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 62 'bitconcatenate' 'lhs_V' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%zext_ln728 = zext i16 %lhs_V to i25" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 63 'zext' 'zext_ln728' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%zext_ln703 = zext i24 %sext_ln1118_4 to i25" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 64 'zext' 'zext_ln703' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 65 [1/1] (2.31ns) (out node of the LUT)   --->   "%ret_V = add nsw i25 %zext_ln703, %zext_ln728" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 65 'add' 'ret_V' <Predicate = (!tmp_87)> <Delay = 2.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%sum_V = call i12 @_ssdm_op_PartSelect.i12.i25.i32.i32(i25 %ret_V, i32 4, i32 15)" [FSRCNN_V1/FSRCNN.cpp:62]   --->   Operation 66 'partselect' 'sum_V' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (2.55ns)   --->   "%index_filter = add nsw i32 %select_ln55_1, 1" [FSRCNN_V1/FSRCNN.cpp:63]   --->   Operation 67 'add' 'index_filter' <Predicate = (!tmp_87)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "br i1 %and_ln65, label %2, label %_ZN13ap_fixed_baseILi25ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi12ELi8ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i._crit_edge" [FSRCNN_V1/FSRCNN.cpp:65]   --->   Operation 68 'br' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i7 %tmp to i64" [FSRCNN_V1/FSRCNN.cpp:68]   --->   Operation 69 'zext' 'zext_ln68' <Predicate = (!tmp_87 & and_ln65)> <Delay = 0.00>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%correlate_img_V_addr = getelementptr [64 x i12]* %correlate_img_V, i64 0, i64 %zext_ln68" [FSRCNN_V1/FSRCNN.cpp:68]   --->   Operation 70 'getelementptr' 'correlate_img_V_addr' <Predicate = (!tmp_87 & and_ln65)> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (2.32ns)   --->   "store i12 %sum_V, i12* %correlate_img_V_addr, align 2" [FSRCNN_V1/FSRCNN.cpp:68]   --->   Operation 71 'store' <Predicate = (!tmp_87 & and_ln65)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 12> <Depth = 64> <RAM>
ST_6 : Operation 72 [1/1] (0.00ns)   --->   "br label %_ZN13ap_fixed_baseILi25ELi17ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi12ELi8ELb1ELS0_5ELS1_3ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.i.i._crit_edge" [FSRCNN_V1/FSRCNN.cpp:69]   --->   Operation 72 'br' <Predicate = (!tmp_87 & and_ln65)> <Delay = 0.00>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "store i12 %sum_V, i12* %sum_V_1" [FSRCNN_V1/FSRCNN.cpp:70]   --->   Operation 73 'store' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "store i32 %index_filter, i32* %index_filter_1" [FSRCNN_V1/FSRCNN.cpp:70]   --->   Operation 74 'store' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "br label %hls_label_0_end" [FSRCNN_V1/FSRCNN.cpp:70]   --->   Operation 75 'br' <Predicate = (!tmp_87)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (1.63ns)   --->   "%add_ln71 = add i11 %phi_urem33, 1" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 76 'add' 'add_ln71' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [1/1] (1.88ns)   --->   "%icmp_ln71 = icmp ult i11 %add_ln71, 5" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 77 'icmp' 'icmp_ln71' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 78 [1/1] (0.69ns)   --->   "%select_ln71 = select i1 %icmp_ln71, i11 %add_ln71, i11 0" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 78 'select' 'select_ln71' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 79 [1/1] (1.63ns)   --->   "%add_ln71_1 = add i11 %phi_urem, 1" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 79 'add' 'add_ln71_1' <Predicate = true> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 80 [1/1] (1.88ns)   --->   "%icmp_ln71_1 = icmp ult i11 %add_ln71_1, 25" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 80 'icmp' 'icmp_ln71_1' <Predicate = true> <Delay = 1.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 81 [1/1] (0.69ns)   --->   "%select_ln71_1 = select i1 %icmp_ln71_1, i11 %add_ln71_1, i11 0" [FSRCNN_V1/FSRCNN.cpp:71]   --->   Operation 81 'select' 'select_ln71_1' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "br label %1" [FSRCNN_V1/FSRCNN.cpp:46]   --->   Operation 82 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('index') with incoming values : ('index', FSRCNN_V1/FSRCNN.cpp:46) [8]  (1.77 ns)

 <State 2>: 4.23ns
The critical path consists of the following:
	'phi' operation ('phi_urem', FSRCNN_V1/FSRCNN.cpp:71) with incoming values : ('select_ln71_1', FSRCNN_V1/FSRCNN.cpp:71) [10]  (0 ns)
	'add' operation ('add_ln65', FSRCNN_V1/FSRCNN.cpp:65) [61]  (1.83 ns)
	'icmp' operation ('icmp_ln65', FSRCNN_V1/FSRCNN.cpp:65) [62]  (1.43 ns)
	'and' operation ('and_ln65', FSRCNN_V1/FSRCNN.cpp:65) [64]  (0.978 ns)

 <State 3>: 7.01ns
The critical path consists of the following:
	'add' operation ('add_ln1116_2', FSRCNN_V1/FSRCNN.cpp:62) [42]  (3.76 ns)
	'getelementptr' operation ('prev_output_channel_s', FSRCNN_V1/FSRCNN.cpp:62) [44]  (0 ns)
	'load' operation ('prev_output_channel_1', FSRCNN_V1/FSRCNN.cpp:62) on array 'prev_output_channel_V' [46]  (3.25 ns)

 <State 4>: 3.25ns
The critical path consists of the following:
	'load' operation ('prev_output_channel_1', FSRCNN_V1/FSRCNN.cpp:62) on array 'prev_output_channel_V' [46]  (3.25 ns)

 <State 5>: 8.7ns
The critical path consists of the following:
	'load' operation ('filter_V_load', FSRCNN_V1/FSRCNN.cpp:62) on array 'filter_V' [49]  (2.32 ns)
	'mul' operation of DSP[51] ('r.V', FSRCNN_V1/FSRCNN.cpp:62) [51]  (6.38 ns)

 <State 6>: 4.64ns
The critical path consists of the following:
	'load' operation ('sum_V_1_load', FSRCNN_V1/FSRCNN.cpp:55) on local variable 'sum.V' [30]  (0 ns)
	'select' operation ('select_ln55_3', FSRCNN_V1/FSRCNN.cpp:55) [54]  (0 ns)
	'add' operation ('ret.V', FSRCNN_V1/FSRCNN.cpp:62) [58]  (2.31 ns)
	'store' operation ('store_ln68', FSRCNN_V1/FSRCNN.cpp:68) of variable 'sum.V', FSRCNN_V1/FSRCNN.cpp:62 on array 'correlate_img_V' [69]  (2.32 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
