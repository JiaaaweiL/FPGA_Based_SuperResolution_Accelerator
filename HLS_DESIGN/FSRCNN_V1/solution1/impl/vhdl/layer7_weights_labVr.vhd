-- ==============================================================
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.1 (64-bit)
-- Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity layer7_weights_labVr_rom is 
    generic(
             DWIDTH     : integer := 5; 
             AWIDTH     : integer := 10; 
             MEM_SIZE    : integer := 672
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of layer7_weights_labVr_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "00001", 1 => "00101", 2 => "11010", 3 => "00011", 4 => "00010", 
    5 => "00011", 6 => "11101", 7 => "11010", 8 => "00000", 9 => "00100", 
    10 => "00000", 11 => "11010", 12 => "00000", 13 => "11110", 14 => "11100", 
    15 to 16=> "11101", 17 => "00000", 18 => "11100", 19 => "00011", 20 => "11111", 
    21 => "00010", 22 => "00001", 23 => "11111", 24 => "00001", 25 => "00100", 
    26 => "00000", 27 => "00010", 28 => "11100", 29 => "00101", 30 => "11111", 
    31 => "00011", 32 => "00001", 33 => "00000", 34 => "11111", 35 => "11010", 
    36 => "11001", 37 => "00001", 38 => "11011", 39 to 40=> "11111", 41 => "11010", 
    42 => "00001", 43 => "11000", 44 => "00000", 45 => "00010", 46 => "00110", 
    47 => "00011", 48 => "00001", 49 => "11100", 50 => "00011", 51 to 52=> "11110", 
    53 => "11010", 54 => "00100", 55 to 56=> "00111", 57 => "00110", 58 => "11100", 
    59 => "00000", 60 => "11110", 61 => "00011", 62 => "11111", 63 => "11100", 
    64 => "00111", 65 => "11001", 66 => "00000", 67 => "00001", 68 => "11101", 
    69 => "11110", 70 => "00000", 71 => "11010", 72 => "11101", 73 => "00000", 
    74 => "11011", 75 => "00010", 76 => "00011", 77 => "00000", 78 => "00010", 
    79 => "00001", 80 => "11101", 81 to 82=> "00100", 83 => "00000", 84 => "00001", 
    85 => "11100", 86 => "11011", 87 => "00111", 88 => "11011", 89 => "11110", 
    90 => "00001", 91 => "11110", 92 => "00111", 93 to 94=> "00001", 95 => "11110", 
    96 to 97=> "00000", 98 => "00010", 99 to 100=> "00011", 101 => "00100", 102 => "11110", 
    103 => "00001", 104 to 105=> "11011", 106 => "11110", 107 => "11111", 108 => "00010", 
    109 => "00100", 110 => "11110", 111 => "00011", 112 => "11111", 113 to 114=> "11101", 
    115 => "00001", 116 => "11110", 117 => "00010", 118 => "11111", 119 => "11010", 
    120 => "00011", 121 => "11000", 122 => "11110", 123 => "11111", 124 => "11110", 
    125 => "00011", 126 => "11110", 127 => "11011", 128 => "11101", 129 => "00010", 
    130 => "11010", 131 => "00010", 132 => "00000", 133 => "11000", 134 => "00011", 
    135 => "11000", 136 to 137=> "00000", 138 => "00100", 139 => "00010", 140 => "00011", 
    141 => "11100", 142 => "11101", 143 => "00001", 144 => "00000", 145 => "11001", 
    146 => "11110", 147 => "11101", 148 => "00011", 149 to 150=> "11111", 151 => "00011", 
    152 => "00000", 153 => "00001", 154 => "11111", 155 => "00010", 156 => "11100", 
    157 => "11111", 158 => "11101", 159 => "00010", 160 => "00011", 161 => "11100", 
    162 => "11110", 163 => "00011", 164 => "00000", 165 => "00010", 166 to 167=> "11111", 
    168 => "11010", 169 => "11111", 170 => "00001", 171 => "11101", 172 => "00000", 
    173 => "00001", 174 => "11111", 175 => "00000", 176 => "10111", 177 => "11000", 
    178 => "00010", 179 => "11110", 180 => "00000", 181 => "11010", 182 => "11111", 
    183 => "00000", 184 => "00001", 185 => "00011", 186 => "11101", 187 => "00000", 
    188 => "11110", 189 => "11101", 190 => "00011", 191 => "11001", 192 => "00000", 
    193 => "11011", 194 => "00000", 195 => "11111", 196 to 198=> "00000", 199 => "11011", 
    200 => "11111", 201 => "11000", 202 => "11111", 203 => "11101", 204 => "11110", 
    205 => "00100", 206 => "00000", 207 => "00011", 208 => "11111", 209 => "00011", 
    210 => "11111", 211 => "00000", 212 => "10010", 213 => "11001", 214 => "11100", 
    215 => "00101", 216 => "11110", 217 => "11001", 218 to 219=> "11101", 220 to 221=> "11111", 
    222 => "00011", 223 => "11101", 224 => "11100", 225 to 226=> "00000", 227 to 228=> "11011", 
    229 => "00011", 230 => "00000", 231 => "00010", 232 => "00101", 233 => "00111", 
    234 => "00010", 235 => "11100", 236 to 237=> "00001", 238 => "00010", 239 => "11100", 
    240 => "00011", 241 => "01000", 242 => "11101", 243 => "00000", 244 => "11111", 
    245 => "11100", 246 => "00111", 247 => "00011", 248 to 249=> "11101", 250 => "00001", 
    251 => "11011", 252 to 253=> "11110", 254 => "11001", 255 => "00001", 256 => "11111", 
    257 => "11100", 258 => "00101", 259 => "11111", 260 => "11110", 261 => "00110", 
    262 => "00001", 263 => "00011", 264 => "00010", 265 => "00000", 266 => "00001", 
    267 => "11111", 268 => "00101", 269 => "00100", 270 => "00001", 271 => "11011", 
    272 to 273=> "00000", 274 to 275=> "00010", 276 => "00011", 277 => "00001", 278 => "11011", 
    279 => "11101", 280 => "00100", 281 => "11010", 282 => "11111", 283 => "00011", 
    284 to 285=> "11111", 286 => "00011", 287 => "11100", 288 => "00000", 289 => "00010", 
    290 => "10110", 291 => "00100", 292 => "11101", 293 => "01001", 294 => "00101", 
    295 => "11110", 296 => "11111", 297 => "00100", 298 => "00001", 299 => "11100", 
    300 => "00110", 301 => "00100", 302 => "00010", 303 => "00000", 304 => "00011", 
    305 => "00101", 306 to 307=> "11100", 308 => "11110", 309 => "11011", 310 => "00010", 
    311 => "00111", 312 => "11101", 313 => "11110", 314 => "11010", 315 => "00111", 
    316 => "11101", 317 => "00100", 318 => "00011", 319 => "00110", 320 to 321=> "11001", 
    322 => "00000", 323 => "00011", 324 => "11111", 325 => "11110", 326 => "11101", 
    327 => "00011", 328 => "00001", 329 => "00101", 330 => "11010", 331 => "11101", 
    332 => "11100", 333 => "11111", 334 => "00101", 335 => "11010", 336 => "11000", 
    337 => "11010", 338 => "00011", 339 => "11111", 340 to 341=> "11110", 342 to 343=> "11111", 
    344 to 345=> "00011", 346 => "11011", 347 => "11101", 348 => "00001", 349 => "01000", 
    350 => "11111", 351 => "00000", 352 => "00001", 353 to 354=> "11111", 355 => "11110", 
    356 => "00000", 357 => "11001", 358 => "00000", 359 => "11101", 360 => "11111", 
    361 => "11011", 362 => "11101", 363 => "00000", 364 => "11101", 365 => "00000", 
    366 => "00011", 367 => "00001", 368 => "00110", 369 => "11111", 370 => "11110", 
    371 => "11100", 372 => "00010", 373 to 374=> "11100", 375 => "00010", 376 => "11101", 
    377 => "00011", 378 => "00001", 379 => "11100", 380 => "00010", 381 => "11110", 
    382 => "00000", 383 => "11111", 384 => "11101", 385 => "00010", 386 => "00101", 
    387 => "11011", 388 to 389=> "11101", 390 => "00000", 391 => "11110", 392 => "11010", 
    393 => "11100", 394 => "11011", 395 => "00110", 396 => "00101", 397 => "11100", 
    398 => "11010", 399 => "11001", 400 => "00000", 401 => "00010", 402 => "00100", 
    403 => "11011", 404 => "00011", 405 => "11110", 406 => "00010", 407 => "11110", 
    408 => "11000", 409 => "11011", 410 => "11100", 411 => "01000", 412 to 413=> "11000", 
    414 to 415=> "11100", 416 => "00010", 417 to 418=> "00011", 419 => "11100", 420 => "11101", 
    421 => "00100", 422 => "11110", 423 => "10101", 424 => "11110", 425 => "00000", 
    426 => "11111", 427 => "00001", 428 => "11000", 429 => "11001", 430 => "00010", 
    431 => "11010", 432 => "00000", 433 => "11011", 434 => "00010", 435 => "11110", 
    436 to 437=> "00001", 438 => "11011", 439 => "11100", 440 => "11101", 441 => "11111", 
    442 => "11011", 443 => "00001", 444 => "11111", 445 => "11101", 446 => "11110", 
    447 => "11011", 448 to 449=> "11101", 450 => "11100", 451 => "11010", 452 => "10111", 
    453 => "00010", 454 => "00110", 455 => "11100", 456 => "11110", 457 => "11111", 
    458 => "00010", 459 => "00011", 460 to 461=> "00001", 462 => "11010", 463 => "00000", 
    464 => "00100", 465 => "11101", 466 => "00100", 467 => "11000", 468 => "11101", 
    469 => "11011", 470 => "11100", 471 => "10101", 472 => "00110", 473 => "00001", 
    474 => "11111", 475 => "00000", 476 => "00100", 477 => "11000", 478 => "00001", 
    479 => "11001", 480 => "00010", 481 => "00000", 482 => "00100", 483 => "00000", 
    484 => "11000", 485 to 486=> "11101", 487 => "00001", 488 => "00011", 489 => "11010", 
    490 => "10101", 491 => "00001", 492 => "11111", 493 => "11110", 494 => "00010", 
    495 => "11110", 496 => "00001", 497 => "11011", 498 => "11101", 499 => "11100", 
    500 => "00111", 501 => "00100", 502 => "11000", 503 => "00000", 504 => "11011", 
    505 => "11111", 506 => "11110", 507 => "11111", 508 => "00000", 509 => "10111", 
    510 => "00000", 511 => "11001", 512 => "00001", 513 => "00010", 514 => "11111", 
    515 => "00100", 516 => "11110", 517 => "11011", 518 => "00010", 519 => "11110", 
    520 => "11101", 521 => "11111", 522 to 524=> "00001", 525 => "11101", 526 => "11110", 
    527 => "01011", 528 => "11100", 529 to 530=> "11111", 531 => "00010", 532 => "00001", 
    533 => "11111", 534 => "00010", 535 => "00001", 536 => "00000", 537 => "11011", 
    538 => "00010", 539 to 540=> "11100", 541 => "11111", 542 => "00001", 543 => "11100", 
    544 => "00011", 545 => "11111", 546 => "11100", 547 => "00001", 548 => "11010", 
    549 => "11100", 550 => "11011", 551 => "00010", 552 => "00000", 553 => "00011", 
    554 => "00010", 555 => "11111", 556 => "11110", 557 => "11101", 558 to 559=> "00000", 
    560 => "00101", 561 => "11010", 562 => "11110", 563 => "00111", 564 => "00101", 
    565 => "11101", 566 => "11111", 567 => "00110", 568 => "11110", 569 => "11011", 
    570 => "11111", 571 => "00000", 572 => "11111", 573 => "00010", 574 => "11011", 
    575 => "00010", 576 => "11101", 577 => "00010", 578 => "00000", 579 => "00010", 
    580 => "11010", 581 => "11101", 582 => "00010", 583 => "00101", 584 => "00011", 
    585 => "00001", 586 => "00100", 587 => "01000", 588 => "00101", 589 => "11111", 
    590 => "11100", 591 => "11101", 592 => "00011", 593 => "11111", 594 => "11011", 
    595 => "00100", 596 => "00001", 597 => "00010", 598 => "00001", 599 => "00000", 
    600 => "11100", 601 => "11111", 602 to 603=> "00000", 604 => "00001", 605 => "00011", 
    606 => "00101", 607 => "11100", 608 => "11110", 609 => "00111", 610 to 612=> "11111", 
    613 => "00011", 614 => "11111", 615 to 616=> "00011", 617 => "00010", 618 => "00110", 
    619 => "11100", 620 => "11110", 621 => "00010", 622 => "11110", 623 => "11101", 
    624 => "00000", 625 => "00011", 626 => "00100", 627 => "11110", 628 => "00000", 
    629 => "11101", 630 to 631=> "11011", 632 => "11100", 633 => "11110", 634 => "11100", 
    635 => "00100", 636 => "01001", 637 => "01000", 638 => "00010", 639 => "11110", 
    640 => "11101", 641 => "11111", 642 => "11100", 643 => "00000", 644 => "11110", 
    645 => "00001", 646 => "11100", 647 => "11010", 648 to 649=> "00000", 650 => "00100", 
    651 => "00010", 652 => "00011", 653 => "11101", 654 => "11010", 655 => "11101", 
    656 => "00100", 657 to 658=> "00000", 659 => "11110", 660 => "11111", 661 => "11000", 
    662 => "11111", 663 => "11010", 664 => "00000", 665 => "11011", 666 => "00010", 
    667 to 668=> "00001", 669 => "00000", 670 => "11010", 671 => "00010" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity layer7_weights_labVr is
    generic (
        DataWidth : INTEGER := 5;
        AddressRange : INTEGER := 672;
        AddressWidth : INTEGER := 10);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of layer7_weights_labVr is
    component layer7_weights_labVr_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    layer7_weights_labVr_rom_U :  component layer7_weights_labVr_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


