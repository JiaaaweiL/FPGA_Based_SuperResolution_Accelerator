-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity layer7 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    corr6_out_V_valid_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr6_out_V_valid_V_empty_n : IN STD_LOGIC;
    corr6_out_V_valid_V_read : OUT STD_LOGIC;
    corr6_out_V_data_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    corr6_out_V_data_V_empty_n : IN STD_LOGIC;
    corr6_out_V_data_V_read : OUT STD_LOGIC;
    corr6_out_V_keep_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    corr6_out_V_keep_V_empty_n : IN STD_LOGIC;
    corr6_out_V_keep_V_read : OUT STD_LOGIC;
    corr6_out_V_user_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr6_out_V_user_V_empty_n : IN STD_LOGIC;
    corr6_out_V_user_V_read : OUT STD_LOGIC;
    corr6_out_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr6_out_V_last_V_empty_n : IN STD_LOGIC;
    corr6_out_V_last_V_read : OUT STD_LOGIC;
    corr6_out_V_id_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr6_out_V_id_V_empty_n : IN STD_LOGIC;
    corr6_out_V_id_V_read : OUT STD_LOGIC;
    corr6_out_V_dest_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr6_out_V_dest_V_empty_n : IN STD_LOGIC;
    corr6_out_V_dest_V_read : OUT STD_LOGIC;
    corr7_out_V_valid_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr7_out_V_valid_V_full_n : IN STD_LOGIC;
    corr7_out_V_valid_V_write : OUT STD_LOGIC;
    corr7_out_V_data_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    corr7_out_V_data_V_full_n : IN STD_LOGIC;
    corr7_out_V_data_V_write : OUT STD_LOGIC;
    corr7_out_V_keep_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    corr7_out_V_keep_V_full_n : IN STD_LOGIC;
    corr7_out_V_keep_V_write : OUT STD_LOGIC;
    corr7_out_V_user_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr7_out_V_user_V_full_n : IN STD_LOGIC;
    corr7_out_V_user_V_write : OUT STD_LOGIC;
    corr7_out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr7_out_V_last_V_full_n : IN STD_LOGIC;
    corr7_out_V_last_V_write : OUT STD_LOGIC;
    corr7_out_V_id_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr7_out_V_id_V_full_n : IN STD_LOGIC;
    corr7_out_V_id_V_write : OUT STD_LOGIC;
    corr7_out_V_dest_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr7_out_V_dest_V_full_n : IN STD_LOGIC;
    corr7_out_V_dest_V_write : OUT STD_LOGIC );
end;


architecture behav of layer7 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal weights_layer7_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal weights_layer7_V_0_ce0 : STD_LOGIC;
    signal weights_layer7_V_0_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal biases_layer7_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal biases_layer7_V_ce0 : STD_LOGIC;
    signal biases_layer7_V_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal corr6_out_V_valid_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln965_reg_1225 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln968_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln987_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal corr6_out_V_data_V_blk_n : STD_LOGIC;
    signal corr6_out_V_keep_V_blk_n : STD_LOGIC;
    signal corr6_out_V_user_V_blk_n : STD_LOGIC;
    signal corr6_out_V_last_V_blk_n : STD_LOGIC;
    signal corr6_out_V_id_V_blk_n : STD_LOGIC;
    signal corr6_out_V_dest_V_blk_n : STD_LOGIC;
    signal corr7_out_V_valid_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal corr7_out_V_data_V_blk_n : STD_LOGIC;
    signal corr7_out_V_keep_V_blk_n : STD_LOGIC;
    signal corr7_out_V_user_V_blk_n : STD_LOGIC;
    signal corr7_out_V_last_V_blk_n : STD_LOGIC;
    signal corr7_out_V_id_V_blk_n : STD_LOGIC;
    signal corr7_out_V_dest_V_blk_n : STD_LOGIC;
    signal row_idx_fu_787_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_idx_reg_1207 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_799_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_1215 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln946_fu_813_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln946_reg_1220 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln945_fu_793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln965_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_829_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal current_input_channe_2_fu_855_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal current_input_channe_2_reg_1240 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln965_fu_869_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln965_reg_1245 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln950_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_input_element_5_fu_879_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal io_acc_block_signal_op100 : STD_LOGIC;
    signal ap_predicate_op100_read_state6 : BOOLEAN;
    signal io_acc_block_signal_op129 : STD_LOGIC;
    signal ap_predicate_op129_read_state6 : BOOLEAN;
    signal ap_block_state6 : BOOLEAN;
    signal index_input_element_fu_910_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal current_filter_fu_941_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal current_filter_reg_1270 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln1028_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1028_reg_1275 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1022_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln162_fu_951_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln162_reg_1280 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1024_fu_963_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1024_reg_1285 : STD_LOGIC_VECTOR (12 downto 0);
    signal current_input_channe_3_fu_973_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal current_input_channe_3_reg_1294 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln203_24_fu_987_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln203_24_reg_1299 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln1024_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal subfilter_layer_0_V_reg_1314 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln1033_fu_1025_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln1033_reg_1322 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln1033_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln46_fu_1045_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln46_reg_1332 : STD_LOGIC_VECTOR (15 downto 0);
    signal index_fu_1059_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_reg_1340 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal zext_ln62_fu_1065_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_reg_1345 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln46_fu_1053_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal channel_from_prev_ou_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal channel_from_prev_ou_2_reg_1355 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal index_input_element_7_fu_1095_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_input_element_7_reg_1363 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal out_layer_data_V_add_1_reg_1368 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1039_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1265_fu_1127_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1265_reg_1378 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal sext_ln703_fu_1131_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_reg_1383 : STD_LOGIC_VECTOR (10 downto 0);
    signal index_input_element_6_fu_1141_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_input_element_6_reg_1391 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln1044_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_layer_data_V_add_2_reg_1401 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_Val2_6_fu_1191_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_6_reg_1431 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_layer_valid_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_valid_V_reg_1436 : STD_LOGIC_VECTOR (0 downto 0);
    signal correlate_img_V_assi_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal correlate_img_V_assi_ce0 : STD_LOGIC;
    signal correlate_img_V_assi_we0 : STD_LOGIC;
    signal correlate_img_V_assi_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal correlate_img_V_assi_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_data_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal img_channel_0_data_s_ce0 : STD_LOGIC;
    signal img_channel_0_data_s_we0 : STD_LOGIC;
    signal img_channel_0_data_s_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_keep_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal img_channel_0_keep_s_ce0 : STD_LOGIC;
    signal img_channel_0_keep_s_we0 : STD_LOGIC;
    signal img_channel_0_keep_s_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal img_channel_0_user_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal img_channel_0_user_s_ce0 : STD_LOGIC;
    signal img_channel_0_user_s_we0 : STD_LOGIC;
    signal img_channel_0_user_s_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_channel_0_last_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal img_channel_0_last_s_ce0 : STD_LOGIC;
    signal img_channel_0_last_s_we0 : STD_LOGIC;
    signal img_channel_0_last_s_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_channel_0_id_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal img_channel_0_id_V_ce0 : STD_LOGIC;
    signal img_channel_0_id_V_we0 : STD_LOGIC;
    signal img_channel_0_id_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_channel_0_dest_s_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal img_channel_0_dest_s_ce0 : STD_LOGIC;
    signal img_channel_0_dest_s_we0 : STD_LOGIC;
    signal img_channel_0_dest_s_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal channel_from_prev_ou_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal channel_from_prev_ou_ce0 : STD_LOGIC;
    signal channel_from_prev_ou_we0 : STD_LOGIC;
    signal out_layer_valid_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_layer_valid_V_ce0 : STD_LOGIC;
    signal out_layer_data_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_layer_data_V_ce0 : STD_LOGIC;
    signal out_layer_data_V_we0 : STD_LOGIC;
    signal out_layer_data_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_layer_data_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_idx_0_reg_616 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal i_0_reg_628 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln946_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln942_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_0_reg_639 : STD_LOGIC_VECTOR (6 downto 0);
    signal current_input_channe_reg_650 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_input_element2_reg_661 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_input_element1_reg_672 : STD_LOGIC_VECTOR (6 downto 0);
    signal current_filter_0_reg_683 : STD_LOGIC_VECTOR (5 downto 0);
    signal current_input_channe_4_reg_694 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_input_element2_1_reg_705 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal index_0_i_reg_717 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal index_input_element2_2_reg_728 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal index_input_element2_3_reg_739 : STD_LOGIC_VECTOR (6 downto 0);
    signal io_acc_block_signal_op270 : STD_LOGIC;
    signal zext_ln203_19_fu_844_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_23_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_21_fu_925_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_fu_1014_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_27_fu_1040_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1035_fu_1048_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1265_4_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1041_fu_1101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln162_1_fu_1156_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1046_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V_6_fu_1199_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_fu_1120_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_805_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_fu_835_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln203_10_fu_839_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_40_fu_861_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln203_22_fu_885_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_12_fu_889_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln203_20_fu_916_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_11_fu_920_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_41_fu_955_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_42_fu_979_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_43_fu_991_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln203_25_fu_999_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_fu_1003_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_13_fu_1009_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln203_26_fu_1031_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_14_fu_1035_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal r_V_fu_1073_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_fu_1073_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_V_fu_1073_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1265_fu_1106_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln1265_fu_1110_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1265_fu_1127_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal sext_ln703_fu_1131_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln321_fu_1147_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln162_fu_1151_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln703_fu_1171_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal aux_sum_V_fu_1175_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln1494_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_fu_1180_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_condition_915 : BOOLEAN;
    signal ap_condition_919 : BOOLEAN;

    component layer7_weights_labVr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component layer7_biases_laybWr IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component layer1_correlate_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component layer2_out_layer_Aem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component layer7_img_channebZs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component layer7_img_channeb0s IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component layer2_channel_fryd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component layer1_out_layer_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component layer2_img_channesc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    weights_layer7_V_0_U : component layer7_weights_labVr
    generic map (
        DataWidth => 5,
        AddressRange => 672,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights_layer7_V_0_address0,
        ce0 => weights_layer7_V_0_ce0,
        q0 => weights_layer7_V_0_q0);

    biases_layer7_V_U : component layer7_biases_laybWr
    generic map (
        DataWidth => 3,
        AddressRange => 56,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => biases_layer7_V_address0,
        ce0 => biases_layer7_V_ce0,
        q0 => biases_layer7_V_q0);

    correlate_img_V_assi_U : component layer1_correlate_fYi
    generic map (
        DataWidth => 12,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => correlate_img_V_assi_address0,
        ce0 => correlate_img_V_assi_ce0,
        we0 => correlate_img_V_assi_we0,
        d0 => correlate_img_V_assi_d0,
        q0 => correlate_img_V_assi_q0);

    img_channel_0_data_s_U : component layer2_out_layer_Aem
    generic map (
        DataWidth => 12,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_data_s_address0,
        ce0 => img_channel_0_data_s_ce0,
        we0 => img_channel_0_data_s_we0,
        d0 => corr6_out_V_data_V_dout,
        q0 => img_channel_0_data_s_q0);

    img_channel_0_keep_s_U : component layer7_img_channebZs
    generic map (
        DataWidth => 4,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_keep_s_address0,
        ce0 => img_channel_0_keep_s_ce0,
        we0 => img_channel_0_keep_s_we0,
        d0 => corr6_out_V_keep_V_dout,
        q0 => img_channel_0_keep_s_q0);

    img_channel_0_user_s_U : component layer7_img_channeb0s
    generic map (
        DataWidth => 1,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_user_s_address0,
        ce0 => img_channel_0_user_s_ce0,
        we0 => img_channel_0_user_s_we0,
        d0 => corr6_out_V_user_V_dout,
        q0 => img_channel_0_user_s_q0);

    img_channel_0_last_s_U : component layer7_img_channeb0s
    generic map (
        DataWidth => 1,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_last_s_address0,
        ce0 => img_channel_0_last_s_ce0,
        we0 => img_channel_0_last_s_we0,
        d0 => corr6_out_V_last_V_dout,
        q0 => img_channel_0_last_s_q0);

    img_channel_0_id_V_U : component layer7_img_channeb0s
    generic map (
        DataWidth => 1,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_id_V_address0,
        ce0 => img_channel_0_id_V_ce0,
        we0 => img_channel_0_id_V_we0,
        d0 => corr6_out_V_id_V_dout,
        q0 => img_channel_0_id_V_q0);

    img_channel_0_dest_s_U : component layer7_img_channeb0s
    generic map (
        DataWidth => 1,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_dest_s_address0,
        ce0 => img_channel_0_dest_s_ce0,
        we0 => img_channel_0_dest_s_we0,
        d0 => corr6_out_V_dest_V_dout,
        q0 => img_channel_0_dest_s_q0);

    channel_from_prev_ou_U : component layer2_channel_fryd2
    generic map (
        DataWidth => 12,
        AddressRange => 5508,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => channel_from_prev_ou_address0,
        ce0 => channel_from_prev_ou_ce0,
        we0 => channel_from_prev_ou_we0,
        d0 => img_channel_0_data_s_q0,
        q0 => channel_from_prev_ou_q0);

    out_layer_valid_V_U : component layer1_out_layer_g8j
    generic map (
        DataWidth => 1,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_layer_valid_V_address0,
        ce0 => out_layer_valid_V_ce0,
        q0 => out_layer_valid_V_q0);

    out_layer_data_V_U : component layer2_img_channesc4
    generic map (
        DataWidth => 12,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_layer_data_V_address0,
        ce0 => out_layer_data_V_ce0,
        we0 => out_layer_data_V_we0,
        d0 => out_layer_data_V_d0,
        q0 => out_layer_data_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln942_fu_781_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    current_filter_0_reg_683_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln950_fu_849_p2 = ap_const_lv1_1))) then 
                current_filter_0_reg_683 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln1044_fu_1135_p2 = ap_const_lv1_1))) then 
                current_filter_0_reg_683 <= current_filter_reg_1270;
            end if; 
        end if;
    end process;

    current_input_channe_4_reg_694_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln1039_fu_1089_p2 = ap_const_lv1_1))) then 
                current_input_channe_4_reg_694 <= current_input_channe_3_reg_1294;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1022_fu_935_p2 = ap_const_lv1_0))) then 
                current_input_channe_4_reg_694 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    current_input_channe_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln945_fu_793_p2 = ap_const_lv1_1))) then 
                current_input_channe_reg_650 <= ap_const_lv4_0;
            elsif ((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (((icmp_ln987_fu_873_p2 = ap_const_lv1_1) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((icmp_ln968_fu_904_p2 = ap_const_lv1_1) and (icmp_ln965_reg_1225 = ap_const_lv1_1))))) then 
                current_input_channe_reg_650 <= current_input_channe_2_reg_1240;
            end if; 
        end if;
    end process;

    i_0_reg_628_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln942_fu_781_p2 = ap_const_lv1_0))) then 
                i_0_reg_628 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln946_fu_823_p2 = ap_const_lv1_1))) then 
                i_0_reg_628 <= i_reg_1215;
            end if; 
        end if;
    end process;

    index_0_i_reg_717_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                index_0_i_reg_717 <= index_reg_1340;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln1033_fu_1019_p2 = ap_const_lv1_1))) then 
                index_0_i_reg_717 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    index_input_element1_reg_672_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((icmp_ln965_reg_1225 = ap_const_lv1_1)) then
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln950_fu_849_p2 = ap_const_lv1_0))) then 
                    index_input_element1_reg_672 <= ap_const_lv7_0;
                elsif ((ap_const_boolean_1 = ap_condition_915)) then 
                    index_input_element1_reg_672 <= index_input_element_fu_910_p2;
                end if;
            end if; 
        end if;
    end process;

    index_input_element2_1_reg_705_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                index_input_element2_1_reg_705 <= add_ln1033_reg_1322;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                index_input_element2_1_reg_705 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    index_input_element2_2_reg_728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln46_fu_1053_p2 = ap_const_lv1_1))) then 
                index_input_element2_2_reg_728 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                index_input_element2_2_reg_728 <= index_input_element_7_reg_1363;
            end if; 
        end if;
    end process;

    index_input_element2_3_reg_739_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                index_input_element2_3_reg_739 <= ap_const_lv7_0;
            elsif (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                index_input_element2_3_reg_739 <= index_input_element_6_reg_1391;
            end if; 
        end if;
    end process;

    index_input_element2_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((icmp_ln965_reg_1225 = ap_const_lv1_0)) then
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln950_fu_849_p2 = ap_const_lv1_0))) then 
                    index_input_element2_reg_661 <= ap_const_lv7_0;
                elsif ((ap_const_boolean_1 = ap_condition_919)) then 
                    index_input_element2_reg_661 <= index_input_element_5_fu_879_p2;
                end if;
            end if; 
        end if;
    end process;

    j_0_reg_639_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln945_fu_793_p2 = ap_const_lv1_0))) then 
                j_0_reg_639 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln946_fu_823_p2 = ap_const_lv1_0))) then 
                j_0_reg_639 <= j_fu_829_p2;
            end if; 
        end if;
    end process;

    row_idx_0_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1022_fu_935_p2 = ap_const_lv1_1))) then 
                row_idx_0_reg_616 <= row_idx_reg_1207;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_idx_0_reg_616 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln1033_reg_1322 <= add_ln1033_fu_1025_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                channel_from_prev_ou_2_reg_1355 <= channel_from_prev_ou_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                current_filter_reg_1270 <= current_filter_fu_941_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                current_input_channe_2_reg_1240 <= current_input_channe_2_fu_855_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                current_input_channe_3_reg_1294 <= current_input_channe_3_fu_973_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_reg_1215 <= i_fu_799_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln945_fu_793_p2 = ap_const_lv1_1))) then
                icmp_ln965_reg_1225 <= icmp_ln965_fu_817_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                index_input_element_6_reg_1391 <= index_input_element_6_fu_1141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                index_input_element_7_reg_1363 <= index_input_element_7_fu_1095_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                index_reg_1340 <= index_fu_1059_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln1039_fu_1089_p2 = ap_const_lv1_0))) then
                out_layer_data_V_add_1_reg_1368 <= zext_ln1265_4_fu_1115_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln1044_fu_1135_p2 = ap_const_lv1_0))) then
                out_layer_data_V_add_2_reg_1401 <= zext_ln162_1_fu_1156_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                p_Val2_6_reg_1431 <= p_Val2_6_fu_1191_p3;
                tmp_valid_V_reg_1436 <= out_layer_valid_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                row_idx_reg_1207 <= row_idx_fu_787_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                sext_ln1265_reg_1378 <= sext_ln1265_fu_1127_p1;
                sext_ln703_reg_1383 <= sext_ln703_fu_1131_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln1033_fu_1019_p2 = ap_const_lv1_1))) then
                sext_ln46_reg_1332 <= sext_ln46_fu_1045_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                subfilter_layer_0_V_reg_1314 <= weights_layer7_V_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1022_fu_935_p2 = ap_const_lv1_0))) then
                    zext_ln1024_reg_1285(11 downto 6) <= zext_ln1024_fu_963_p1(11 downto 6);
                    zext_ln1028_reg_1275(5 downto 0) <= zext_ln1028_fu_947_p1(5 downto 0);
                    zext_ln162_reg_1280(5 downto 0) <= zext_ln162_fu_951_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1024_fu_967_p2 = ap_const_lv1_0))) then
                    zext_ln203_24_reg_1299(9 downto 6) <= zext_ln203_24_fu_987_p1(9 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln46_fu_1053_p2 = ap_const_lv1_0))) then
                    zext_ln62_reg_1345(6 downto 0) <= zext_ln62_fu_1065_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln945_fu_793_p2 = ap_const_lv1_0))) then
                    zext_ln946_reg_1220(11 downto 6) <= zext_ln946_fu_813_p1(11 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln950_fu_849_p2 = ap_const_lv1_0))) then
                    zext_ln965_reg_1245(9 downto 6) <= zext_ln965_fu_869_p1(9 downto 6);
            end if;
        end if;
    end process;
    zext_ln946_reg_1220(5 downto 0) <= "000000";
    zext_ln946_reg_1220(12) <= '0';
    zext_ln965_reg_1245(5 downto 0) <= "000000";
    zext_ln965_reg_1245(10) <= '0';
    zext_ln1028_reg_1275(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln162_reg_1280(10 downto 6) <= "00000";
    zext_ln1024_reg_1285(5 downto 0) <= "000000";
    zext_ln1024_reg_1285(12) <= '0';
    zext_ln203_24_reg_1299(5 downto 0) <= "000000";
    zext_ln203_24_reg_1299(10) <= '0';
    zext_ln62_reg_1345(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, ap_CS_fsm_state20, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln945_fu_793_p2, ap_CS_fsm_state4, ap_CS_fsm_state5, icmp_ln950_fu_849_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6, ap_CS_fsm_state7, icmp_ln1022_fu_935_p2, ap_CS_fsm_state8, icmp_ln1024_fu_967_p2, ap_CS_fsm_state10, icmp_ln1033_fu_1019_p2, ap_CS_fsm_state12, icmp_ln46_fu_1053_p2, ap_CS_fsm_state15, icmp_ln1039_fu_1089_p2, ap_CS_fsm_state18, icmp_ln1044_fu_1135_p2, icmp_ln946_fu_823_p2, icmp_ln942_fu_781_p2, io_acc_block_signal_op270)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln942_fu_781_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln945_fu_793_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln946_fu_823_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln950_fu_849_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (((icmp_ln987_fu_873_p2 = ap_const_lv1_1) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((icmp_ln968_fu_904_p2 = ap_const_lv1_1) and (icmp_ln965_reg_1225 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif ((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (((icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln1022_fu_935_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln1024_fu_967_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln1033_fu_1019_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln46_fu_1053_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln1039_fu_1089_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln1044_fu_1135_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1033_fu_1025_p2 <= std_logic_vector(unsigned(index_input_element2_1_reg_705) + unsigned(ap_const_lv7_1));
    add_ln1265_fu_1110_p2 <= std_logic_vector(unsigned(zext_ln1024_reg_1285) + unsigned(zext_ln1265_fu_1106_p1));
    add_ln162_fu_1151_p2 <= std_logic_vector(unsigned(zext_ln1024_reg_1285) + unsigned(zext_ln321_fu_1147_p1));
    add_ln203_10_fu_839_p2 <= std_logic_vector(unsigned(zext_ln946_reg_1220) + unsigned(zext_ln203_fu_835_p1));
    add_ln203_11_fu_920_p2 <= std_logic_vector(unsigned(zext_ln965_reg_1245) + unsigned(zext_ln203_20_fu_916_p1));
    add_ln203_12_fu_889_p2 <= std_logic_vector(unsigned(zext_ln965_reg_1245) + unsigned(zext_ln203_22_fu_885_p1));
    add_ln203_13_fu_1009_p2 <= std_logic_vector(unsigned(sub_ln203_fu_1003_p2) + unsigned(zext_ln162_reg_1280));
    add_ln203_14_fu_1035_p2 <= std_logic_vector(unsigned(zext_ln203_24_reg_1299) + unsigned(zext_ln203_26_fu_1031_p1));
    add_ln203_fu_1180_p2 <= std_logic_vector(signed(sext_ln703_reg_1383) + signed(trunc_ln703_fu_1171_p1));
    add_ln703_fu_1120_p2 <= std_logic_vector(unsigned(correlate_img_V_assi_q0) + unsigned(out_layer_data_V_q0));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state6_assign_proc : process(io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
                ap_block_state6 <= (((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)));
    end process;


    ap_condition_915_assign_proc : process(ap_CS_fsm_state6, icmp_ln968_fu_904_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
                ap_condition_915 <= (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0));
    end process;


    ap_condition_919_assign_proc : process(ap_CS_fsm_state6, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
                ap_condition_919 <= (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln942_fu_781_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln942_fu_781_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op100_read_state6_assign_proc : process(icmp_ln965_reg_1225, icmp_ln987_fu_873_p2)
    begin
                ap_predicate_op100_read_state6 <= ((icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0));
    end process;


    ap_predicate_op129_read_state6_assign_proc : process(icmp_ln965_reg_1225, icmp_ln968_fu_904_p2)
    begin
                ap_predicate_op129_read_state6 <= ((icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;
    aux_sum_V_fu_1175_p2 <= std_logic_vector(signed(sext_ln1265_reg_1378) + signed(out_layer_data_V_q0));
    biases_layer7_V_address0 <= zext_ln1028_reg_1275(6 - 1 downto 0);

    biases_layer7_V_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            biases_layer7_V_ce0 <= ap_const_logic_1;
        else 
            biases_layer7_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    channel_from_prev_ou_address0_assign_proc : process(ap_CS_fsm_state12, zext_ln62_fu_1065_p1, ap_CS_fsm_state11, zext_ln1035_fu_1048_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            channel_from_prev_ou_address0 <= zext_ln62_fu_1065_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            channel_from_prev_ou_address0 <= zext_ln1035_fu_1048_p1(13 - 1 downto 0);
        else 
            channel_from_prev_ou_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    channel_from_prev_ou_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            channel_from_prev_ou_ce0 <= ap_const_logic_1;
        else 
            channel_from_prev_ou_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    channel_from_prev_ou_we0_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            channel_from_prev_ou_we0 <= ap_const_logic_1;
        else 
            channel_from_prev_ou_we0 <= ap_const_logic_0;
        end if; 
    end process;


    corr6_out_V_data_V_blk_n_assign_proc : process(corr6_out_V_data_V_empty_n, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            corr6_out_V_data_V_blk_n <= corr6_out_V_data_V_empty_n;
        else 
            corr6_out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr6_out_V_data_V_read_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op129_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op100_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            corr6_out_V_data_V_read <= ap_const_logic_1;
        else 
            corr6_out_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr6_out_V_dest_V_blk_n_assign_proc : process(corr6_out_V_dest_V_empty_n, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            corr6_out_V_dest_V_blk_n <= corr6_out_V_dest_V_empty_n;
        else 
            corr6_out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr6_out_V_dest_V_read_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op129_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op100_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            corr6_out_V_dest_V_read <= ap_const_logic_1;
        else 
            corr6_out_V_dest_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr6_out_V_id_V_blk_n_assign_proc : process(corr6_out_V_id_V_empty_n, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            corr6_out_V_id_V_blk_n <= corr6_out_V_id_V_empty_n;
        else 
            corr6_out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr6_out_V_id_V_read_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op129_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op100_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            corr6_out_V_id_V_read <= ap_const_logic_1;
        else 
            corr6_out_V_id_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr6_out_V_keep_V_blk_n_assign_proc : process(corr6_out_V_keep_V_empty_n, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            corr6_out_V_keep_V_blk_n <= corr6_out_V_keep_V_empty_n;
        else 
            corr6_out_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr6_out_V_keep_V_read_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op129_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op100_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            corr6_out_V_keep_V_read <= ap_const_logic_1;
        else 
            corr6_out_V_keep_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr6_out_V_last_V_blk_n_assign_proc : process(corr6_out_V_last_V_empty_n, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            corr6_out_V_last_V_blk_n <= corr6_out_V_last_V_empty_n;
        else 
            corr6_out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr6_out_V_last_V_read_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op129_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op100_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            corr6_out_V_last_V_read <= ap_const_logic_1;
        else 
            corr6_out_V_last_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr6_out_V_user_V_blk_n_assign_proc : process(corr6_out_V_user_V_empty_n, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            corr6_out_V_user_V_blk_n <= corr6_out_V_user_V_empty_n;
        else 
            corr6_out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr6_out_V_user_V_read_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op129_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op100_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            corr6_out_V_user_V_read <= ap_const_logic_1;
        else 
            corr6_out_V_user_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr6_out_V_valid_V_blk_n_assign_proc : process(corr6_out_V_valid_V_empty_n, ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            corr6_out_V_valid_V_blk_n <= corr6_out_V_valid_V_empty_n;
        else 
            corr6_out_V_valid_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr6_out_V_valid_V_read_assign_proc : process(ap_CS_fsm_state6, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op129_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_predicate_op100_read_state6 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            corr6_out_V_valid_V_read <= ap_const_logic_1;
        else 
            corr6_out_V_valid_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr7_out_V_data_V_blk_n_assign_proc : process(corr7_out_V_data_V_full_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            corr7_out_V_data_V_blk_n <= corr7_out_V_data_V_full_n;
        else 
            corr7_out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr7_out_V_data_V_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_6_reg_1431),12));

    corr7_out_V_data_V_write_assign_proc : process(ap_CS_fsm_state20, io_acc_block_signal_op270)
    begin
        if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            corr7_out_V_data_V_write <= ap_const_logic_1;
        else 
            corr7_out_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr7_out_V_dest_V_blk_n_assign_proc : process(corr7_out_V_dest_V_full_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            corr7_out_V_dest_V_blk_n <= corr7_out_V_dest_V_full_n;
        else 
            corr7_out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr7_out_V_dest_V_din <= img_channel_0_dest_s_q0;

    corr7_out_V_dest_V_write_assign_proc : process(ap_CS_fsm_state20, io_acc_block_signal_op270)
    begin
        if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            corr7_out_V_dest_V_write <= ap_const_logic_1;
        else 
            corr7_out_V_dest_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr7_out_V_id_V_blk_n_assign_proc : process(corr7_out_V_id_V_full_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            corr7_out_V_id_V_blk_n <= corr7_out_V_id_V_full_n;
        else 
            corr7_out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr7_out_V_id_V_din <= img_channel_0_id_V_q0;

    corr7_out_V_id_V_write_assign_proc : process(ap_CS_fsm_state20, io_acc_block_signal_op270)
    begin
        if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            corr7_out_V_id_V_write <= ap_const_logic_1;
        else 
            corr7_out_V_id_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr7_out_V_keep_V_blk_n_assign_proc : process(corr7_out_V_keep_V_full_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            corr7_out_V_keep_V_blk_n <= corr7_out_V_keep_V_full_n;
        else 
            corr7_out_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr7_out_V_keep_V_din <= img_channel_0_keep_s_q0;

    corr7_out_V_keep_V_write_assign_proc : process(ap_CS_fsm_state20, io_acc_block_signal_op270)
    begin
        if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            corr7_out_V_keep_V_write <= ap_const_logic_1;
        else 
            corr7_out_V_keep_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr7_out_V_last_V_blk_n_assign_proc : process(corr7_out_V_last_V_full_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            corr7_out_V_last_V_blk_n <= corr7_out_V_last_V_full_n;
        else 
            corr7_out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr7_out_V_last_V_din <= img_channel_0_last_s_q0;

    corr7_out_V_last_V_write_assign_proc : process(ap_CS_fsm_state20, io_acc_block_signal_op270)
    begin
        if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            corr7_out_V_last_V_write <= ap_const_logic_1;
        else 
            corr7_out_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr7_out_V_user_V_blk_n_assign_proc : process(corr7_out_V_user_V_full_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            corr7_out_V_user_V_blk_n <= corr7_out_V_user_V_full_n;
        else 
            corr7_out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr7_out_V_user_V_din <= img_channel_0_user_s_q0;

    corr7_out_V_user_V_write_assign_proc : process(ap_CS_fsm_state20, io_acc_block_signal_op270)
    begin
        if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            corr7_out_V_user_V_write <= ap_const_logic_1;
        else 
            corr7_out_V_user_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr7_out_V_valid_V_blk_n_assign_proc : process(corr7_out_V_valid_V_full_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            corr7_out_V_valid_V_blk_n <= corr7_out_V_valid_V_full_n;
        else 
            corr7_out_V_valid_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr7_out_V_valid_V_din <= tmp_valid_V_reg_1436;

    corr7_out_V_valid_V_write_assign_proc : process(ap_CS_fsm_state20, io_acc_block_signal_op270)
    begin
        if (((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            corr7_out_V_valid_V_write <= ap_const_logic_1;
        else 
            corr7_out_V_valid_V_write <= ap_const_logic_0;
        end if; 
    end process;


    correlate_img_V_assi_address0_assign_proc : process(zext_ln62_reg_1345, ap_CS_fsm_state15, ap_CS_fsm_state14, zext_ln1041_fu_1101_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            correlate_img_V_assi_address0 <= zext_ln1041_fu_1101_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            correlate_img_V_assi_address0 <= zext_ln62_reg_1345(6 - 1 downto 0);
        else 
            correlate_img_V_assi_address0 <= "XXXXXX";
        end if; 
    end process;


    correlate_img_V_assi_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            correlate_img_V_assi_ce0 <= ap_const_logic_1;
        else 
            correlate_img_V_assi_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    correlate_img_V_assi_d0 <= r_V_fu_1073_p2(15 downto 4);

    correlate_img_V_assi_we0_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            correlate_img_V_assi_we0 <= ap_const_logic_1;
        else 
            correlate_img_V_assi_we0 <= ap_const_logic_0;
        end if; 
    end process;

    current_filter_fu_941_p2 <= std_logic_vector(unsigned(current_filter_0_reg_683) + unsigned(ap_const_lv6_1));
    current_input_channe_2_fu_855_p2 <= std_logic_vector(unsigned(current_input_channe_reg_650) + unsigned(ap_const_lv4_1));
    current_input_channe_3_fu_973_p2 <= std_logic_vector(unsigned(current_input_channe_4_reg_694) + unsigned(ap_const_lv4_1));
    i_fu_799_p2 <= std_logic_vector(unsigned(i_0_reg_628) + unsigned(ap_const_lv6_1));
    icmp_ln1022_fu_935_p2 <= "1" when (current_filter_0_reg_683 = ap_const_lv6_38) else "0";
    icmp_ln1024_fu_967_p2 <= "1" when (current_input_channe_4_reg_694 = ap_const_lv4_C) else "0";
    icmp_ln1033_fu_1019_p2 <= "1" when (index_input_element2_1_reg_705 = ap_const_lv7_40) else "0";
    icmp_ln1039_fu_1089_p2 <= "1" when (index_input_element2_2_reg_728 = ap_const_lv7_40) else "0";
    icmp_ln1044_fu_1135_p2 <= "1" when (index_input_element2_3_reg_739 = ap_const_lv7_40) else "0";
    icmp_ln1494_fu_1185_p2 <= "1" when (signed(aux_sum_V_fu_1175_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln46_fu_1053_p2 <= "1" when (index_0_i_reg_717 = ap_const_lv7_40) else "0";
    icmp_ln942_fu_781_p2 <= "1" when (row_idx_0_reg_616 = ap_const_lv7_40) else "0";
    icmp_ln945_fu_793_p2 <= "1" when (i_0_reg_628 = ap_const_lv6_38) else "0";
    icmp_ln946_fu_823_p2 <= "1" when (j_0_reg_639 = ap_const_lv7_40) else "0";
    icmp_ln950_fu_849_p2 <= "1" when (current_input_channe_reg_650 = ap_const_lv4_C) else "0";
    icmp_ln965_fu_817_p2 <= "1" when (row_idx_0_reg_616 = ap_const_lv7_0) else "0";
    icmp_ln968_fu_904_p2 <= "1" when (index_input_element1_reg_672 = ap_const_lv7_40) else "0";
    icmp_ln987_fu_873_p2 <= "1" when (index_input_element2_reg_661 = ap_const_lv7_40) else "0";

    img_channel_0_data_s_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, ap_CS_fsm_state10, zext_ln203_23_fu_894_p1, zext_ln203_21_fu_925_p1, zext_ln203_27_fu_1040_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img_channel_0_data_s_address0 <= zext_ln203_27_fu_1040_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1))) then 
            img_channel_0_data_s_address0 <= zext_ln203_21_fu_925_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0))) then 
            img_channel_0_data_s_address0 <= zext_ln203_23_fu_894_p1(10 - 1 downto 0);
        else 
            img_channel_0_data_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_data_s_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_data_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_data_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_data_s_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_data_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_data_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_dest_s_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, ap_CS_fsm_state19, zext_ln203_23_fu_894_p1, zext_ln203_21_fu_925_p1, zext_ln1046_fu_1162_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            img_channel_0_dest_s_address0 <= zext_ln1046_fu_1162_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1))) then 
            img_channel_0_dest_s_address0 <= zext_ln203_21_fu_925_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0))) then 
            img_channel_0_dest_s_address0 <= zext_ln203_23_fu_894_p1(10 - 1 downto 0);
        else 
            img_channel_0_dest_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_dest_s_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_dest_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_dest_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_dest_s_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_dest_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_dest_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_id_V_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, ap_CS_fsm_state19, zext_ln203_23_fu_894_p1, zext_ln203_21_fu_925_p1, zext_ln1046_fu_1162_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            img_channel_0_id_V_address0 <= zext_ln1046_fu_1162_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1))) then 
            img_channel_0_id_V_address0 <= zext_ln203_21_fu_925_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0))) then 
            img_channel_0_id_V_address0 <= zext_ln203_23_fu_894_p1(10 - 1 downto 0);
        else 
            img_channel_0_id_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_id_V_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_id_V_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_id_V_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_id_V_we0 <= ap_const_logic_1;
        else 
            img_channel_0_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_keep_s_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, ap_CS_fsm_state19, zext_ln203_23_fu_894_p1, zext_ln203_21_fu_925_p1, zext_ln1046_fu_1162_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            img_channel_0_keep_s_address0 <= zext_ln1046_fu_1162_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1))) then 
            img_channel_0_keep_s_address0 <= zext_ln203_21_fu_925_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0))) then 
            img_channel_0_keep_s_address0 <= zext_ln203_23_fu_894_p1(10 - 1 downto 0);
        else 
            img_channel_0_keep_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_keep_s_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_keep_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_keep_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_keep_s_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_keep_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_keep_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_last_s_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, ap_CS_fsm_state19, zext_ln203_23_fu_894_p1, zext_ln203_21_fu_925_p1, zext_ln1046_fu_1162_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            img_channel_0_last_s_address0 <= zext_ln1046_fu_1162_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1))) then 
            img_channel_0_last_s_address0 <= zext_ln203_21_fu_925_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0))) then 
            img_channel_0_last_s_address0 <= zext_ln203_23_fu_894_p1(10 - 1 downto 0);
        else 
            img_channel_0_last_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_last_s_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_last_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_last_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_last_s_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_last_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_last_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_user_s_address0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, ap_CS_fsm_state19, zext_ln203_23_fu_894_p1, zext_ln203_21_fu_925_p1, zext_ln1046_fu_1162_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            img_channel_0_user_s_address0 <= zext_ln1046_fu_1162_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1))) then 
            img_channel_0_user_s_address0 <= zext_ln203_21_fu_925_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0))) then 
            img_channel_0_user_s_address0 <= zext_ln203_23_fu_894_p1(10 - 1 downto 0);
        else 
            img_channel_0_user_s_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_user_s_ce0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_user_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_user_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_user_s_we0_assign_proc : process(ap_CS_fsm_state6, icmp_ln965_reg_1225, icmp_ln968_fu_904_p2, icmp_ln987_fu_873_p2, io_acc_block_signal_op100, ap_predicate_op100_read_state6, io_acc_block_signal_op129, ap_predicate_op129_read_state6)
    begin
        if (((not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln987_fu_873_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_0)) or (not((((ap_predicate_op129_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op129 = ap_const_logic_0)) or ((ap_predicate_op100_read_state6 = ap_const_boolean_1) and (io_acc_block_signal_op100 = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln968_fu_904_p2 = ap_const_lv1_0) and (icmp_ln965_reg_1225 = ap_const_lv1_1)))) then 
            img_channel_0_user_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_user_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    index_fu_1059_p2 <= std_logic_vector(unsigned(index_0_i_reg_717) + unsigned(ap_const_lv7_1));
    index_input_element_5_fu_879_p2 <= std_logic_vector(unsigned(index_input_element2_reg_661) + unsigned(ap_const_lv7_1));
    index_input_element_6_fu_1141_p2 <= std_logic_vector(unsigned(index_input_element2_3_reg_739) + unsigned(ap_const_lv7_1));
    index_input_element_7_fu_1095_p2 <= std_logic_vector(unsigned(index_input_element2_2_reg_728) + unsigned(ap_const_lv7_1));
    index_input_element_fu_910_p2 <= std_logic_vector(unsigned(index_input_element1_reg_672) + unsigned(ap_const_lv7_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln942_fu_781_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln942_fu_781_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op100 <= (corr6_out_V_valid_V_empty_n and corr6_out_V_user_V_empty_n and corr6_out_V_last_V_empty_n and corr6_out_V_keep_V_empty_n and corr6_out_V_id_V_empty_n and corr6_out_V_dest_V_empty_n and corr6_out_V_data_V_empty_n);
    io_acc_block_signal_op129 <= (corr6_out_V_valid_V_empty_n and corr6_out_V_user_V_empty_n and corr6_out_V_last_V_empty_n and corr6_out_V_keep_V_empty_n and corr6_out_V_id_V_empty_n and corr6_out_V_dest_V_empty_n and corr6_out_V_data_V_empty_n);
    io_acc_block_signal_op270 <= (corr7_out_V_valid_V_full_n and corr7_out_V_user_V_full_n and corr7_out_V_last_V_full_n and corr7_out_V_keep_V_full_n and corr7_out_V_id_V_full_n and corr7_out_V_dest_V_full_n and corr7_out_V_data_V_full_n);
    j_fu_829_p2 <= std_logic_vector(unsigned(j_0_reg_639) + unsigned(ap_const_lv7_1));

    out_layer_data_V_address0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state4, ap_CS_fsm_state15, out_layer_data_V_add_1_reg_1368, ap_CS_fsm_state18, out_layer_data_V_add_2_reg_1401, ap_CS_fsm_state16, zext_ln203_19_fu_844_p1, zext_ln1265_4_fu_1115_p1, zext_ln162_1_fu_1156_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_layer_data_V_address0 <= out_layer_data_V_add_2_reg_1401;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            out_layer_data_V_address0 <= zext_ln162_1_fu_1156_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            out_layer_data_V_address0 <= out_layer_data_V_add_1_reg_1368;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            out_layer_data_V_address0 <= zext_ln1265_4_fu_1115_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_layer_data_V_address0 <= zext_ln203_19_fu_844_p1(12 - 1 downto 0);
        else 
            out_layer_data_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    out_layer_data_V_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state18, ap_CS_fsm_state16, io_acc_block_signal_op270)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            out_layer_data_V_ce0 <= ap_const_logic_1;
        else 
            out_layer_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_layer_data_V_d0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state4, ap_CS_fsm_state16, tmp_data_V_6_fu_1199_p1, add_ln703_fu_1120_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            out_layer_data_V_d0 <= tmp_data_V_6_fu_1199_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            out_layer_data_V_d0 <= add_ln703_fu_1120_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_layer_data_V_d0 <= ap_const_lv12_0;
        else 
            out_layer_data_V_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    out_layer_data_V_we0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state4, icmp_ln946_fu_823_p2, ap_CS_fsm_state16, io_acc_block_signal_op270)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln946_fu_823_p2 = ap_const_lv1_0)) or ((io_acc_block_signal_op270 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            out_layer_data_V_we0 <= ap_const_logic_1;
        else 
            out_layer_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_layer_valid_V_address0 <= zext_ln162_1_fu_1156_p1(12 - 1 downto 0);

    out_layer_valid_V_ce0_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            out_layer_valid_V_ce0 <= ap_const_logic_1;
        else 
            out_layer_valid_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Val2_6_fu_1191_p3 <= 
        add_ln203_fu_1180_p2 when (icmp_ln1494_fu_1185_p2(0) = '1') else 
        ap_const_lv11_0;
    r_V_fu_1073_p0 <= channel_from_prev_ou_2_reg_1355;
    r_V_fu_1073_p1 <= sext_ln46_reg_1332(5 - 1 downto 0);
    r_V_fu_1073_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(r_V_fu_1073_p0) * signed(r_V_fu_1073_p1))), 16));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    row_idx_fu_787_p2 <= std_logic_vector(unsigned(row_idx_0_reg_616) + unsigned(ap_const_lv7_1));
    sext_ln1265_fu_1127_p0 <= biases_layer7_V_q0;
        sext_ln1265_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1265_fu_1127_p0),12));

        sext_ln203_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_13_fu_1009_p2),64));

        sext_ln46_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(subfilter_layer_0_V_reg_1314),16));

    sext_ln703_fu_1131_p0 <= biases_layer7_V_q0;
        sext_ln703_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_1131_p0),11));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln203_fu_1003_p2 <= std_logic_vector(unsigned(zext_ln203_24_fu_987_p1) - unsigned(zext_ln203_25_fu_999_p1));
    tmp_40_fu_861_p3 <= (current_input_channe_reg_650 & ap_const_lv6_0);
    tmp_41_fu_955_p3 <= (current_filter_0_reg_683 & ap_const_lv6_0);
    tmp_42_fu_979_p3 <= (current_input_channe_4_reg_694 & ap_const_lv6_0);
    tmp_43_fu_991_p3 <= (current_input_channe_4_reg_694 & ap_const_lv3_0);
    tmp_data_V_6_fu_1199_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_6_reg_1431),12));
    tmp_s_fu_805_p3 <= (i_0_reg_628 & ap_const_lv6_0);
    trunc_ln703_fu_1171_p1 <= out_layer_data_V_q0(11 - 1 downto 0);
    weights_layer7_V_0_address0 <= sext_ln203_fu_1014_p1(10 - 1 downto 0);

    weights_layer7_V_0_ce0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            weights_layer7_V_0_ce0 <= ap_const_logic_1;
        else 
            weights_layer7_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1024_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_955_p3),13));
    zext_ln1028_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_filter_0_reg_683),64));
    zext_ln1035_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_1_reg_705),64));
    zext_ln1041_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_2_reg_728),64));
    zext_ln1046_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_3_reg_739),64));
    zext_ln1265_4_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1265_fu_1110_p2),64));
    zext_ln1265_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_2_reg_728),13));
    zext_ln162_1_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln162_fu_1151_p2),64));
    zext_ln162_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_filter_0_reg_683),11));
    zext_ln203_19_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_10_fu_839_p2),64));
    zext_ln203_20_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element1_reg_672),11));
    zext_ln203_21_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_11_fu_920_p2),64));
    zext_ln203_22_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_reg_661),11));
    zext_ln203_23_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_12_fu_889_p2),64));
    zext_ln203_24_fu_987_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_fu_979_p3),11));
    zext_ln203_25_fu_999_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_991_p3),11));
    zext_ln203_26_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_1_reg_705),11));
    zext_ln203_27_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_14_fu_1035_p2),64));
    zext_ln203_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_639),13));
    zext_ln321_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_3_reg_739),13));
    zext_ln62_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_0_i_reg_717),64));
    zext_ln946_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_805_p3),13));
    zext_ln965_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_40_fu_861_p3),11));
end behav;
