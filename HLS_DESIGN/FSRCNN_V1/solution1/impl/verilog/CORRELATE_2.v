// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CORRELATE_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        prev_output_channel_V_address0,
        prev_output_channel_V_ce0,
        prev_output_channel_V_q0,
        filter_V_address0,
        filter_V_ce0,
        filter_V_q0,
        correlate_img_V_address0,
        correlate_img_V_ce0,
        correlate_img_V_we0,
        correlate_img_V_d0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] prev_output_channel_V_address0;
output   prev_output_channel_V_ce0;
input  [11:0] prev_output_channel_V_q0;
output  [4:0] filter_V_address0;
output   filter_V_ce0;
input  [6:0] filter_V_q0;
output  [5:0] correlate_img_V_address0;
output   correlate_img_V_ce0;
output   correlate_img_V_we0;
output  [11:0] correlate_img_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg prev_output_channel_V_ce0;
reg filter_V_ce0;
reg correlate_img_V_ce0;
reg correlate_img_V_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] index_fu_177_p2;
reg   [10:0] index_reg_489;
wire    ap_CS_fsm_state2;
wire   [22:0] add_ln49_fu_183_p2;
reg   [22:0] add_ln49_reg_494;
wire   [0:0] icmp_ln46_fu_171_p2;
wire   [6:0] tmp_fu_189_p4;
reg   [6:0] tmp_reg_499;
wire   [6:0] k_y_fu_225_p2;
reg   [6:0] k_y_reg_504;
wire   [0:0] tmp_87_fu_231_p3;
reg   [0:0] tmp_87_reg_509;
wire   [0:0] icmp_ln55_fu_239_p2;
reg   [0:0] icmp_ln55_reg_513;
wire   [0:0] icmp_ln55_1_fu_245_p2;
reg   [0:0] icmp_ln55_1_reg_519;
reg   [3:0] tmp_88_reg_525;
wire   [0:0] and_ln65_fu_279_p2;
reg   [0:0] and_ln65_reg_531;
wire    ap_CS_fsm_state3;
wire  signed [31:0] select_ln55_1_fu_337_p3;
reg  signed [31:0] select_ln55_1_reg_540;
wire    ap_CS_fsm_state4;
reg  signed [11:0] prev_output_channel_1_reg_545;
wire  signed [18:0] r_V_fu_468_p2;
reg  signed [18:0] r_V_reg_555;
wire    ap_CS_fsm_state5;
wire   [10:0] select_ln71_fu_440_p3;
wire    ap_CS_fsm_state6;
wire   [10:0] select_ln71_1_fu_460_p3;
reg   [10:0] index_0_reg_125;
reg   [22:0] phi_mul_reg_136;
reg   [10:0] phi_urem_reg_147;
reg   [10:0] phi_urem33_reg_159;
wire   [63:0] zext_ln1116_5_fu_322_p1;
wire  signed [63:0] sext_ln62_fu_344_p1;
wire   [63:0] zext_ln68_fu_414_p1;
reg   [31:0] index_filter_1_fu_78;
wire   [31:0] index_filter_fu_409_p2;
reg   [11:0] sum_V_1_fu_82;
wire   [4:0] trunc_ln50_1_fu_203_p1;
wire   [4:0] mul_ln50_fu_211_p1;
wire   [6:0] trunc_ln51_1_fu_221_p1;
wire   [2:0] trunc_ln51_fu_217_p1;
wire   [11:0] mul_ln50_fu_211_p2;
wire   [5:0] trunc_ln50_fu_199_p1;
wire   [5:0] add_ln65_fu_261_p2;
wire   [0:0] icmp_ln65_fu_267_p2;
wire   [0:0] icmp_ln65_1_fu_273_p2;
wire   [9:0] tmp_89_fu_288_p3;
wire   [5:0] tmp_90_fu_299_p3;
wire   [11:0] zext_ln1116_3_fu_295_p1;
wire   [11:0] zext_ln1116_4_fu_306_p1;
wire   [11:0] zext_ln1116_fu_285_p1;
wire   [11:0] add_ln1116_fu_310_p2;
wire   [11:0] add_ln1116_2_fu_316_p2;
wire   [31:0] select_ln55_fu_330_p3;
wire   [11:0] select_ln55_2_fu_362_p3;
wire   [11:0] select_ln55_3_fu_369_p3;
wire   [15:0] lhs_V_fu_376_p3;
wire  signed [23:0] sext_ln1118_4_fu_359_p1;
wire   [24:0] zext_ln703_fu_388_p1;
wire   [24:0] zext_ln728_fu_384_p1;
wire   [24:0] ret_V_fu_392_p2;
wire   [10:0] add_ln71_fu_428_p2;
wire   [0:0] icmp_ln71_fu_434_p2;
wire   [10:0] add_ln71_1_fu_448_p2;
wire   [0:0] icmp_ln71_1_fu_454_p2;
reg   [5:0] ap_NS_fsm;
wire   [11:0] mul_ln50_fu_211_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
end

FSRCNN_mul_mul_7sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 19 ))
FSRCNN_mul_mul_7sbkb_U1(
    .din0(filter_V_q0),
    .din1(prev_output_channel_1_reg_545),
    .dout(r_V_fu_468_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        index_0_reg_125 <= index_reg_489;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        index_0_reg_125 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_mul_reg_136 <= add_ln49_reg_494;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_136 <= 23'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_urem33_reg_159 <= select_ln71_fu_440_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_urem33_reg_159 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_urem_reg_147 <= select_ln71_1_fu_460_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_urem_reg_147 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln49_reg_494 <= add_ln49_fu_183_p2;
        k_y_reg_504 <= k_y_fu_225_p2;
        tmp_87_reg_509 <= k_y_fu_225_p2[32'd6];
        tmp_reg_499 <= {{phi_mul_reg_136[22:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_87_fu_231_p3 == 1'd0) & (icmp_ln46_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        and_ln65_reg_531 <= and_ln65_fu_279_p2;
        icmp_ln55_1_reg_519 <= icmp_ln55_1_fu_245_p2;
        icmp_ln55_reg_513 <= icmp_ln55_fu_239_p2;
        tmp_88_reg_525 <= {{mul_ln50_fu_211_p2[11:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_87_reg_509 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        index_filter_1_fu_78 <= index_filter_fu_409_p2;
        sum_V_1_fu_82 <= {{ret_V_fu_392_p2[15:4]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        index_reg_489 <= index_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        prev_output_channel_1_reg_545 <= prev_output_channel_V_q0;
        select_ln55_1_reg_540 <= select_ln55_1_fu_337_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        r_V_reg_555 <= r_V_fu_468_p2;
    end
end

always @ (*) begin
    if ((((icmp_ln46_fu_171_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_171_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        correlate_img_V_ce0 = 1'b1;
    end else begin
        correlate_img_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln65_reg_531) & (tmp_87_reg_509 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        correlate_img_V_we0 = 1'b1;
    end else begin
        correlate_img_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        filter_V_ce0 = 1'b1;
    end else begin
        filter_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        prev_output_channel_V_ce0 = 1'b1;
    end else begin
        prev_output_channel_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln46_fu_171_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((tmp_87_fu_231_p3 == 1'd1) & (icmp_ln46_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1116_2_fu_316_p2 = (zext_ln1116_fu_285_p1 + add_ln1116_fu_310_p2);

assign add_ln1116_fu_310_p2 = (zext_ln1116_3_fu_295_p1 + zext_ln1116_4_fu_306_p1);

assign add_ln49_fu_183_p2 = (23'd2622 + phi_mul_reg_136);

assign add_ln65_fu_261_p2 = ($signed(trunc_ln50_fu_199_p1) + $signed(6'd44));

assign add_ln71_1_fu_448_p2 = (phi_urem_reg_147 + 11'd1);

assign add_ln71_fu_428_p2 = (phi_urem33_reg_159 + 11'd1);

assign and_ln65_fu_279_p2 = (icmp_ln65_fu_267_p2 & icmp_ln65_1_fu_273_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign correlate_img_V_address0 = zext_ln68_fu_414_p1;

assign correlate_img_V_d0 = {{ret_V_fu_392_p2[15:4]}};

assign filter_V_address0 = sext_ln62_fu_344_p1;

assign icmp_ln46_fu_171_p2 = ((index_0_reg_125 == 11'd1600) ? 1'b1 : 1'b0);

assign icmp_ln55_1_fu_245_p2 = ((trunc_ln51_fu_217_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_239_p2 = ((trunc_ln50_1_fu_203_p1 < 5'd5) ? 1'b1 : 1'b0);

assign icmp_ln65_1_fu_273_p2 = ((trunc_ln51_fu_217_p1 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_267_p2 = ((add_ln65_fu_261_p2 < 6'd5) ? 1'b1 : 1'b0);

assign icmp_ln71_1_fu_454_p2 = ((add_ln71_1_fu_448_p2 < 11'd25) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_434_p2 = ((add_ln71_fu_428_p2 < 11'd5) ? 1'b1 : 1'b0);

assign index_filter_fu_409_p2 = ($signed(select_ln55_1_reg_540) + $signed(32'd1));

assign index_fu_177_p2 = (index_0_reg_125 + 11'd1);

assign k_y_fu_225_p2 = (tmp_fu_189_p4 + trunc_ln51_1_fu_221_p1);

assign lhs_V_fu_376_p3 = {{select_ln55_3_fu_369_p3}, {4'd0}};

assign mul_ln50_fu_211_p1 = mul_ln50_fu_211_p10;

assign mul_ln50_fu_211_p10 = trunc_ln50_1_fu_203_p1;

assign mul_ln50_fu_211_p2 = (12'd52 * mul_ln50_fu_211_p1);

assign prev_output_channel_V_address0 = zext_ln1116_5_fu_322_p1;

assign ret_V_fu_392_p2 = (zext_ln703_fu_388_p1 + zext_ln728_fu_384_p1);

assign select_ln55_1_fu_337_p3 = ((icmp_ln55_reg_513[0:0] === 1'b1) ? select_ln55_fu_330_p3 : index_filter_1_fu_78);

assign select_ln55_2_fu_362_p3 = ((icmp_ln55_1_reg_519[0:0] === 1'b1) ? 12'd0 : sum_V_1_fu_82);

assign select_ln55_3_fu_369_p3 = ((icmp_ln55_reg_513[0:0] === 1'b1) ? select_ln55_2_fu_362_p3 : sum_V_1_fu_82);

assign select_ln55_fu_330_p3 = ((icmp_ln55_1_reg_519[0:0] === 1'b1) ? 32'd0 : index_filter_1_fu_78);

assign select_ln71_1_fu_460_p3 = ((icmp_ln71_1_fu_454_p2[0:0] === 1'b1) ? add_ln71_1_fu_448_p2 : 11'd0);

assign select_ln71_fu_440_p3 = ((icmp_ln71_fu_434_p2[0:0] === 1'b1) ? add_ln71_fu_428_p2 : 11'd0);

assign sext_ln1118_4_fu_359_p1 = r_V_reg_555;

assign sext_ln62_fu_344_p1 = select_ln55_1_fu_337_p3;

assign tmp_87_fu_231_p3 = k_y_fu_225_p2[32'd6];

assign tmp_89_fu_288_p3 = {{tmp_88_reg_525}, {6'd0}};

assign tmp_90_fu_299_p3 = {{tmp_88_reg_525}, {2'd0}};

assign tmp_fu_189_p4 = {{phi_mul_reg_136[22:16]}};

assign trunc_ln50_1_fu_203_p1 = phi_urem_reg_147[4:0];

assign trunc_ln50_fu_199_p1 = phi_urem_reg_147[5:0];

assign trunc_ln51_1_fu_221_p1 = phi_urem33_reg_159[6:0];

assign trunc_ln51_fu_217_p1 = phi_urem33_reg_159[2:0];

assign zext_ln1116_3_fu_295_p1 = tmp_89_fu_288_p3;

assign zext_ln1116_4_fu_306_p1 = tmp_90_fu_299_p3;

assign zext_ln1116_5_fu_322_p1 = add_ln1116_2_fu_316_p2;

assign zext_ln1116_fu_285_p1 = k_y_reg_504;

assign zext_ln68_fu_414_p1 = tmp_reg_499;

assign zext_ln703_fu_388_p1 = $unsigned(sext_ln1118_4_fu_359_p1);

assign zext_ln728_fu_384_p1 = lhs_V_fu_376_p3;

endmodule //CORRELATE_2
