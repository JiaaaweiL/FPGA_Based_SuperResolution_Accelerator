// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module layer4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        corr3_out_V_valid_V_dout,
        corr3_out_V_valid_V_empty_n,
        corr3_out_V_valid_V_read,
        corr3_out_V_data_V_dout,
        corr3_out_V_data_V_empty_n,
        corr3_out_V_data_V_read,
        corr3_out_V_keep_V_dout,
        corr3_out_V_keep_V_empty_n,
        corr3_out_V_keep_V_read,
        corr3_out_V_user_V_dout,
        corr3_out_V_user_V_empty_n,
        corr3_out_V_user_V_read,
        corr3_out_V_last_V_dout,
        corr3_out_V_last_V_empty_n,
        corr3_out_V_last_V_read,
        corr3_out_V_id_V_dout,
        corr3_out_V_id_V_empty_n,
        corr3_out_V_id_V_read,
        corr3_out_V_dest_V_dout,
        corr3_out_V_dest_V_empty_n,
        corr3_out_V_dest_V_read,
        corr4_out_V_valid_V_din,
        corr4_out_V_valid_V_full_n,
        corr4_out_V_valid_V_write,
        corr4_out_V_data_V_din,
        corr4_out_V_data_V_full_n,
        corr4_out_V_data_V_write,
        corr4_out_V_keep_V_din,
        corr4_out_V_keep_V_full_n,
        corr4_out_V_keep_V_write,
        corr4_out_V_user_V_din,
        corr4_out_V_user_V_full_n,
        corr4_out_V_user_V_write,
        corr4_out_V_last_V_din,
        corr4_out_V_last_V_full_n,
        corr4_out_V_last_V_write,
        corr4_out_V_id_V_din,
        corr4_out_V_id_V_full_n,
        corr4_out_V_id_V_write,
        corr4_out_V_dest_V_din,
        corr4_out_V_dest_V_full_n,
        corr4_out_V_dest_V_write
);

parameter    ap_ST_fsm_state1 = 30'd1;
parameter    ap_ST_fsm_state2 = 30'd2;
parameter    ap_ST_fsm_state3 = 30'd4;
parameter    ap_ST_fsm_state4 = 30'd8;
parameter    ap_ST_fsm_state5 = 30'd16;
parameter    ap_ST_fsm_state6 = 30'd32;
parameter    ap_ST_fsm_state7 = 30'd64;
parameter    ap_ST_fsm_state8 = 30'd128;
parameter    ap_ST_fsm_state9 = 30'd256;
parameter    ap_ST_fsm_state10 = 30'd512;
parameter    ap_ST_fsm_state11 = 30'd1024;
parameter    ap_ST_fsm_state12 = 30'd2048;
parameter    ap_ST_fsm_pp0_stage0 = 30'd4096;
parameter    ap_ST_fsm_state15 = 30'd8192;
parameter    ap_ST_fsm_state16 = 30'd16384;
parameter    ap_ST_fsm_state17 = 30'd32768;
parameter    ap_ST_fsm_state18 = 30'd65536;
parameter    ap_ST_fsm_state19 = 30'd131072;
parameter    ap_ST_fsm_state20 = 30'd262144;
parameter    ap_ST_fsm_state21 = 30'd524288;
parameter    ap_ST_fsm_state22 = 30'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 30'd2097152;
parameter    ap_ST_fsm_state26 = 30'd4194304;
parameter    ap_ST_fsm_state27 = 30'd8388608;
parameter    ap_ST_fsm_state28 = 30'd16777216;
parameter    ap_ST_fsm_state29 = 30'd33554432;
parameter    ap_ST_fsm_state30 = 30'd67108864;
parameter    ap_ST_fsm_state31 = 30'd134217728;
parameter    ap_ST_fsm_state32 = 30'd268435456;
parameter    ap_ST_fsm_state33 = 30'd536870912;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [0:0] corr3_out_V_valid_V_dout;
input   corr3_out_V_valid_V_empty_n;
output   corr3_out_V_valid_V_read;
input  [11:0] corr3_out_V_data_V_dout;
input   corr3_out_V_data_V_empty_n;
output   corr3_out_V_data_V_read;
input  [3:0] corr3_out_V_keep_V_dout;
input   corr3_out_V_keep_V_empty_n;
output   corr3_out_V_keep_V_read;
input  [0:0] corr3_out_V_user_V_dout;
input   corr3_out_V_user_V_empty_n;
output   corr3_out_V_user_V_read;
input  [0:0] corr3_out_V_last_V_dout;
input   corr3_out_V_last_V_empty_n;
output   corr3_out_V_last_V_read;
input  [0:0] corr3_out_V_id_V_dout;
input   corr3_out_V_id_V_empty_n;
output   corr3_out_V_id_V_read;
input  [0:0] corr3_out_V_dest_V_dout;
input   corr3_out_V_dest_V_empty_n;
output   corr3_out_V_dest_V_read;
output  [0:0] corr4_out_V_valid_V_din;
input   corr4_out_V_valid_V_full_n;
output   corr4_out_V_valid_V_write;
output  [11:0] corr4_out_V_data_V_din;
input   corr4_out_V_data_V_full_n;
output   corr4_out_V_data_V_write;
output  [3:0] corr4_out_V_keep_V_din;
input   corr4_out_V_keep_V_full_n;
output   corr4_out_V_keep_V_write;
output  [0:0] corr4_out_V_user_V_din;
input   corr4_out_V_user_V_full_n;
output   corr4_out_V_user_V_write;
output  [0:0] corr4_out_V_last_V_din;
input   corr4_out_V_last_V_full_n;
output   corr4_out_V_last_V_write;
output  [0:0] corr4_out_V_id_V_din;
input   corr4_out_V_id_V_full_n;
output   corr4_out_V_id_V_write;
output  [0:0] corr4_out_V_dest_V_din;
input   corr4_out_V_dest_V_full_n;
output   corr4_out_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg corr3_out_V_valid_V_read;
reg corr3_out_V_data_V_read;
reg corr3_out_V_keep_V_read;
reg corr3_out_V_user_V_read;
reg corr3_out_V_last_V_read;
reg corr3_out_V_id_V_read;
reg corr3_out_V_dest_V_read;
reg corr4_out_V_valid_V_write;
reg corr4_out_V_data_V_write;
reg corr4_out_V_keep_V_write;
reg corr4_out_V_user_V_write;
reg corr4_out_V_last_V_write;
reg corr4_out_V_id_V_write;
reg corr4_out_V_dest_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [29:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [3:0] biases_layer4_V_address0;
reg    biases_layer4_V_ce0;
wire   [3:0] biases_layer4_V_q0;
wire   [10:0] weights_layer4_V_address0;
reg    weights_layer4_V_ce0;
wire   [5:0] weights_layer4_V_q0;
reg    corr3_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln585_fu_2113_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln604_fu_2247_p2;
reg    corr3_out_V_data_V_blk_n;
reg    corr3_out_V_keep_V_blk_n;
reg    corr3_out_V_user_V_blk_n;
reg    corr3_out_V_last_V_blk_n;
reg    corr3_out_V_id_V_blk_n;
reg    corr3_out_V_dest_V_blk_n;
reg    corr4_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state33;
reg    corr4_out_V_data_V_blk_n;
reg    corr4_out_V_keep_V_blk_n;
reg    corr4_out_V_user_V_blk_n;
reg    corr4_out_V_last_V_blk_n;
reg    corr4_out_V_id_V_blk_n;
reg    corr4_out_V_dest_V_blk_n;
reg   [6:0] index_input_element2_14_reg_1503;
reg   [7:0] indvar_flatten_reg_1559;
reg   [1:0] input_line_0_reg_1570;
reg   [6:0] index_input_element2_16_reg_1581;
wire   [6:0] row_idx_fu_1685_p2;
reg   [6:0] row_idx_reg_2966;
wire    ap_CS_fsm_state2;
wire   [3:0] i_fu_1697_p2;
reg   [3:0] i_reg_2974;
wire    ap_CS_fsm_state3;
wire   [10:0] zext_ln563_fu_1711_p1;
reg   [10:0] zext_ln563_reg_2979;
wire   [0:0] icmp_ln562_fu_1691_p2;
wire   [0:0] icmp_ln570_fu_1715_p2;
reg   [0:0] icmp_ln570_reg_2984;
wire   [0:0] icmp_ln582_fu_1721_p2;
reg   [0:0] icmp_ln582_reg_2988;
wire   [0:0] icmp_ln601_fu_1727_p2;
reg   [0:0] icmp_ln601_reg_2992;
wire   [0:0] and_ln620_fu_1739_p2;
reg   [0:0] and_ln620_reg_2996;
wire  signed [12:0] sext_ln321_fu_1775_p1;
reg  signed [12:0] sext_ln321_reg_3000;
wire   [0:0] or_ln601_fu_1779_p2;
reg   [0:0] or_ln601_reg_3006;
wire   [6:0] j_fu_1791_p2;
wire    ap_CS_fsm_state4;
wire   [3:0] current_input_channe_8_fu_1817_p2;
reg   [3:0] current_input_channe_8_reg_3021;
wire    ap_CS_fsm_state5;
wire   [7:0] zext_ln572_fu_1823_p1;
reg   [7:0] zext_ln572_reg_3026;
wire   [0:0] icmp_ln567_fu_1811_p2;
wire   [0:0] grp_fu_1631_p2;
reg   [0:0] icmp_ln638_reg_3032;
wire   [1:0] filter_line_fu_1833_p2;
reg   [1:0] filter_line_reg_3039;
wire    ap_CS_fsm_state6;
wire   [12:0] add_ln321_83_fu_1902_p2;
reg   [12:0] add_ln321_83_reg_3044;
wire   [0:0] icmp_ln572_fu_1827_p2;
wire   [12:0] add_ln321_85_fu_1971_p2;
reg   [12:0] add_ln321_85_reg_3049;
wire   [12:0] add_ln321_87_fu_1998_p2;
reg   [12:0] add_ln321_87_reg_3054;
reg   [11:0] img_channel_valid_V_69_reg_3059;
reg   [11:0] img_channel_valid_V_70_reg_3064;
reg   [11:0] img_channel_valid_V_71_reg_3069;
reg   [11:0] img_channel_valid_V_72_reg_3074;
reg   [11:0] img_channel_data_V_a_50_reg_3079;
reg   [11:0] img_channel_data_V_a_51_reg_3084;
reg   [11:0] img_channel_data_V_a_52_reg_3089;
reg   [11:0] img_channel_data_V_a_53_reg_3094;
reg   [11:0] img_channel_keep_V_a_51_reg_3099;
reg   [11:0] img_channel_keep_V_a_52_reg_3104;
reg   [11:0] img_channel_keep_V_a_53_reg_3109;
reg   [11:0] img_channel_keep_V_a_54_reg_3114;
reg   [11:0] img_channel_user_V_a_49_reg_3119;
reg   [11:0] img_channel_user_V_a_50_reg_3124;
reg   [11:0] img_channel_user_V_a_51_reg_3129;
reg   [11:0] img_channel_user_V_a_52_reg_3134;
reg   [11:0] img_channel_last_V_a_51_reg_3139;
reg   [11:0] img_channel_last_V_a_52_reg_3144;
reg   [11:0] img_channel_last_V_a_53_reg_3149;
reg   [11:0] img_channel_last_V_a_54_reg_3154;
reg   [11:0] img_channel_id_V_add_51_reg_3159;
reg   [11:0] img_channel_id_V_add_52_reg_3164;
reg   [11:0] img_channel_id_V_add_53_reg_3169;
reg   [11:0] img_channel_id_V_add_54_reg_3174;
reg   [11:0] img_channel_dest_V_a_51_reg_3179;
reg   [11:0] img_channel_dest_V_a_52_reg_3184;
reg   [11:0] img_channel_dest_V_a_53_reg_3189;
reg   [11:0] img_channel_dest_V_a_54_reg_3194;
wire   [6:0] index_input_element_fu_2072_p2;
reg   [6:0] index_input_element_reg_3202;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln574_fu_2066_p2;
wire   [12:0] add_ln321_91_fu_2098_p2;
reg   [12:0] add_ln321_91_reg_3212;
wire   [6:0] index_input_element_23_fu_2139_p2;
wire    io_acc_block_signal_op249;
reg    ap_block_state9;
wire   [11:0] add_ln321_95_fu_2179_p2;
reg   [11:0] add_ln321_95_reg_3255;
wire    ap_CS_fsm_state10;
reg   [11:0] img_channel_valid_V_76_reg_3260;
reg   [11:0] img_channel_valid_V_77_reg_3265;
reg   [11:0] img_channel_valid_V_78_reg_3270;
reg   [11:0] img_channel_valid_V_79_reg_3275;
reg   [11:0] img_channel_data_V_a_55_reg_3280;
reg   [11:0] img_channel_data_V_a_56_reg_3285;
reg   [11:0] img_channel_data_V_a_57_reg_3290;
reg   [11:0] img_channel_data_V_a_58_reg_3295;
reg   [11:0] img_channel_keep_V_a_56_reg_3300;
reg   [11:0] img_channel_keep_V_a_57_reg_3305;
reg   [11:0] img_channel_keep_V_a_58_reg_3310;
reg   [11:0] img_channel_keep_V_a_59_reg_3315;
reg   [11:0] img_channel_user_V_a_54_reg_3320;
reg   [11:0] img_channel_user_V_a_55_reg_3325;
reg   [11:0] img_channel_user_V_a_56_reg_3330;
reg   [11:0] img_channel_user_V_a_57_reg_3335;
reg   [11:0] img_channel_last_V_a_56_reg_3340;
reg   [11:0] img_channel_last_V_a_57_reg_3345;
reg   [11:0] img_channel_last_V_a_58_reg_3350;
reg   [11:0] img_channel_last_V_a_59_reg_3355;
reg   [11:0] img_channel_id_V_add_56_reg_3360;
reg   [11:0] img_channel_id_V_add_57_reg_3365;
reg   [11:0] img_channel_id_V_add_58_reg_3370;
reg   [11:0] img_channel_id_V_add_59_reg_3375;
reg   [11:0] img_channel_dest_V_a_56_reg_3380;
reg   [11:0] img_channel_dest_V_a_57_reg_3385;
reg   [11:0] img_channel_dest_V_a_58_reg_3390;
reg   [11:0] img_channel_dest_V_a_59_reg_3395;
wire   [6:0] index_input_element_26_fu_2273_p2;
wire    io_acc_block_signal_op367;
reg    ap_block_state11;
wire   [10:0] add_ln321_100_fu_2307_p2;
reg   [10:0] add_ln321_100_reg_3408;
wire    ap_CS_fsm_state12;
wire   [12:0] add_ln321_102_fu_2330_p2;
reg   [12:0] add_ln321_102_reg_3413;
wire   [0:0] icmp_ln622_fu_2336_p2;
reg   [0:0] icmp_ln622_reg_3418;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state13_pp0_stage0_iter0;
wire    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] index_input_element_27_fu_2342_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [12:0] add_ln321_104_fu_2372_p2;
reg   [12:0] add_ln321_104_reg_3432;
wire   [10:0] add_ln321_106_fu_2421_p2;
reg   [10:0] add_ln321_106_reg_3467;
wire    ap_CS_fsm_state15;
wire   [11:0] add_ln321_107_fu_2427_p2;
reg   [11:0] add_ln321_107_reg_3472;
wire   [6:0] index_input_element_28_fu_2439_p2;
reg   [6:0] index_input_element_28_reg_3480;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln631_fu_2433_p2;
wire   [11:0] add_ln321_109_fu_2469_p2;
reg   [11:0] add_ln321_109_reg_3490;
wire   [3:0] current_filter_fu_2490_p2;
reg   [3:0] current_filter_reg_3528;
wire    ap_CS_fsm_state18;
wire   [63:0] zext_ln646_fu_2496_p1;
reg   [63:0] zext_ln646_reg_3533;
wire   [0:0] icmp_ln640_fu_2484_p2;
wire   [11:0] zext_ln162_fu_2500_p1;
reg   [11:0] zext_ln162_reg_3538;
wire   [10:0] zext_ln642_fu_2512_p1;
reg   [10:0] zext_ln642_reg_3543;
wire   [3:0] current_input_channe_9_fu_2522_p2;
reg   [3:0] current_input_channe_9_reg_3552;
wire    ap_CS_fsm_state19;
wire   [7:0] zext_ln203_55_fu_2528_p1;
reg   [7:0] zext_ln203_55_reg_3557;
wire   [0:0] icmp_ln642_fu_2516_p2;
wire   [7:0] add_ln203_33_fu_2544_p2;
reg   [7:0] add_ln203_33_reg_3562;
wire   [0:0] icmp_ln644_fu_2550_p2;
wire    ap_CS_fsm_state20;
wire   [3:0] subfilter_element_fu_2556_p2;
reg   [3:0] subfilter_element_reg_3576;
wire   [11:0] add_ln203_35_fu_2597_p2;
reg   [11:0] add_ln203_35_reg_3581;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln648_fu_2616_p2;
reg   [0:0] icmp_ln648_reg_3591;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state23_pp1_stage0_iter0;
wire    ap_block_state24_pp1_stage0_iter1;
wire    ap_block_state25_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln648_reg_3591_pp1_iter1_reg;
wire   [7:0] add_ln648_fu_2622_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [6:0] select_ln653_fu_2640_p3;
reg   [6:0] select_ln653_reg_3600;
wire   [1:0] select_ln653_1_fu_2648_p3;
reg   [1:0] select_ln653_1_reg_3606;
wire   [3:0] tmp_86_fu_2668_p3;
reg   [3:0] tmp_86_reg_3612;
wire   [7:0] add_ln203_36_fu_2690_p2;
reg   [7:0] add_ln203_36_reg_3617;
wire   [6:0] trunc_ln203_fu_2695_p1;
reg   [6:0] trunc_ln203_reg_3622;
wire   [6:0] index_input_element_24_fu_2699_p2;
wire   [8:0] add_ln203_40_fu_2766_p2;
reg   [8:0] add_ln203_40_reg_3637;
wire   [6:0] index_input_element_25_fu_2782_p2;
reg   [6:0] index_input_element_25_reg_3645;
wire    ap_CS_fsm_state28;
reg   [9:0] out_layer_data_V_add_5_reg_3650;
wire   [0:0] icmp_ln657_fu_2776_p2;
wire  signed [11:0] sext_ln1265_fu_2814_p1;
reg  signed [11:0] sext_ln1265_reg_3660;
wire    ap_CS_fsm_state30;
wire  signed [10:0] sext_ln703_fu_2818_p1;
reg  signed [10:0] sext_ln703_reg_3665;
wire   [6:0] index_input_element_22_fu_2828_p2;
reg   [6:0] index_input_element_22_reg_3673;
wire    ap_CS_fsm_state31;
wire   [0:0] icmp_ln662_fu_2822_p2;
reg   [9:0] out_layer_data_V_add_6_reg_3684;
wire   [11:0] aux_sum_V_fu_2853_p2;
reg   [11:0] aux_sum_V_reg_3689;
wire    ap_CS_fsm_state32;
wire   [10:0] add_ln203_fu_2858_p2;
reg   [10:0] add_ln203_reg_3695;
reg   [0:0] tmp_53_reg_3700;
wire   [0:0] out_layer_valid_V_q0;
reg   [0:0] tmp_valid_V_reg_3730;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state13;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state23;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg   [3:0] subfilter_layer_V_address0;
reg    subfilter_layer_V_ce0;
reg    subfilter_layer_V_we0;
wire   [11:0] subfilter_layer_V_d0;
wire   [11:0] subfilter_layer_V_q0;
reg   [5:0] correlate_img_address0;
reg    correlate_img_ce0;
reg    correlate_img_we0;
wire   [11:0] correlate_img_q0;
reg   [11:0] img_channel_valid_V_address0;
reg    img_channel_valid_V_ce0;
reg    img_channel_valid_V_we0;
reg   [0:0] img_channel_valid_V_d0;
wire   [0:0] img_channel_valid_V_q0;
reg   [11:0] img_channel_valid_V_address1;
reg    img_channel_valid_V_ce1;
reg    img_channel_valid_V_we1;
reg   [0:0] img_channel_valid_V_d1;
wire   [0:0] img_channel_valid_V_q1;
reg   [11:0] img_channel_data_V_address0;
reg    img_channel_data_V_ce0;
reg    img_channel_data_V_we0;
reg   [11:0] img_channel_data_V_d0;
wire   [11:0] img_channel_data_V_q0;
reg   [11:0] img_channel_data_V_address1;
reg    img_channel_data_V_ce1;
reg    img_channel_data_V_we1;
reg   [11:0] img_channel_data_V_d1;
wire   [11:0] img_channel_data_V_q1;
reg   [11:0] img_channel_keep_V_address0;
reg    img_channel_keep_V_ce0;
reg    img_channel_keep_V_we0;
reg   [3:0] img_channel_keep_V_d0;
wire   [3:0] img_channel_keep_V_q0;
reg   [11:0] img_channel_keep_V_address1;
reg    img_channel_keep_V_ce1;
reg    img_channel_keep_V_we1;
reg   [3:0] img_channel_keep_V_d1;
wire   [3:0] img_channel_keep_V_q1;
reg   [11:0] img_channel_user_V_address0;
reg    img_channel_user_V_ce0;
reg    img_channel_user_V_we0;
reg   [0:0] img_channel_user_V_d0;
wire   [0:0] img_channel_user_V_q0;
reg   [11:0] img_channel_user_V_address1;
reg    img_channel_user_V_ce1;
reg    img_channel_user_V_we1;
reg   [0:0] img_channel_user_V_d1;
wire   [0:0] img_channel_user_V_q1;
reg   [11:0] img_channel_last_V_address0;
reg    img_channel_last_V_ce0;
reg    img_channel_last_V_we0;
reg   [0:0] img_channel_last_V_d0;
wire   [0:0] img_channel_last_V_q0;
reg   [11:0] img_channel_last_V_address1;
reg    img_channel_last_V_ce1;
reg    img_channel_last_V_we1;
reg   [0:0] img_channel_last_V_d1;
wire   [0:0] img_channel_last_V_q1;
reg   [11:0] img_channel_id_V_address0;
reg    img_channel_id_V_ce0;
reg    img_channel_id_V_we0;
reg   [0:0] img_channel_id_V_d0;
wire   [0:0] img_channel_id_V_q0;
reg   [11:0] img_channel_id_V_address1;
reg    img_channel_id_V_ce1;
reg    img_channel_id_V_we1;
reg   [0:0] img_channel_id_V_d1;
wire   [0:0] img_channel_id_V_q1;
reg   [11:0] img_channel_dest_V_address0;
reg    img_channel_dest_V_ce0;
reg    img_channel_dest_V_we0;
reg   [0:0] img_channel_dest_V_d0;
wire   [0:0] img_channel_dest_V_q0;
reg   [11:0] img_channel_dest_V_address1;
reg    img_channel_dest_V_ce1;
reg    img_channel_dest_V_we1;
reg   [0:0] img_channel_dest_V_d1;
wire   [0:0] img_channel_dest_V_q1;
reg   [12:0] channel_from_prev_ou_address0;
reg    channel_from_prev_ou_ce0;
reg    channel_from_prev_ou_we0;
wire   [11:0] channel_from_prev_ou_q0;
wire   [9:0] out_layer_valid_V_address0;
reg    out_layer_valid_V_ce0;
reg   [9:0] out_layer_data_V_address0;
reg    out_layer_data_V_ce0;
reg    out_layer_data_V_we0;
reg   [11:0] out_layer_data_V_d0;
wire   [11:0] out_layer_data_V_q0;
wire    grp_CORRELATE_1_fu_1614_ap_start;
wire    grp_CORRELATE_1_fu_1614_ap_done;
wire    grp_CORRELATE_1_fu_1614_ap_idle;
wire    grp_CORRELATE_1_fu_1614_ap_ready;
wire   [12:0] grp_CORRELATE_1_fu_1614_prev_output_channel_V_address0;
wire    grp_CORRELATE_1_fu_1614_prev_output_channel_V_ce0;
wire   [3:0] grp_CORRELATE_1_fu_1614_filter_V_address0;
wire    grp_CORRELATE_1_fu_1614_filter_V_ce0;
wire   [5:0] grp_CORRELATE_1_fu_1614_correlate_img_V_address0;
wire    grp_CORRELATE_1_fu_1614_correlate_img_V_ce0;
wire    grp_CORRELATE_1_fu_1614_correlate_img_V_we0;
wire   [11:0] grp_CORRELATE_1_fu_1614_correlate_img_V_d0;
reg   [6:0] row_idx_0_reg_1413;
reg    ap_block_state1;
reg   [3:0] i_0_reg_1425;
wire   [0:0] icmp_ln563_fu_1785_p2;
wire   [0:0] icmp_ln559_fu_1679_p2;
reg   [6:0] j_0_reg_1436;
reg   [3:0] current_input_channe_reg_1447;
reg   [1:0] filter_line_0_reg_1459;
reg   [6:0] index_input_element_s_reg_1470;
wire    ap_CS_fsm_state8;
reg   [6:0] index_input_element1_reg_1481;
reg   [6:0] index_input_element2_reg_1492;
reg   [6:0] index_input_element2_15_reg_1514;
wire    ap_CS_fsm_state17;
reg   [3:0] current_filter_0_reg_1525;
reg   [3:0] current_input_channe_13_reg_1536;
reg   [3:0] subfilter_element_0_reg_1547;
wire    ap_CS_fsm_state22;
reg   [1:0] ap_phi_mux_input_line_0_phi_fu_1574_p4;
wire    ap_block_pp1_stage0;
reg   [6:0] index_input_element2_17_reg_1592;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
reg   [6:0] index_input_element2_18_reg_1603;
wire    io_acc_block_signal_op714;
reg    grp_CORRELATE_1_fu_1614_ap_start_reg;
wire    ap_CS_fsm_state26;
wire   [63:0] zext_ln203_54_fu_1806_p1;
wire   [63:0] zext_ln321_132_fu_2021_p1;
wire   [63:0] zext_ln321_131_fu_2004_p1;
wire   [63:0] zext_ln321_133_fu_2038_p1;
wire   [63:0] zext_ln321_134_fu_2055_p1;
wire   [63:0] zext_ln321_136_fu_2087_p1;
wire   [63:0] zext_ln321_137_fu_2103_p1;
wire   [63:0] zext_ln321_141_fu_2128_p1;
wire   [63:0] zext_ln321_146_fu_2202_p1;
wire   [63:0] zext_ln321_145_fu_2185_p1;
wire   [63:0] zext_ln321_147_fu_2219_p1;
wire   [63:0] zext_ln321_148_fu_2236_p1;
wire   [63:0] zext_ln321_150_fu_2262_p1;
wire   [63:0] zext_ln321_156_fu_2361_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln321_157_fu_2377_p1;
wire   [63:0] zext_ln321_163_fu_2458_p1;
wire   [63:0] zext_ln321_164_fu_2474_p1;
wire   [63:0] zext_ln203_59_fu_2602_p1;
wire   [63:0] zext_ln646_1_fu_2606_p1;
wire   [63:0] zext_ln203_66_fu_2761_p1;
wire   [63:0] zext_ln203_67_fu_2772_p1;
wire   [63:0] zext_ln1265_6_fu_2802_p1;
wire   [63:0] zext_ln659_fu_2788_p1;
wire   [63:0] zext_ln162_5_fu_2843_p1;
wire   [63:0] zext_ln321_139_fu_2884_p1;
wire   [11:0] add_ln703_fu_2807_p2;
wire   [5:0] grp_fu_1621_p4;
wire   [9:0] tmp_78_fu_1703_p3;
wire   [0:0] icmp_ln620_fu_1733_p2;
wire   [10:0] tmp_76_fu_1745_p3;
wire   [8:0] tmp_77_fu_1757_p3;
wire   [11:0] zext_ln321_fu_1753_p1;
wire   [11:0] zext_ln321_125_fu_1765_p1;
wire   [11:0] sub_ln321_fu_1769_p2;
wire   [10:0] zext_ln203_fu_1797_p1;
wire   [10:0] add_ln203_32_fu_1801_p2;
wire   [5:0] tmp_80_fu_1839_p3;
wire   [3:0] tmp_81_fu_1851_p3;
wire   [6:0] zext_ln321_126_fu_1847_p1;
wire   [6:0] zext_ln321_127_fu_1859_p1;
wire   [6:0] sub_ln321_7_fu_1863_p2;
wire  signed [7:0] sext_ln321_16_fu_1869_p1;
wire   [7:0] add_ln321_fu_1873_p2;
wire   [6:0] trunc_ln321_fu_1878_p1;
wire   [8:0] tmp_51_fu_1890_p3;
wire  signed [12:0] sext_ln321_17_fu_1898_p1;
wire   [12:0] p_shl_cast_fu_1882_p3;
wire   [5:0] tmp_82_fu_1908_p3;
wire   [3:0] tmp_83_fu_1920_p3;
wire   [6:0] zext_ln321_128_fu_1916_p1;
wire   [6:0] zext_ln321_129_fu_1928_p1;
wire   [6:0] sub_ln321_8_fu_1932_p2;
wire  signed [7:0] sext_ln321_18_fu_1938_p1;
wire   [7:0] add_ln321_84_fu_1942_p2;
wire   [6:0] trunc_ln321_6_fu_1947_p1;
wire   [8:0] tmp_52_fu_1959_p3;
wire  signed [12:0] sext_ln321_19_fu_1967_p1;
wire   [12:0] p_shl33_cast_fu_1951_p3;
wire   [12:0] zext_ln321_130_fu_1977_p1;
wire   [12:0] add_ln321_86_fu_1981_p2;
wire   [12:0] shl_ln321_fu_1986_p2;
wire   [12:0] shl_ln321_7_fu_1992_p2;
wire   [12:0] or_ln321_fu_2015_p2;
wire   [12:0] add_ln321_88_fu_2032_p2;
wire   [12:0] add_ln321_89_fu_2049_p2;
wire   [12:0] zext_ln321_135_fu_2078_p1;
wire   [12:0] add_ln321_90_fu_2082_p2;
wire   [12:0] zext_ln321_140_fu_2119_p1;
wire   [12:0] add_ln321_93_fu_2123_p2;
wire   [9:0] tmp_88_fu_2145_p3;
wire   [4:0] tmp_89_fu_2157_p3;
wire   [10:0] zext_ln321_143_fu_2165_p1;
wire   [10:0] zext_ln321_142_fu_2153_p1;
wire   [10:0] add_ln321_94_fu_2169_p2;
wire   [11:0] zext_ln321_144_fu_2175_p1;
wire   [11:0] add_ln321_96_fu_2196_p2;
wire   [11:0] add_ln321_97_fu_2213_p2;
wire   [11:0] add_ln321_98_fu_2230_p2;
wire   [11:0] zext_ln321_149_fu_2253_p1;
wire   [11:0] add_ln321_99_fu_2257_p2;
wire   [9:0] tmp_90_fu_2283_p3;
wire   [4:0] tmp_91_fu_2295_p3;
wire   [10:0] zext_ln321_152_fu_2291_p1;
wire   [10:0] zext_ln321_153_fu_2303_p1;
wire   [12:0] zext_ln321_151_fu_2279_p1;
wire   [12:0] add_ln321_101_fu_2313_p2;
wire   [12:0] shl_ln321_8_fu_2318_p2;
wire   [12:0] shl_ln321_9_fu_2324_p2;
wire   [10:0] zext_ln321_155_fu_2352_p1;
wire   [10:0] add_ln321_103_fu_2356_p2;
wire   [12:0] zext_ln321_154_fu_2348_p1;
wire   [9:0] tmp_92_fu_2387_p3;
wire   [4:0] tmp_93_fu_2399_p3;
wire   [10:0] zext_ln321_159_fu_2407_p1;
wire   [10:0] zext_ln321_158_fu_2395_p1;
wire   [10:0] add_ln321_105_fu_2411_p2;
wire   [11:0] zext_ln321_160_fu_2417_p1;
wire   [10:0] zext_ln321_162_fu_2449_p1;
wire   [10:0] add_ln321_108_fu_2453_p2;
wire   [11:0] zext_ln321_161_fu_2445_p1;
wire   [9:0] tmp_79_fu_2504_p3;
wire   [6:0] tmp_84_fu_2532_p3;
wire   [7:0] zext_ln203_56_fu_2540_p1;
wire   [7:0] zext_ln203_57_fu_2562_p1;
wire   [7:0] add_ln203_34_fu_2566_p2;
wire   [9:0] tmp_54_fu_2579_p3;
wire   [11:0] p_shl37_cast_fu_2571_p3;
wire   [11:0] zext_ln203_58_fu_2587_p1;
wire   [11:0] sub_ln203_fu_2591_p2;
wire   [0:0] icmp_ln650_fu_2634_p2;
wire   [1:0] input_line_fu_2628_p2;
wire   [5:0] tmp_85_fu_2656_p3;
wire   [6:0] zext_ln203_60_fu_2664_p1;
wire   [6:0] zext_ln203_62_fu_2676_p1;
wire   [6:0] sub_ln203_4_fu_2680_p2;
wire  signed [7:0] sext_ln203_8_fu_2686_p1;
wire   [8:0] tmp_55_fu_2715_p3;
wire  signed [12:0] sext_ln203_9_fu_2722_p1;
wire   [12:0] p_shl39_cast_fu_2708_p3;
wire   [7:0] tmp_87_fu_2732_p3;
wire   [8:0] zext_ln203_61_fu_2705_p1;
wire   [8:0] zext_ln203_63_fu_2739_p1;
wire   [12:0] add_ln203_37_fu_2726_p2;
wire   [12:0] zext_ln203_65_fu_2752_p1;
wire   [12:0] add_ln203_39_fu_2755_p2;
wire   [8:0] add_ln203_38_fu_2743_p2;
wire   [8:0] zext_ln203_64_fu_2749_p1;
wire   [10:0] zext_ln1265_fu_2793_p1;
wire   [10:0] add_ln1265_fu_2797_p2;
wire  signed [3:0] sext_ln1265_fu_2814_p0;
wire  signed [3:0] sext_ln703_fu_2818_p0;
wire   [10:0] zext_ln162_4_fu_2834_p1;
wire   [10:0] add_ln162_fu_2838_p2;
wire   [10:0] trunc_ln703_fu_2849_p1;
wire   [8:0] zext_ln321_138_fu_2871_p1;
wire   [8:0] add_ln321_92_fu_2874_p2;
wire  signed [9:0] sext_ln321_20_fu_2880_p1;
wire  signed [11:0] select_ln7_fu_2898_p3;
wire   [13:0] shl_ln_fu_2908_p3;
wire  signed [13:0] sext_ln1118_fu_2904_p1;
wire   [0:0] icmp_ln1494_fu_2893_p2;
wire   [10:0] select_ln14_fu_2922_p3;
wire   [14:0] lhs_V_fu_2929_p3;
wire   [13:0] r_V_fu_2916_p2;
wire   [15:0] zext_ln728_fu_2937_p1;
wire  signed [15:0] sext_ln1192_fu_2941_p1;
wire   [15:0] ret_V_fu_2945_p2;
reg   [29:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 30'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 grp_CORRELATE_1_fu_1614_ap_start_reg = 1'b0;
end

layer4_biases_layRg6 #(
    .DataWidth( 4 ),
    .AddressRange( 12 ),
    .AddressWidth( 4 ))
biases_layer4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_layer4_V_address0),
    .ce0(biases_layer4_V_ce0),
    .q0(biases_layer4_V_q0)
);

layer4_weights_laShg #(
    .DataWidth( 6 ),
    .AddressRange( 1296 ),
    .AddressWidth( 11 ))
weights_layer4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer4_V_address0),
    .ce0(weights_layer4_V_ce0),
    .q0(weights_layer4_V_q0)
);

layer3_subfilter_Ffa #(
    .DataWidth( 12 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
subfilter_layer_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(subfilter_layer_V_address0),
    .ce0(subfilter_layer_V_ce0),
    .we0(subfilter_layer_V_we0),
    .d0(subfilter_layer_V_d0),
    .q0(subfilter_layer_V_q0)
);

layer1_correlate_fYi #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
correlate_img_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(correlate_img_address0),
    .ce0(correlate_img_ce0),
    .we0(correlate_img_we0),
    .d0(grp_CORRELATE_1_fu_1614_correlate_img_V_d0),
    .q0(correlate_img_q0)
);

layer3_img_channeHfu #(
    .DataWidth( 1 ),
    .AddressRange( 2376 ),
    .AddressWidth( 12 ))
img_channel_valid_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_valid_V_address0),
    .ce0(img_channel_valid_V_ce0),
    .we0(img_channel_valid_V_we0),
    .d0(img_channel_valid_V_d0),
    .q0(img_channel_valid_V_q0),
    .address1(img_channel_valid_V_address1),
    .ce1(img_channel_valid_V_ce1),
    .we1(img_channel_valid_V_we1),
    .d1(img_channel_valid_V_d1),
    .q1(img_channel_valid_V_q1)
);

layer3_img_channeIfE #(
    .DataWidth( 12 ),
    .AddressRange( 2376 ),
    .AddressWidth( 12 ))
img_channel_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_data_V_address0),
    .ce0(img_channel_data_V_ce0),
    .we0(img_channel_data_V_we0),
    .d0(img_channel_data_V_d0),
    .q0(img_channel_data_V_q0),
    .address1(img_channel_data_V_address1),
    .ce1(img_channel_data_V_ce1),
    .we1(img_channel_data_V_we1),
    .d1(img_channel_data_V_d1),
    .q1(img_channel_data_V_q1)
);

layer3_img_channeJfO #(
    .DataWidth( 4 ),
    .AddressRange( 2376 ),
    .AddressWidth( 12 ))
img_channel_keep_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_keep_V_address0),
    .ce0(img_channel_keep_V_ce0),
    .we0(img_channel_keep_V_we0),
    .d0(img_channel_keep_V_d0),
    .q0(img_channel_keep_V_q0),
    .address1(img_channel_keep_V_address1),
    .ce1(img_channel_keep_V_ce1),
    .we1(img_channel_keep_V_we1),
    .d1(img_channel_keep_V_d1),
    .q1(img_channel_keep_V_q1)
);

layer3_img_channeHfu #(
    .DataWidth( 1 ),
    .AddressRange( 2376 ),
    .AddressWidth( 12 ))
img_channel_user_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_user_V_address0),
    .ce0(img_channel_user_V_ce0),
    .we0(img_channel_user_V_we0),
    .d0(img_channel_user_V_d0),
    .q0(img_channel_user_V_q0),
    .address1(img_channel_user_V_address1),
    .ce1(img_channel_user_V_ce1),
    .we1(img_channel_user_V_we1),
    .d1(img_channel_user_V_d1),
    .q1(img_channel_user_V_q1)
);

layer3_img_channeHfu #(
    .DataWidth( 1 ),
    .AddressRange( 2376 ),
    .AddressWidth( 12 ))
img_channel_last_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_last_V_address0),
    .ce0(img_channel_last_V_ce0),
    .we0(img_channel_last_V_we0),
    .d0(img_channel_last_V_d0),
    .q0(img_channel_last_V_q0),
    .address1(img_channel_last_V_address1),
    .ce1(img_channel_last_V_ce1),
    .we1(img_channel_last_V_we1),
    .d1(img_channel_last_V_d1),
    .q1(img_channel_last_V_q1)
);

layer3_img_channeHfu #(
    .DataWidth( 1 ),
    .AddressRange( 2376 ),
    .AddressWidth( 12 ))
img_channel_id_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_id_V_address0),
    .ce0(img_channel_id_V_ce0),
    .we0(img_channel_id_V_we0),
    .d0(img_channel_id_V_d0),
    .q0(img_channel_id_V_q0),
    .address1(img_channel_id_V_address1),
    .ce1(img_channel_id_V_ce1),
    .we1(img_channel_id_V_we1),
    .d1(img_channel_id_V_d1),
    .q1(img_channel_id_V_q1)
);

layer3_img_channeHfu #(
    .DataWidth( 1 ),
    .AddressRange( 2376 ),
    .AddressWidth( 12 ))
img_channel_dest_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_dest_V_address0),
    .ce0(img_channel_dest_V_ce0),
    .we0(img_channel_dest_V_we0),
    .d0(img_channel_dest_V_d0),
    .q0(img_channel_dest_V_q0),
    .address1(img_channel_dest_V_address1),
    .ce1(img_channel_dest_V_ce1),
    .we1(img_channel_dest_V_we1),
    .d1(img_channel_dest_V_d1),
    .q1(img_channel_dest_V_q1)
);

layer2_channel_fryd2 #(
    .DataWidth( 12 ),
    .AddressRange( 5508 ),
    .AddressWidth( 13 ))
channel_from_prev_ou_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(channel_from_prev_ou_address0),
    .ce0(channel_from_prev_ou_ce0),
    .we0(channel_from_prev_ou_we0),
    .d0(img_channel_data_V_q0),
    .q0(channel_from_prev_ou_q0)
);

layer2_out_layer_zec #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
out_layer_valid_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_layer_valid_V_address0),
    .ce0(out_layer_valid_V_ce0),
    .q0(out_layer_valid_V_q0)
);

layer2_out_layer_Aem #(
    .DataWidth( 12 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
out_layer_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_layer_data_V_address0),
    .ce0(out_layer_data_V_ce0),
    .we0(out_layer_data_V_we0),
    .d0(out_layer_data_V_d0),
    .q0(out_layer_data_V_q0)
);

CORRELATE_1 grp_CORRELATE_1_fu_1614(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CORRELATE_1_fu_1614_ap_start),
    .ap_done(grp_CORRELATE_1_fu_1614_ap_done),
    .ap_idle(grp_CORRELATE_1_fu_1614_ap_idle),
    .ap_ready(grp_CORRELATE_1_fu_1614_ap_ready),
    .prev_output_channel_V_address0(grp_CORRELATE_1_fu_1614_prev_output_channel_V_address0),
    .prev_output_channel_V_ce0(grp_CORRELATE_1_fu_1614_prev_output_channel_V_ce0),
    .prev_output_channel_V_q0(channel_from_prev_ou_q0),
    .filter_V_address0(grp_CORRELATE_1_fu_1614_filter_V_address0),
    .filter_V_ce0(grp_CORRELATE_1_fu_1614_filter_V_ce0),
    .filter_V_q0(subfilter_layer_V_q0),
    .correlate_img_V_address0(grp_CORRELATE_1_fu_1614_correlate_img_V_address0),
    .correlate_img_V_ce0(grp_CORRELATE_1_fu_1614_correlate_img_V_ce0),
    .correlate_img_V_we0(grp_CORRELATE_1_fu_1614_correlate_img_V_we0),
    .correlate_img_V_d0(grp_CORRELATE_1_fu_1614_correlate_img_V_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln559_fu_1679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state13) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'd1 == and_ln620_reg_2996) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state13))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state13);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'd1 == and_ln620_reg_2996) & (1'b1 == ap_CS_fsm_state12))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln644_fu_2550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state23)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state23);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((icmp_ln644_fu_2550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CORRELATE_1_fu_1614_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_CORRELATE_1_fu_1614_ap_start_reg <= 1'b1;
        end else if ((grp_CORRELATE_1_fu_1614_ap_ready == 1'b1)) begin
            grp_CORRELATE_1_fu_1614_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln567_fu_1811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (grp_fu_1631_p2 == 1'd0))) begin
        current_filter_0_reg_1525 <= 4'd0;
    end else if (((icmp_ln662_fu_2822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        current_filter_0_reg_1525 <= current_filter_reg_3528;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln657_fu_2776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        current_input_channe_13_reg_1536 <= current_input_channe_9_reg_3552;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln640_fu_2484_p2 == 1'd0) & (icmp_ln638_reg_3032 == 1'd0))) begin
        current_input_channe_13_reg_1536 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln562_fu_1691_p2 == 1'd1))) begin
        current_input_channe_reg_1447 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln631_fu_2433_p2 == 1'd1) | (icmp_ln601_reg_2992 == 1'd0)))) begin
        current_input_channe_reg_1447 <= current_input_channe_8_reg_3021;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln574_fu_2066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        filter_line_0_reg_1459 <= filter_line_reg_3039;
    end else if (((icmp_ln570_reg_2984 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln567_fu_1811_p2 == 1'd0))) begin
        filter_line_0_reg_1459 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln559_fu_1679_p2 == 1'd0))) begin
        i_0_reg_1425 <= 4'd0;
    end else if (((icmp_ln563_fu_1785_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_reg_1425 <= i_reg_2974;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln582_reg_2988 == 1'd1) & (icmp_ln570_reg_2984 == 1'd0)) | ((icmp_ln572_fu_1827_p2 == 1'd1) & (icmp_ln582_reg_2988 == 1'd1))))) begin
        index_input_element1_reg_1481 <= 7'd1;
    end else if ((~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        index_input_element1_reg_1481 <= index_input_element_23_fu_2139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln620_reg_2996) & (1'b1 == ap_CS_fsm_state12))) begin
        index_input_element2_14_reg_1503 <= 7'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_fu_2336_p2 == 1'd0))) begin
        index_input_element2_14_reg_1503 <= index_input_element_27_fu_2342_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln601_reg_2992 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        index_input_element2_15_reg_1514 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        index_input_element2_15_reg_1514 <= index_input_element_28_reg_3480;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln644_fu_2550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        index_input_element2_16_reg_1581 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln648_fu_2616_p2 == 1'd0))) begin
        index_input_element2_16_reg_1581 <= index_input_element_24_fu_2699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        index_input_element2_17_reg_1592 <= index_input_element_25_reg_3645;
    end else if (((grp_CORRELATE_1_fu_1614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        index_input_element2_17_reg_1592 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        index_input_element2_18_reg_1603 <= 7'd0;
    end else if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        index_input_element2_18_reg_1603 <= index_input_element_22_reg_3673;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (or_ln601_reg_3006 == 1'd0))) begin
        index_input_element2_reg_1492 <= 7'd1;
    end else if ((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        index_input_element2_reg_1492 <= index_input_element_26_fu_2273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln570_reg_2984 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln572_fu_1827_p2 == 1'd0))) begin
        index_input_element_s_reg_1470 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        index_input_element_s_reg_1470 <= index_input_element_reg_3202;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln644_fu_2550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        indvar_flatten_reg_1559 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln648_fu_2616_p2 == 1'd0))) begin
        indvar_flatten_reg_1559 <= add_ln648_fu_2622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln644_fu_2550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        input_line_0_reg_1570 <= 2'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln648_reg_3591 == 1'd0))) begin
        input_line_0_reg_1570 <= select_ln653_1_reg_3606;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln562_fu_1691_p2 == 1'd0))) begin
        j_0_reg_1436 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln563_fu_1785_p2 == 1'd0))) begin
        j_0_reg_1436 <= j_fu_1791_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        row_idx_0_reg_1413 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & ((icmp_ln640_fu_2484_p2 == 1'd1) | (icmp_ln638_reg_3032 == 1'd1)))) begin
        row_idx_0_reg_1413 <= row_idx_reg_2966;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln642_fu_2516_p2 == 1'd0))) begin
        subfilter_element_0_reg_1547 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        subfilter_element_0_reg_1547 <= subfilter_element_reg_3576;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln642_fu_2516_p2 == 1'd0))) begin
        add_ln203_33_reg_3562 <= add_ln203_33_fu_2544_p2;
        zext_ln203_55_reg_3557[3 : 0] <= zext_ln203_55_fu_2528_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln644_fu_2550_p2 == 1'd0))) begin
        add_ln203_35_reg_3581 <= add_ln203_35_fu_2597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln648_fu_2616_p2 == 1'd0))) begin
        add_ln203_36_reg_3617 <= add_ln203_36_fu_2690_p2;
        select_ln653_reg_3600 <= select_ln653_fu_2640_p3;
        tmp_86_reg_3612[3 : 2] <= tmp_86_fu_2668_p3[3 : 2];
        trunc_ln203_reg_3622 <= trunc_ln203_fu_2695_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln648_reg_3591 == 1'd0))) begin
        add_ln203_40_reg_3637 <= add_ln203_40_fu_2766_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln203_reg_3695 <= add_ln203_fu_2858_p2;
        aux_sum_V_reg_3689 <= aux_sum_V_fu_2853_p2;
        tmp_53_reg_3700 <= aux_sum_V_fu_2853_p2[32'd11];
        tmp_valid_V_reg_3730 <= out_layer_valid_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln620_reg_2996) & (1'b1 == ap_CS_fsm_state12))) begin
        add_ln321_100_reg_3408[10 : 1] <= add_ln321_100_fu_2307_p2[10 : 1];
        add_ln321_102_reg_3413[12 : 1] <= add_ln321_102_fu_2330_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_fu_2336_p2 == 1'd0))) begin
        add_ln321_104_reg_3432 <= add_ln321_104_fu_2372_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln601_reg_2992 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        add_ln321_106_reg_3467[10 : 1] <= add_ln321_106_fu_2421_p2[10 : 1];
        add_ln321_107_reg_3472[11 : 1] <= add_ln321_107_fu_2427_p2[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln601_reg_2992 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (icmp_ln631_fu_2433_p2 == 1'd0))) begin
        add_ln321_109_reg_3490 <= add_ln321_109_fu_2469_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln570_reg_2984 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln572_fu_1827_p2 == 1'd0))) begin
        add_ln321_83_reg_3044[12 : 1] <= add_ln321_83_fu_1902_p2[12 : 1];
        add_ln321_85_reg_3049[12 : 1] <= add_ln321_85_fu_1971_p2[12 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln582_reg_2988 == 1'd1) & (icmp_ln570_reg_2984 == 1'd0)) | ((icmp_ln572_fu_1827_p2 == 1'd1) & (icmp_ln582_reg_2988 == 1'd1))))) begin
        add_ln321_87_reg_3054[12 : 1] <= add_ln321_87_fu_1998_p2[12 : 1];
        img_channel_data_V_a_50_reg_3079[11 : 1] <= zext_ln321_132_fu_2021_p1[11 : 1];
        img_channel_data_V_a_51_reg_3084[11 : 1] <= zext_ln321_131_fu_2004_p1[11 : 1];
        img_channel_data_V_a_52_reg_3089[11 : 1] <= zext_ln321_133_fu_2038_p1[11 : 1];
        img_channel_data_V_a_53_reg_3094[11 : 1] <= zext_ln321_134_fu_2055_p1[11 : 1];
        img_channel_dest_V_a_51_reg_3179[11 : 1] <= zext_ln321_132_fu_2021_p1[11 : 1];
        img_channel_dest_V_a_52_reg_3184[11 : 1] <= zext_ln321_131_fu_2004_p1[11 : 1];
        img_channel_dest_V_a_53_reg_3189[11 : 1] <= zext_ln321_133_fu_2038_p1[11 : 1];
        img_channel_dest_V_a_54_reg_3194[11 : 1] <= zext_ln321_134_fu_2055_p1[11 : 1];
        img_channel_id_V_add_51_reg_3159[11 : 1] <= zext_ln321_132_fu_2021_p1[11 : 1];
        img_channel_id_V_add_52_reg_3164[11 : 1] <= zext_ln321_131_fu_2004_p1[11 : 1];
        img_channel_id_V_add_53_reg_3169[11 : 1] <= zext_ln321_133_fu_2038_p1[11 : 1];
        img_channel_id_V_add_54_reg_3174[11 : 1] <= zext_ln321_134_fu_2055_p1[11 : 1];
        img_channel_keep_V_a_51_reg_3099[11 : 1] <= zext_ln321_132_fu_2021_p1[11 : 1];
        img_channel_keep_V_a_52_reg_3104[11 : 1] <= zext_ln321_131_fu_2004_p1[11 : 1];
        img_channel_keep_V_a_53_reg_3109[11 : 1] <= zext_ln321_133_fu_2038_p1[11 : 1];
        img_channel_keep_V_a_54_reg_3114[11 : 1] <= zext_ln321_134_fu_2055_p1[11 : 1];
        img_channel_last_V_a_51_reg_3139[11 : 1] <= zext_ln321_132_fu_2021_p1[11 : 1];
        img_channel_last_V_a_52_reg_3144[11 : 1] <= zext_ln321_131_fu_2004_p1[11 : 1];
        img_channel_last_V_a_53_reg_3149[11 : 1] <= zext_ln321_133_fu_2038_p1[11 : 1];
        img_channel_last_V_a_54_reg_3154[11 : 1] <= zext_ln321_134_fu_2055_p1[11 : 1];
        img_channel_user_V_a_49_reg_3119[11 : 1] <= zext_ln321_132_fu_2021_p1[11 : 1];
        img_channel_user_V_a_50_reg_3124[11 : 1] <= zext_ln321_131_fu_2004_p1[11 : 1];
        img_channel_user_V_a_51_reg_3129[11 : 1] <= zext_ln321_133_fu_2038_p1[11 : 1];
        img_channel_user_V_a_52_reg_3134[11 : 1] <= zext_ln321_134_fu_2055_p1[11 : 1];
        img_channel_valid_V_69_reg_3059[11 : 1] <= zext_ln321_132_fu_2021_p1[11 : 1];
        img_channel_valid_V_70_reg_3064[11 : 1] <= zext_ln321_131_fu_2004_p1[11 : 1];
        img_channel_valid_V_71_reg_3069[11 : 1] <= zext_ln321_133_fu_2038_p1[11 : 1];
        img_channel_valid_V_72_reg_3074[11 : 1] <= zext_ln321_134_fu_2055_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln574_fu_2066_p2 == 1'd0))) begin
        add_ln321_91_reg_3212 <= add_ln321_91_fu_2098_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (or_ln601_reg_3006 == 1'd0))) begin
        add_ln321_95_reg_3255[11 : 1] <= add_ln321_95_fu_2179_p2[11 : 1];
        img_channel_data_V_a_55_reg_3280[11 : 1] <= zext_ln321_146_fu_2202_p1[11 : 1];
        img_channel_data_V_a_56_reg_3285[11 : 1] <= zext_ln321_145_fu_2185_p1[11 : 1];
        img_channel_data_V_a_57_reg_3290[11 : 1] <= zext_ln321_147_fu_2219_p1[11 : 1];
        img_channel_data_V_a_58_reg_3295[11 : 1] <= zext_ln321_148_fu_2236_p1[11 : 1];
        img_channel_dest_V_a_56_reg_3380[11 : 1] <= zext_ln321_146_fu_2202_p1[11 : 1];
        img_channel_dest_V_a_57_reg_3385[11 : 1] <= zext_ln321_145_fu_2185_p1[11 : 1];
        img_channel_dest_V_a_58_reg_3390[11 : 1] <= zext_ln321_147_fu_2219_p1[11 : 1];
        img_channel_dest_V_a_59_reg_3395[11 : 1] <= zext_ln321_148_fu_2236_p1[11 : 1];
        img_channel_id_V_add_56_reg_3360[11 : 1] <= zext_ln321_146_fu_2202_p1[11 : 1];
        img_channel_id_V_add_57_reg_3365[11 : 1] <= zext_ln321_145_fu_2185_p1[11 : 1];
        img_channel_id_V_add_58_reg_3370[11 : 1] <= zext_ln321_147_fu_2219_p1[11 : 1];
        img_channel_id_V_add_59_reg_3375[11 : 1] <= zext_ln321_148_fu_2236_p1[11 : 1];
        img_channel_keep_V_a_56_reg_3300[11 : 1] <= zext_ln321_146_fu_2202_p1[11 : 1];
        img_channel_keep_V_a_57_reg_3305[11 : 1] <= zext_ln321_145_fu_2185_p1[11 : 1];
        img_channel_keep_V_a_58_reg_3310[11 : 1] <= zext_ln321_147_fu_2219_p1[11 : 1];
        img_channel_keep_V_a_59_reg_3315[11 : 1] <= zext_ln321_148_fu_2236_p1[11 : 1];
        img_channel_last_V_a_56_reg_3340[11 : 1] <= zext_ln321_146_fu_2202_p1[11 : 1];
        img_channel_last_V_a_57_reg_3345[11 : 1] <= zext_ln321_145_fu_2185_p1[11 : 1];
        img_channel_last_V_a_58_reg_3350[11 : 1] <= zext_ln321_147_fu_2219_p1[11 : 1];
        img_channel_last_V_a_59_reg_3355[11 : 1] <= zext_ln321_148_fu_2236_p1[11 : 1];
        img_channel_user_V_a_54_reg_3320[11 : 1] <= zext_ln321_146_fu_2202_p1[11 : 1];
        img_channel_user_V_a_55_reg_3325[11 : 1] <= zext_ln321_145_fu_2185_p1[11 : 1];
        img_channel_user_V_a_56_reg_3330[11 : 1] <= zext_ln321_147_fu_2219_p1[11 : 1];
        img_channel_user_V_a_57_reg_3335[11 : 1] <= zext_ln321_148_fu_2236_p1[11 : 1];
        img_channel_valid_V_76_reg_3260[11 : 1] <= zext_ln321_146_fu_2202_p1[11 : 1];
        img_channel_valid_V_77_reg_3265[11 : 1] <= zext_ln321_145_fu_2185_p1[11 : 1];
        img_channel_valid_V_78_reg_3270[11 : 1] <= zext_ln321_147_fu_2219_p1[11 : 1];
        img_channel_valid_V_79_reg_3275[11 : 1] <= zext_ln321_148_fu_2236_p1[11 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln562_fu_1691_p2 == 1'd1))) begin
        and_ln620_reg_2996 <= and_ln620_fu_1739_p2;
        icmp_ln570_reg_2984 <= icmp_ln570_fu_1715_p2;
        icmp_ln582_reg_2988 <= icmp_ln582_fu_1721_p2;
        icmp_ln601_reg_2992 <= icmp_ln601_fu_1727_p2;
        or_ln601_reg_3006 <= or_ln601_fu_1779_p2;
        sext_ln321_reg_3000[12 : 2] <= sext_ln321_fu_1775_p1[12 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln638_reg_3032 == 1'd0))) begin
        current_filter_reg_3528 <= current_filter_fu_2490_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        current_input_channe_8_reg_3021 <= current_input_channe_8_fu_1817_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        current_input_channe_9_reg_3552 <= current_input_channe_9_fu_2522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln570_reg_2984 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        filter_line_reg_3039 <= filter_line_fu_1833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_2974 <= i_fu_1697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln622_reg_3418 <= icmp_ln622_fu_2336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln567_fu_1811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        icmp_ln638_reg_3032 <= grp_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln648_reg_3591 <= icmp_ln648_fu_2616_p2;
        icmp_ln648_reg_3591_pp1_iter1_reg <= icmp_ln648_reg_3591;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        index_input_element_22_reg_3673 <= index_input_element_22_fu_2828_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        index_input_element_25_reg_3645 <= index_input_element_25_fu_2782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln601_reg_2992 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        index_input_element_28_reg_3480 <= index_input_element_28_fu_2439_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        index_input_element_reg_3202 <= index_input_element_fu_2072_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state28) & (icmp_ln657_fu_2776_p2 == 1'd0))) begin
        out_layer_data_V_add_5_reg_3650 <= zext_ln1265_6_fu_2802_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln662_fu_2822_p2 == 1'd0))) begin
        out_layer_data_V_add_6_reg_3684 <= zext_ln162_5_fu_2843_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_idx_reg_2966 <= row_idx_fu_1685_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln648_fu_2616_p2 == 1'd0))) begin
        select_ln653_1_reg_3606 <= select_ln653_1_fu_2648_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        sext_ln1265_reg_3660 <= sext_ln1265_fu_2814_p1;
        sext_ln703_reg_3665 <= sext_ln703_fu_2818_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        subfilter_element_reg_3576 <= subfilter_element_fu_2556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln640_fu_2484_p2 == 1'd0) & (icmp_ln638_reg_3032 == 1'd0))) begin
        zext_ln162_reg_3538[3 : 0] <= zext_ln162_fu_2500_p1[3 : 0];
        zext_ln642_reg_3543[9 : 6] <= zext_ln642_fu_2512_p1[9 : 6];
        zext_ln646_reg_3533[3 : 0] <= zext_ln646_fu_2496_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln562_fu_1691_p2 == 1'd0))) begin
        zext_ln563_reg_2979[9 : 6] <= zext_ln563_fu_1711_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln570_reg_2984 == 1'd1) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln567_fu_1811_p2 == 1'd0))) begin
        zext_ln572_reg_3026[3 : 0] <= zext_ln572_fu_1823_p1[3 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln622_fu_2336_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state13 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state13 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln648_fu_2616_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln559_fu_1679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln648_reg_3591 == 1'd0))) begin
        ap_phi_mux_input_line_0_phi_fu_1574_p4 = select_ln653_1_reg_3606;
    end else begin
        ap_phi_mux_input_line_0_phi_fu_1574_p4 = input_line_0_reg_1570;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        biases_layer4_V_ce0 = 1'b1;
    end else begin
        biases_layer4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        channel_from_prev_ou_address0 = zext_ln203_67_fu_2772_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        channel_from_prev_ou_address0 = grp_CORRELATE_1_fu_1614_prev_output_channel_V_address0;
    end else begin
        channel_from_prev_ou_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        channel_from_prev_ou_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        channel_from_prev_ou_ce0 = grp_CORRELATE_1_fu_1614_prev_output_channel_V_ce0;
    end else begin
        channel_from_prev_ou_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln648_reg_3591_pp1_iter1_reg == 1'd0))) begin
        channel_from_prev_ou_we0 = 1'b1;
    end else begin
        channel_from_prev_ou_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_data_V_blk_n = corr3_out_V_data_V_empty_n;
    end else begin
        corr3_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_data_V_read = 1'b1;
    end else begin
        corr3_out_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_dest_V_blk_n = corr3_out_V_dest_V_empty_n;
    end else begin
        corr3_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_dest_V_read = 1'b1;
    end else begin
        corr3_out_V_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_id_V_blk_n = corr3_out_V_id_V_empty_n;
    end else begin
        corr3_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_id_V_read = 1'b1;
    end else begin
        corr3_out_V_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_keep_V_blk_n = corr3_out_V_keep_V_empty_n;
    end else begin
        corr3_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_keep_V_read = 1'b1;
    end else begin
        corr3_out_V_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_last_V_blk_n = corr3_out_V_last_V_empty_n;
    end else begin
        corr3_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_last_V_read = 1'b1;
    end else begin
        corr3_out_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_user_V_blk_n = corr3_out_V_user_V_empty_n;
    end else begin
        corr3_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_user_V_read = 1'b1;
    end else begin
        corr3_out_V_user_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_valid_V_blk_n = corr3_out_V_valid_V_empty_n;
    end else begin
        corr3_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        corr3_out_V_valid_V_read = 1'b1;
    end else begin
        corr3_out_V_valid_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        corr4_out_V_data_V_blk_n = corr4_out_V_data_V_full_n;
    end else begin
        corr4_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        corr4_out_V_data_V_write = 1'b1;
    end else begin
        corr4_out_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        corr4_out_V_dest_V_blk_n = corr4_out_V_dest_V_full_n;
    end else begin
        corr4_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        corr4_out_V_dest_V_write = 1'b1;
    end else begin
        corr4_out_V_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        corr4_out_V_id_V_blk_n = corr4_out_V_id_V_full_n;
    end else begin
        corr4_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        corr4_out_V_id_V_write = 1'b1;
    end else begin
        corr4_out_V_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        corr4_out_V_keep_V_blk_n = corr4_out_V_keep_V_full_n;
    end else begin
        corr4_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        corr4_out_V_keep_V_write = 1'b1;
    end else begin
        corr4_out_V_keep_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        corr4_out_V_last_V_blk_n = corr4_out_V_last_V_full_n;
    end else begin
        corr4_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        corr4_out_V_last_V_write = 1'b1;
    end else begin
        corr4_out_V_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        corr4_out_V_user_V_blk_n = corr4_out_V_user_V_full_n;
    end else begin
        corr4_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        corr4_out_V_user_V_write = 1'b1;
    end else begin
        corr4_out_V_user_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        corr4_out_V_valid_V_blk_n = corr4_out_V_valid_V_full_n;
    end else begin
        corr4_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        corr4_out_V_valid_V_write = 1'b1;
    end else begin
        corr4_out_V_valid_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        correlate_img_address0 = zext_ln659_fu_2788_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        correlate_img_address0 = grp_CORRELATE_1_fu_1614_correlate_img_V_address0;
    end else begin
        correlate_img_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        correlate_img_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        correlate_img_ce0 = grp_CORRELATE_1_fu_1614_correlate_img_V_ce0;
    end else begin
        correlate_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        correlate_img_we0 = grp_CORRELATE_1_fu_1614_correlate_img_V_we0;
    end else begin
        correlate_img_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        img_channel_data_V_address0 = zext_ln203_66_fu_2761_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_data_V_address0 = zext_ln321_157_fu_2377_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_data_V_address0 = img_channel_data_V_a_58_reg_3295;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        img_channel_data_V_address0 = img_channel_data_V_a_57_reg_3290;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_data_V_address0 = img_channel_data_V_a_53_reg_3094;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
        img_channel_data_V_address0 = img_channel_data_V_a_50_reg_3079;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_data_V_address0 = zext_ln321_141_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img_channel_data_V_address0 = zext_ln321_137_fu_2103_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        img_channel_data_V_address0 = zext_ln321_136_fu_2087_p1;
    end else begin
        img_channel_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_data_V_address1 = zext_ln321_164_fu_2474_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        img_channel_data_V_address1 = zext_ln321_163_fu_2458_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_data_V_address1 = zext_ln321_156_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_data_V_address1 = img_channel_data_V_a_56_reg_3285;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
        img_channel_data_V_address1 = img_channel_data_V_a_55_reg_3280;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_data_V_address1 = zext_ln321_150_fu_2262_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_data_V_address1 = img_channel_data_V_a_51_reg_3084;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        img_channel_data_V_address1 = img_channel_data_V_a_52_reg_3089;
    end else begin
        img_channel_data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_data_V_ce0 = 1'b1;
    end else begin
        img_channel_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        img_channel_data_V_ce1 = 1'b1;
    end else begin
        img_channel_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_data_V_d0 = img_channel_data_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_data_V_d0 = corr3_out_V_data_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_data_V_d0 = img_channel_data_V_q0;
    end else begin
        img_channel_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_data_V_d1 = img_channel_data_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_data_V_d1 = corr3_out_V_data_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_data_V_d1 = img_channel_data_V_q0;
    end else begin
        img_channel_data_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_reg_3418 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_data_V_we0 = 1'b1;
    end else begin
        img_channel_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)))) begin
        img_channel_data_V_we1 = 1'b1;
    end else begin
        img_channel_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        img_channel_dest_V_address0 = zext_ln321_139_fu_2884_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_dest_V_address0 = zext_ln321_157_fu_2377_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_dest_V_address0 = img_channel_dest_V_a_59_reg_3395;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        img_channel_dest_V_address0 = img_channel_dest_V_a_58_reg_3390;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_dest_V_address0 = img_channel_dest_V_a_54_reg_3194;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
        img_channel_dest_V_address0 = img_channel_dest_V_a_51_reg_3179;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_dest_V_address0 = zext_ln321_141_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img_channel_dest_V_address0 = zext_ln321_137_fu_2103_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        img_channel_dest_V_address0 = zext_ln321_136_fu_2087_p1;
    end else begin
        img_channel_dest_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_dest_V_address1 = zext_ln321_164_fu_2474_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        img_channel_dest_V_address1 = zext_ln321_163_fu_2458_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_dest_V_address1 = zext_ln321_156_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_dest_V_address1 = img_channel_dest_V_a_57_reg_3385;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
        img_channel_dest_V_address1 = img_channel_dest_V_a_56_reg_3380;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_dest_V_address1 = zext_ln321_150_fu_2262_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_dest_V_address1 = img_channel_dest_V_a_52_reg_3184;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        img_channel_dest_V_address1 = img_channel_dest_V_a_53_reg_3189;
    end else begin
        img_channel_dest_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_dest_V_ce0 = 1'b1;
    end else begin
        img_channel_dest_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        img_channel_dest_V_ce1 = 1'b1;
    end else begin
        img_channel_dest_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_dest_V_d0 = img_channel_dest_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_dest_V_d0 = corr3_out_V_dest_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_dest_V_d0 = img_channel_dest_V_q0;
    end else begin
        img_channel_dest_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_dest_V_d1 = img_channel_dest_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_dest_V_d1 = corr3_out_V_dest_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_dest_V_d1 = img_channel_dest_V_q0;
    end else begin
        img_channel_dest_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_reg_3418 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_dest_V_we0 = 1'b1;
    end else begin
        img_channel_dest_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)))) begin
        img_channel_dest_V_we1 = 1'b1;
    end else begin
        img_channel_dest_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        img_channel_id_V_address0 = zext_ln321_139_fu_2884_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_id_V_address0 = zext_ln321_157_fu_2377_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_id_V_address0 = img_channel_id_V_add_59_reg_3375;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        img_channel_id_V_address0 = img_channel_id_V_add_58_reg_3370;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_id_V_address0 = img_channel_id_V_add_54_reg_3174;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
        img_channel_id_V_address0 = img_channel_id_V_add_51_reg_3159;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_id_V_address0 = zext_ln321_141_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img_channel_id_V_address0 = zext_ln321_137_fu_2103_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        img_channel_id_V_address0 = zext_ln321_136_fu_2087_p1;
    end else begin
        img_channel_id_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_id_V_address1 = zext_ln321_164_fu_2474_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        img_channel_id_V_address1 = zext_ln321_163_fu_2458_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_id_V_address1 = zext_ln321_156_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_id_V_address1 = img_channel_id_V_add_57_reg_3365;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
        img_channel_id_V_address1 = img_channel_id_V_add_56_reg_3360;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_id_V_address1 = zext_ln321_150_fu_2262_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_id_V_address1 = img_channel_id_V_add_52_reg_3164;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        img_channel_id_V_address1 = img_channel_id_V_add_53_reg_3169;
    end else begin
        img_channel_id_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_id_V_ce0 = 1'b1;
    end else begin
        img_channel_id_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        img_channel_id_V_ce1 = 1'b1;
    end else begin
        img_channel_id_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_id_V_d0 = img_channel_id_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_id_V_d0 = corr3_out_V_id_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_id_V_d0 = img_channel_id_V_q0;
    end else begin
        img_channel_id_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_id_V_d1 = img_channel_id_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_id_V_d1 = corr3_out_V_id_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_id_V_d1 = img_channel_id_V_q0;
    end else begin
        img_channel_id_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_reg_3418 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_id_V_we0 = 1'b1;
    end else begin
        img_channel_id_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)))) begin
        img_channel_id_V_we1 = 1'b1;
    end else begin
        img_channel_id_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        img_channel_keep_V_address0 = zext_ln321_139_fu_2884_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_keep_V_address0 = zext_ln321_157_fu_2377_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_keep_V_address0 = img_channel_keep_V_a_59_reg_3315;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        img_channel_keep_V_address0 = img_channel_keep_V_a_58_reg_3310;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_keep_V_address0 = img_channel_keep_V_a_54_reg_3114;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
        img_channel_keep_V_address0 = img_channel_keep_V_a_51_reg_3099;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_keep_V_address0 = zext_ln321_141_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img_channel_keep_V_address0 = zext_ln321_137_fu_2103_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        img_channel_keep_V_address0 = zext_ln321_136_fu_2087_p1;
    end else begin
        img_channel_keep_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_keep_V_address1 = zext_ln321_164_fu_2474_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        img_channel_keep_V_address1 = zext_ln321_163_fu_2458_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_keep_V_address1 = zext_ln321_156_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_keep_V_address1 = img_channel_keep_V_a_57_reg_3305;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
        img_channel_keep_V_address1 = img_channel_keep_V_a_56_reg_3300;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_keep_V_address1 = zext_ln321_150_fu_2262_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_keep_V_address1 = img_channel_keep_V_a_52_reg_3104;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        img_channel_keep_V_address1 = img_channel_keep_V_a_53_reg_3109;
    end else begin
        img_channel_keep_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_keep_V_ce0 = 1'b1;
    end else begin
        img_channel_keep_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        img_channel_keep_V_ce1 = 1'b1;
    end else begin
        img_channel_keep_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_keep_V_d0 = img_channel_keep_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_keep_V_d0 = corr3_out_V_keep_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_keep_V_d0 = img_channel_keep_V_q0;
    end else begin
        img_channel_keep_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_keep_V_d1 = img_channel_keep_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_keep_V_d1 = corr3_out_V_keep_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_keep_V_d1 = img_channel_keep_V_q0;
    end else begin
        img_channel_keep_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_reg_3418 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_keep_V_we0 = 1'b1;
    end else begin
        img_channel_keep_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)))) begin
        img_channel_keep_V_we1 = 1'b1;
    end else begin
        img_channel_keep_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        img_channel_last_V_address0 = zext_ln321_139_fu_2884_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_last_V_address0 = zext_ln321_157_fu_2377_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_last_V_address0 = img_channel_last_V_a_59_reg_3355;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        img_channel_last_V_address0 = img_channel_last_V_a_58_reg_3350;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_last_V_address0 = img_channel_last_V_a_54_reg_3154;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
        img_channel_last_V_address0 = img_channel_last_V_a_51_reg_3139;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_last_V_address0 = zext_ln321_141_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img_channel_last_V_address0 = zext_ln321_137_fu_2103_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        img_channel_last_V_address0 = zext_ln321_136_fu_2087_p1;
    end else begin
        img_channel_last_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_last_V_address1 = zext_ln321_164_fu_2474_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        img_channel_last_V_address1 = zext_ln321_163_fu_2458_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_last_V_address1 = zext_ln321_156_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_last_V_address1 = img_channel_last_V_a_57_reg_3345;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
        img_channel_last_V_address1 = img_channel_last_V_a_56_reg_3340;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_last_V_address1 = zext_ln321_150_fu_2262_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_last_V_address1 = img_channel_last_V_a_52_reg_3144;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        img_channel_last_V_address1 = img_channel_last_V_a_53_reg_3149;
    end else begin
        img_channel_last_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_last_V_ce0 = 1'b1;
    end else begin
        img_channel_last_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        img_channel_last_V_ce1 = 1'b1;
    end else begin
        img_channel_last_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_last_V_d0 = img_channel_last_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_last_V_d0 = corr3_out_V_last_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_last_V_d0 = img_channel_last_V_q0;
    end else begin
        img_channel_last_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_last_V_d1 = img_channel_last_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_last_V_d1 = corr3_out_V_last_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_last_V_d1 = img_channel_last_V_q0;
    end else begin
        img_channel_last_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_reg_3418 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_last_V_we0 = 1'b1;
    end else begin
        img_channel_last_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)))) begin
        img_channel_last_V_we1 = 1'b1;
    end else begin
        img_channel_last_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        img_channel_user_V_address0 = zext_ln321_139_fu_2884_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_user_V_address0 = zext_ln321_157_fu_2377_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_user_V_address0 = img_channel_user_V_a_57_reg_3335;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        img_channel_user_V_address0 = img_channel_user_V_a_56_reg_3330;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_user_V_address0 = img_channel_user_V_a_52_reg_3134;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
        img_channel_user_V_address0 = img_channel_user_V_a_49_reg_3119;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_user_V_address0 = zext_ln321_141_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img_channel_user_V_address0 = zext_ln321_137_fu_2103_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        img_channel_user_V_address0 = zext_ln321_136_fu_2087_p1;
    end else begin
        img_channel_user_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_user_V_address1 = zext_ln321_164_fu_2474_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        img_channel_user_V_address1 = zext_ln321_163_fu_2458_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_user_V_address1 = zext_ln321_156_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_user_V_address1 = img_channel_user_V_a_55_reg_3325;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
        img_channel_user_V_address1 = img_channel_user_V_a_54_reg_3320;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_user_V_address1 = zext_ln321_150_fu_2262_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_user_V_address1 = img_channel_user_V_a_50_reg_3124;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        img_channel_user_V_address1 = img_channel_user_V_a_51_reg_3129;
    end else begin
        img_channel_user_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_user_V_ce0 = 1'b1;
    end else begin
        img_channel_user_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        img_channel_user_V_ce1 = 1'b1;
    end else begin
        img_channel_user_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_user_V_d0 = img_channel_user_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_user_V_d0 = corr3_out_V_user_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_user_V_d0 = img_channel_user_V_q0;
    end else begin
        img_channel_user_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_user_V_d1 = img_channel_user_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_user_V_d1 = corr3_out_V_user_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_user_V_d1 = img_channel_user_V_q0;
    end else begin
        img_channel_user_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_reg_3418 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_user_V_we0 = 1'b1;
    end else begin
        img_channel_user_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)))) begin
        img_channel_user_V_we1 = 1'b1;
    end else begin
        img_channel_user_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_valid_V_address0 = zext_ln321_157_fu_2377_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_valid_V_address0 = img_channel_valid_V_79_reg_3275;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        img_channel_valid_V_address0 = img_channel_valid_V_78_reg_3270;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_valid_V_address0 = img_channel_valid_V_72_reg_3074;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
        img_channel_valid_V_address0 = img_channel_valid_V_69_reg_3059;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_valid_V_address0 = zext_ln321_141_fu_2128_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        img_channel_valid_V_address0 = zext_ln321_137_fu_2103_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        img_channel_valid_V_address0 = zext_ln321_136_fu_2087_p1;
    end else begin
        img_channel_valid_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        img_channel_valid_V_address1 = zext_ln321_164_fu_2474_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        img_channel_valid_V_address1 = zext_ln321_163_fu_2458_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        img_channel_valid_V_address1 = zext_ln321_156_fu_2361_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_channel_valid_V_address1 = img_channel_valid_V_77_reg_3265;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
        img_channel_valid_V_address1 = img_channel_valid_V_76_reg_3260;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_valid_V_address1 = zext_ln321_150_fu_2262_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_valid_V_address1 = img_channel_valid_V_70_reg_3064;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        img_channel_valid_V_address1 = img_channel_valid_V_71_reg_3069;
    end else begin
        img_channel_valid_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state7) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_valid_V_ce0 = 1'b1;
    end else begin
        img_channel_valid_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        img_channel_valid_V_ce1 = 1'b1;
    end else begin
        img_channel_valid_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        img_channel_valid_V_d0 = img_channel_valid_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
        img_channel_valid_V_d0 = corr3_out_V_valid_V_dout;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_valid_V_d0 = img_channel_valid_V_q0;
    end else begin
        img_channel_valid_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state12))) begin
        img_channel_valid_V_d1 = img_channel_valid_V_q1;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
        img_channel_valid_V_d1 = corr3_out_V_valid_V_dout;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_valid_V_d1 = img_channel_valid_V_q0;
    end else begin
        img_channel_valid_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln622_reg_3418 == 1'd0)) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0)))) begin
        img_channel_valid_V_we0 = 1'b1;
    end else begin
        img_channel_valid_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state12) & (or_ln601_reg_3006 == 1'd0)) | ((icmp_ln582_reg_2988 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | (~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0)))) begin
        img_channel_valid_V_we1 = 1'b1;
    end else begin
        img_channel_valid_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln559_fu_1679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        out_layer_data_V_address0 = out_layer_data_V_add_6_reg_3684;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        out_layer_data_V_address0 = zext_ln162_5_fu_2843_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        out_layer_data_V_address0 = out_layer_data_V_add_5_reg_3650;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        out_layer_data_V_address0 = zext_ln1265_6_fu_2802_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_address0 = zext_ln203_54_fu_1806_p1;
    end else begin
        out_layer_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4) | ((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33)))) begin
        out_layer_data_V_ce0 = 1'b1;
    end else begin
        out_layer_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        out_layer_data_V_d0 = {{ret_V_fu_2945_p2[15:4]}};
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        out_layer_data_V_d0 = add_ln703_fu_2807_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_d0 = 12'd0;
    end else begin
        out_layer_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln563_fu_1785_p2 == 1'd0)) | ((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33)))) begin
        out_layer_data_V_we0 = 1'b1;
    end else begin
        out_layer_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        out_layer_valid_V_ce0 = 1'b1;
    end else begin
        out_layer_valid_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        subfilter_layer_V_address0 = zext_ln646_1_fu_2606_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        subfilter_layer_V_address0 = grp_CORRELATE_1_fu_1614_filter_V_address0;
    end else begin
        subfilter_layer_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        subfilter_layer_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        subfilter_layer_V_ce0 = grp_CORRELATE_1_fu_1614_filter_V_ce0;
    end else begin
        subfilter_layer_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        subfilter_layer_V_we0 = 1'b1;
    end else begin
        subfilter_layer_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        weights_layer4_V_ce0 = 1'b1;
    end else begin
        weights_layer4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln559_fu_1679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln562_fu_1691_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln563_fu_1785_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln567_fu_1811_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln582_reg_2988 == 1'd1) & (icmp_ln570_reg_2984 == 1'd0)) | ((icmp_ln572_fu_1827_p2 == 1'd1) & (icmp_ln582_reg_2988 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((1'b1 == ap_CS_fsm_state6) & (((icmp_ln582_reg_2988 == 1'd0) & (icmp_ln570_reg_2984 == 1'd0)) | ((icmp_ln572_fu_1827_p2 == 1'd1) & (icmp_ln582_reg_2988 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln574_fu_2066_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            if ((~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if ((~((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln585_fu_2113_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (or_ln601_reg_3006 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if ((~((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln604_fu_2247_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'd1 == and_ln620_reg_2996) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln622_fu_2336_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln622_fu_2336_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln631_fu_2433_p2 == 1'd1) | (icmp_ln601_reg_2992 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & ((icmp_ln640_fu_2484_p2 == 1'd1) | (icmp_ln638_reg_3032 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln642_fu_2516_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln644_fu_2550_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln648_fu_2616_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln648_fu_2616_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_CORRELATE_1_fu_1614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln657_fu_2776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln662_fu_2822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((io_acc_block_signal_op714 == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1265_fu_2797_p2 = (zext_ln642_reg_3543 + zext_ln1265_fu_2793_p1);

assign add_ln162_fu_2838_p2 = (zext_ln162_4_fu_2834_p1 + zext_ln642_reg_3543);

assign add_ln203_32_fu_1801_p2 = (zext_ln563_reg_2979 + zext_ln203_fu_1797_p1);

assign add_ln203_33_fu_2544_p2 = (zext_ln203_55_fu_2528_p1 + zext_ln203_56_fu_2540_p1);

assign add_ln203_34_fu_2566_p2 = (zext_ln203_57_fu_2562_p1 + add_ln203_33_reg_3562);

assign add_ln203_35_fu_2597_p2 = (zext_ln162_reg_3538 + sub_ln203_fu_2591_p2);

assign add_ln203_36_fu_2690_p2 = ($signed(sext_ln203_8_fu_2686_p1) + $signed(zext_ln203_55_reg_3557));

assign add_ln203_37_fu_2726_p2 = ($signed(sext_ln203_9_fu_2722_p1) + $signed(p_shl39_cast_fu_2708_p3));

assign add_ln203_38_fu_2743_p2 = (zext_ln203_61_fu_2705_p1 + zext_ln203_63_fu_2739_p1);

assign add_ln203_39_fu_2755_p2 = (add_ln203_37_fu_2726_p2 + zext_ln203_65_fu_2752_p1);

assign add_ln203_40_fu_2766_p2 = (add_ln203_38_fu_2743_p2 + zext_ln203_64_fu_2749_p1);

assign add_ln203_fu_2858_p2 = ($signed(trunc_ln703_fu_2849_p1) + $signed(sext_ln703_reg_3665));

assign add_ln321_100_fu_2307_p2 = (zext_ln321_152_fu_2291_p1 + zext_ln321_153_fu_2303_p1);

assign add_ln321_101_fu_2313_p2 = ($signed(zext_ln321_151_fu_2279_p1) + $signed(sext_ln321_reg_3000));

assign add_ln321_102_fu_2330_p2 = (shl_ln321_8_fu_2318_p2 + shl_ln321_9_fu_2324_p2);

assign add_ln321_103_fu_2356_p2 = (add_ln321_100_reg_3408 + zext_ln321_155_fu_2352_p1);

assign add_ln321_104_fu_2372_p2 = (add_ln321_102_reg_3413 + zext_ln321_154_fu_2348_p1);

assign add_ln321_105_fu_2411_p2 = (zext_ln321_159_fu_2407_p1 + zext_ln321_158_fu_2395_p1);

assign add_ln321_106_fu_2421_p2 = (add_ln321_105_fu_2411_p2 + 11'd792);

assign add_ln321_107_fu_2427_p2 = (zext_ln321_160_fu_2417_p1 + 12'd1584);

assign add_ln321_108_fu_2453_p2 = (add_ln321_106_reg_3467 + zext_ln321_162_fu_2449_p1);

assign add_ln321_109_fu_2469_p2 = (add_ln321_107_reg_3472 + zext_ln321_161_fu_2445_p1);

assign add_ln321_83_fu_1902_p2 = ($signed(sext_ln321_17_fu_1898_p1) + $signed(p_shl_cast_fu_1882_p3));

assign add_ln321_84_fu_1942_p2 = ($signed(sext_ln321_18_fu_1938_p1) + $signed(zext_ln572_reg_3026));

assign add_ln321_85_fu_1971_p2 = ($signed(sext_ln321_19_fu_1967_p1) + $signed(p_shl33_cast_fu_1951_p3));

assign add_ln321_86_fu_1981_p2 = ($signed(zext_ln321_130_fu_1977_p1) + $signed(sext_ln321_reg_3000));

assign add_ln321_87_fu_1998_p2 = (shl_ln321_fu_1986_p2 + shl_ln321_7_fu_1992_p2);

assign add_ln321_88_fu_2032_p2 = (13'd64 + add_ln321_87_fu_1998_p2);

assign add_ln321_89_fu_2049_p2 = (13'd65 + add_ln321_87_fu_1998_p2);

assign add_ln321_90_fu_2082_p2 = (add_ln321_85_reg_3049 + zext_ln321_135_fu_2078_p1);

assign add_ln321_91_fu_2098_p2 = (add_ln321_83_reg_3044 + zext_ln321_135_fu_2078_p1);

assign add_ln321_92_fu_2874_p2 = ($signed(9'd280) + $signed(zext_ln321_138_fu_2871_p1));

assign add_ln321_93_fu_2123_p2 = (add_ln321_87_reg_3054 + zext_ln321_140_fu_2119_p1);

assign add_ln321_94_fu_2169_p2 = (zext_ln321_143_fu_2165_p1 + zext_ln321_142_fu_2153_p1);

assign add_ln321_95_fu_2179_p2 = (zext_ln321_144_fu_2175_p1 + 12'd1584);

assign add_ln321_96_fu_2196_p2 = (zext_ln321_144_fu_2175_p1 + 12'd1585);

assign add_ln321_97_fu_2213_p2 = (zext_ln321_144_fu_2175_p1 + 12'd1648);

assign add_ln321_98_fu_2230_p2 = (zext_ln321_144_fu_2175_p1 + 12'd1649);

assign add_ln321_99_fu_2257_p2 = (add_ln321_95_reg_3255 + zext_ln321_149_fu_2253_p1);

assign add_ln321_fu_1873_p2 = ($signed(sext_ln321_16_fu_1869_p1) + $signed(zext_ln572_reg_3026));

assign add_ln648_fu_2622_p2 = (indvar_flatten_reg_1559 + 8'd1);

assign add_ln703_fu_2807_p2 = (correlate_img_q0 + out_layer_data_V_q0);

assign and_ln620_fu_1739_p2 = (icmp_ln620_fu_1733_p2 & grp_fu_1631_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state11 = ((io_acc_block_signal_op367 == 1'b0) & (icmp_ln604_fu_2247_p2 == 1'd0));
end

assign ap_block_state13_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9 = ((io_acc_block_signal_op249 == 1'b0) & (icmp_ln585_fu_2113_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign aux_sum_V_fu_2853_p2 = ($signed(out_layer_data_V_q0) + $signed(sext_ln1265_reg_3660));

assign biases_layer4_V_address0 = zext_ln646_reg_3533;

assign corr4_out_V_data_V_din = {{ret_V_fu_2945_p2[15:4]}};

assign corr4_out_V_dest_V_din = img_channel_dest_V_q0;

assign corr4_out_V_id_V_din = img_channel_id_V_q0;

assign corr4_out_V_keep_V_din = img_channel_keep_V_q0;

assign corr4_out_V_last_V_din = img_channel_last_V_q0;

assign corr4_out_V_user_V_din = img_channel_user_V_q0;

assign corr4_out_V_valid_V_din = tmp_valid_V_reg_3730;

assign current_filter_fu_2490_p2 = (current_filter_0_reg_1525 + 4'd1);

assign current_input_channe_8_fu_1817_p2 = (current_input_channe_reg_1447 + 4'd1);

assign current_input_channe_9_fu_2522_p2 = (current_input_channe_13_reg_1536 + 4'd1);

assign filter_line_fu_1833_p2 = (filter_line_0_reg_1459 + 2'd1);

assign grp_CORRELATE_1_fu_1614_ap_start = grp_CORRELATE_1_fu_1614_ap_start_reg;

assign grp_fu_1621_p4 = {{row_idx_0_reg_1413[6:1]}};

assign grp_fu_1631_p2 = ((grp_fu_1621_p4 == 6'd0) ? 1'b1 : 1'b0);

assign i_fu_1697_p2 = (i_0_reg_1425 + 4'd1);

assign icmp_ln1494_fu_2893_p2 = (($signed(aux_sum_V_reg_3689) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln559_fu_1679_p2 = ((row_idx_0_reg_1413 == 7'd66) ? 1'b1 : 1'b0);

assign icmp_ln562_fu_1691_p2 = ((i_0_reg_1425 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln563_fu_1785_p2 = ((j_0_reg_1436 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln567_fu_1811_p2 = ((current_input_channe_reg_1447 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_1715_p2 = ((row_idx_0_reg_1413 > 7'd2) ? 1'b1 : 1'b0);

assign icmp_ln572_fu_1827_p2 = ((filter_line_0_reg_1459 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_2066_p2 = ((index_input_element_s_reg_1470 == 7'd66) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1721_p2 = ((row_idx_0_reg_1413 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_2113_p2 = ((index_input_element1_reg_1481 == 7'd65) ? 1'b1 : 1'b0);

assign icmp_ln601_fu_1727_p2 = ((row_idx_0_reg_1413 > 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln604_fu_2247_p2 = ((index_input_element2_reg_1492 == 7'd65) ? 1'b1 : 1'b0);

assign icmp_ln620_fu_1733_p2 = ((row_idx_0_reg_1413 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln622_fu_2336_p2 = ((index_input_element2_14_reg_1503 == 7'd66) ? 1'b1 : 1'b0);

assign icmp_ln631_fu_2433_p2 = ((index_input_element2_15_reg_1514 == 7'd66) ? 1'b1 : 1'b0);

assign icmp_ln640_fu_2484_p2 = ((current_filter_0_reg_1525 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln642_fu_2516_p2 = ((current_input_channe_13_reg_1536 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln644_fu_2550_p2 = ((subfilter_element_0_reg_1547 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln648_fu_2616_p2 = ((indvar_flatten_reg_1559 == 8'd198) ? 1'b1 : 1'b0);

assign icmp_ln650_fu_2634_p2 = ((index_input_element2_16_reg_1581 == 7'd66) ? 1'b1 : 1'b0);

assign icmp_ln657_fu_2776_p2 = ((index_input_element2_17_reg_1592 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln662_fu_2822_p2 = ((index_input_element2_18_reg_1603 == 7'd64) ? 1'b1 : 1'b0);

assign index_input_element_22_fu_2828_p2 = (index_input_element2_18_reg_1603 + 7'd1);

assign index_input_element_23_fu_2139_p2 = (index_input_element1_reg_1481 + 7'd1);

assign index_input_element_24_fu_2699_p2 = (7'd1 + select_ln653_fu_2640_p3);

assign index_input_element_25_fu_2782_p2 = (index_input_element2_17_reg_1592 + 7'd1);

assign index_input_element_26_fu_2273_p2 = (index_input_element2_reg_1492 + 7'd1);

assign index_input_element_27_fu_2342_p2 = (index_input_element2_14_reg_1503 + 7'd1);

assign index_input_element_28_fu_2439_p2 = (index_input_element2_15_reg_1514 + 7'd1);

assign index_input_element_fu_2072_p2 = (index_input_element_s_reg_1470 + 7'd1);

assign input_line_fu_2628_p2 = (2'd1 + ap_phi_mux_input_line_0_phi_fu_1574_p4);

assign io_acc_block_signal_op249 = (corr3_out_V_valid_V_empty_n & corr3_out_V_user_V_empty_n & corr3_out_V_last_V_empty_n & corr3_out_V_keep_V_empty_n & corr3_out_V_id_V_empty_n & corr3_out_V_dest_V_empty_n & corr3_out_V_data_V_empty_n);

assign io_acc_block_signal_op367 = (corr3_out_V_valid_V_empty_n & corr3_out_V_user_V_empty_n & corr3_out_V_last_V_empty_n & corr3_out_V_keep_V_empty_n & corr3_out_V_id_V_empty_n & corr3_out_V_dest_V_empty_n & corr3_out_V_data_V_empty_n);

assign io_acc_block_signal_op714 = (corr4_out_V_valid_V_full_n & corr4_out_V_user_V_full_n & corr4_out_V_last_V_full_n & corr4_out_V_keep_V_full_n & corr4_out_V_id_V_full_n & corr4_out_V_dest_V_full_n & corr4_out_V_data_V_full_n);

assign j_fu_1791_p2 = (j_0_reg_1436 + 7'd1);

assign lhs_V_fu_2929_p3 = {{select_ln14_fu_2922_p3}, {4'd0}};

assign or_ln321_fu_2015_p2 = (13'd1 | add_ln321_87_fu_1998_p2);

assign or_ln601_fu_1779_p2 = (icmp_ln601_fu_1727_p2 | grp_fu_1631_p2);

assign out_layer_valid_V_address0 = zext_ln162_5_fu_2843_p1;

assign p_shl33_cast_fu_1951_p3 = {{trunc_ln321_6_fu_1947_p1}, {6'd0}};

assign p_shl37_cast_fu_2571_p3 = {{add_ln203_34_fu_2566_p2}, {4'd0}};

assign p_shl39_cast_fu_2708_p3 = {{trunc_ln203_reg_3622}, {6'd0}};

assign p_shl_cast_fu_1882_p3 = {{trunc_ln321_fu_1878_p1}, {6'd0}};

assign r_V_fu_2916_p2 = ($signed(shl_ln_fu_2908_p3) - $signed(sext_ln1118_fu_2904_p1));

assign ret_V_fu_2945_p2 = ($signed(zext_ln728_fu_2937_p1) + $signed(sext_ln1192_fu_2941_p1));

assign row_idx_fu_1685_p2 = (row_idx_0_reg_1413 + 7'd1);

assign select_ln14_fu_2922_p3 = ((icmp_ln1494_fu_2893_p2[0:0] === 1'b1) ? add_ln203_reg_3695 : 11'd0);

assign select_ln653_1_fu_2648_p3 = ((icmp_ln650_fu_2634_p2[0:0] === 1'b1) ? input_line_fu_2628_p2 : ap_phi_mux_input_line_0_phi_fu_1574_p4);

assign select_ln653_fu_2640_p3 = ((icmp_ln650_fu_2634_p2[0:0] === 1'b1) ? 7'd0 : index_input_element2_16_reg_1581);

assign select_ln7_fu_2898_p3 = ((tmp_53_reg_3700[0:0] === 1'b1) ? aux_sum_V_reg_3689 : 12'd0);

assign sext_ln1118_fu_2904_p1 = select_ln7_fu_2898_p3;

assign sext_ln1192_fu_2941_p1 = $signed(r_V_fu_2916_p2);

assign sext_ln1265_fu_2814_p0 = biases_layer4_V_q0;

assign sext_ln1265_fu_2814_p1 = sext_ln1265_fu_2814_p0;

assign sext_ln203_8_fu_2686_p1 = $signed(sub_ln203_4_fu_2680_p2);

assign sext_ln203_9_fu_2722_p1 = $signed(tmp_55_fu_2715_p3);

assign sext_ln321_16_fu_1869_p1 = $signed(sub_ln321_7_fu_1863_p2);

assign sext_ln321_17_fu_1898_p1 = $signed(tmp_51_fu_1890_p3);

assign sext_ln321_18_fu_1938_p1 = $signed(sub_ln321_8_fu_1932_p2);

assign sext_ln321_19_fu_1967_p1 = $signed(tmp_52_fu_1959_p3);

assign sext_ln321_20_fu_2880_p1 = $signed(add_ln321_92_fu_2874_p2);

assign sext_ln321_fu_1775_p1 = $signed(sub_ln321_fu_1769_p2);

assign sext_ln703_fu_2818_p0 = biases_layer4_V_q0;

assign sext_ln703_fu_2818_p1 = sext_ln703_fu_2818_p0;

assign shl_ln321_7_fu_1992_p2 = add_ln321_86_fu_1981_p2 << 13'd1;

assign shl_ln321_8_fu_2318_p2 = add_ln321_101_fu_2313_p2 << 13'd6;

assign shl_ln321_9_fu_2324_p2 = add_ln321_101_fu_2313_p2 << 13'd1;

assign shl_ln321_fu_1986_p2 = add_ln321_86_fu_1981_p2 << 13'd6;

assign shl_ln_fu_2908_p3 = {{select_ln7_fu_2898_p3}, {2'd0}};

assign start_out = real_start;

assign sub_ln203_4_fu_2680_p2 = (zext_ln203_60_fu_2664_p1 - zext_ln203_62_fu_2676_p1);

assign sub_ln203_fu_2591_p2 = (p_shl37_cast_fu_2571_p3 - zext_ln203_58_fu_2587_p1);

assign sub_ln321_7_fu_1863_p2 = (zext_ln321_126_fu_1847_p1 - zext_ln321_127_fu_1859_p1);

assign sub_ln321_8_fu_1932_p2 = (zext_ln321_128_fu_1916_p1 - zext_ln321_129_fu_1928_p1);

assign sub_ln321_fu_1769_p2 = (zext_ln321_fu_1753_p1 - zext_ln321_125_fu_1765_p1);

assign subfilter_element_fu_2556_p2 = (subfilter_element_0_reg_1547 + 4'd1);

assign subfilter_layer_V_d0 = $signed(weights_layer4_V_q0);

assign tmp_51_fu_1890_p3 = {{add_ln321_fu_1873_p2}, {1'd0}};

assign tmp_52_fu_1959_p3 = {{add_ln321_84_fu_1942_p2}, {1'd0}};

assign tmp_54_fu_2579_p3 = {{add_ln203_34_fu_2566_p2}, {2'd0}};

assign tmp_55_fu_2715_p3 = {{add_ln203_36_reg_3617}, {1'd0}};

assign tmp_76_fu_1745_p3 = {{row_idx_0_reg_1413}, {4'd0}};

assign tmp_77_fu_1757_p3 = {{row_idx_0_reg_1413}, {2'd0}};

assign tmp_78_fu_1703_p3 = {{i_0_reg_1425}, {6'd0}};

assign tmp_79_fu_2504_p3 = {{current_filter_0_reg_1525}, {6'd0}};

assign tmp_80_fu_1839_p3 = {{filter_line_0_reg_1459}, {4'd0}};

assign tmp_81_fu_1851_p3 = {{filter_line_0_reg_1459}, {2'd0}};

assign tmp_82_fu_1908_p3 = {{filter_line_fu_1833_p2}, {4'd0}};

assign tmp_83_fu_1920_p3 = {{filter_line_fu_1833_p2}, {2'd0}};

assign tmp_84_fu_2532_p3 = {{current_input_channe_13_reg_1536}, {3'd0}};

assign tmp_85_fu_2656_p3 = {{select_ln653_1_fu_2648_p3}, {4'd0}};

assign tmp_86_fu_2668_p3 = {{select_ln653_1_fu_2648_p3}, {2'd0}};

assign tmp_87_fu_2732_p3 = {{select_ln653_1_reg_3606}, {6'd0}};

assign tmp_88_fu_2145_p3 = {{current_input_channe_reg_1447}, {6'd0}};

assign tmp_89_fu_2157_p3 = {{current_input_channe_reg_1447}, {1'd0}};

assign tmp_90_fu_2283_p3 = {{current_input_channe_reg_1447}, {6'd0}};

assign tmp_91_fu_2295_p3 = {{current_input_channe_reg_1447}, {1'd0}};

assign tmp_92_fu_2387_p3 = {{current_input_channe_reg_1447}, {6'd0}};

assign tmp_93_fu_2399_p3 = {{current_input_channe_reg_1447}, {1'd0}};

assign trunc_ln203_fu_2695_p1 = add_ln203_36_fu_2690_p2[6:0];

assign trunc_ln321_6_fu_1947_p1 = add_ln321_84_fu_1942_p2[6:0];

assign trunc_ln321_fu_1878_p1 = add_ln321_fu_1873_p2[6:0];

assign trunc_ln703_fu_2849_p1 = out_layer_data_V_q0[10:0];

assign weights_layer4_V_address0 = zext_ln203_59_fu_2602_p1;

assign zext_ln1265_6_fu_2802_p1 = add_ln1265_fu_2797_p2;

assign zext_ln1265_fu_2793_p1 = index_input_element2_17_reg_1592;

assign zext_ln162_4_fu_2834_p1 = index_input_element2_18_reg_1603;

assign zext_ln162_5_fu_2843_p1 = add_ln162_fu_2838_p2;

assign zext_ln162_fu_2500_p1 = current_filter_0_reg_1525;

assign zext_ln203_54_fu_1806_p1 = add_ln203_32_fu_1801_p2;

assign zext_ln203_55_fu_2528_p1 = current_input_channe_13_reg_1536;

assign zext_ln203_56_fu_2540_p1 = tmp_84_fu_2532_p3;

assign zext_ln203_57_fu_2562_p1 = subfilter_element_0_reg_1547;

assign zext_ln203_58_fu_2587_p1 = tmp_54_fu_2579_p3;

assign zext_ln203_59_fu_2602_p1 = add_ln203_35_reg_3581;

assign zext_ln203_60_fu_2664_p1 = tmp_85_fu_2656_p3;

assign zext_ln203_61_fu_2705_p1 = tmp_86_reg_3612;

assign zext_ln203_62_fu_2676_p1 = tmp_86_fu_2668_p3;

assign zext_ln203_63_fu_2739_p1 = tmp_87_fu_2732_p3;

assign zext_ln203_64_fu_2749_p1 = select_ln653_reg_3600;

assign zext_ln203_65_fu_2752_p1 = select_ln653_reg_3600;

assign zext_ln203_66_fu_2761_p1 = add_ln203_39_fu_2755_p2;

assign zext_ln203_67_fu_2772_p1 = add_ln203_40_reg_3637;

assign zext_ln203_fu_1797_p1 = j_0_reg_1436;

assign zext_ln321_125_fu_1765_p1 = tmp_77_fu_1757_p3;

assign zext_ln321_126_fu_1847_p1 = tmp_80_fu_1839_p3;

assign zext_ln321_127_fu_1859_p1 = tmp_81_fu_1851_p3;

assign zext_ln321_128_fu_1916_p1 = tmp_82_fu_1908_p3;

assign zext_ln321_129_fu_1928_p1 = tmp_83_fu_1920_p3;

assign zext_ln321_130_fu_1977_p1 = current_input_channe_reg_1447;

assign zext_ln321_131_fu_2004_p1 = add_ln321_87_fu_1998_p2;

assign zext_ln321_132_fu_2021_p1 = or_ln321_fu_2015_p2;

assign zext_ln321_133_fu_2038_p1 = add_ln321_88_fu_2032_p2;

assign zext_ln321_134_fu_2055_p1 = add_ln321_89_fu_2049_p2;

assign zext_ln321_135_fu_2078_p1 = index_input_element_s_reg_1470;

assign zext_ln321_136_fu_2087_p1 = add_ln321_90_fu_2082_p2;

assign zext_ln321_137_fu_2103_p1 = add_ln321_91_reg_3212;

assign zext_ln321_138_fu_2871_p1 = index_input_element_22_reg_3673;

assign zext_ln321_139_fu_2884_p1 = $unsigned(sext_ln321_20_fu_2880_p1);

assign zext_ln321_140_fu_2119_p1 = index_input_element1_reg_1481;

assign zext_ln321_141_fu_2128_p1 = add_ln321_93_fu_2123_p2;

assign zext_ln321_142_fu_2153_p1 = tmp_88_fu_2145_p3;

assign zext_ln321_143_fu_2165_p1 = tmp_89_fu_2157_p3;

assign zext_ln321_144_fu_2175_p1 = add_ln321_94_fu_2169_p2;

assign zext_ln321_145_fu_2185_p1 = add_ln321_95_fu_2179_p2;

assign zext_ln321_146_fu_2202_p1 = add_ln321_96_fu_2196_p2;

assign zext_ln321_147_fu_2219_p1 = add_ln321_97_fu_2213_p2;

assign zext_ln321_148_fu_2236_p1 = add_ln321_98_fu_2230_p2;

assign zext_ln321_149_fu_2253_p1 = index_input_element2_reg_1492;

assign zext_ln321_150_fu_2262_p1 = add_ln321_99_fu_2257_p2;

assign zext_ln321_151_fu_2279_p1 = current_input_channe_reg_1447;

assign zext_ln321_152_fu_2291_p1 = tmp_90_fu_2283_p3;

assign zext_ln321_153_fu_2303_p1 = tmp_91_fu_2295_p3;

assign zext_ln321_154_fu_2348_p1 = index_input_element2_14_reg_1503;

assign zext_ln321_155_fu_2352_p1 = index_input_element2_14_reg_1503;

assign zext_ln321_156_fu_2361_p1 = add_ln321_103_fu_2356_p2;

assign zext_ln321_157_fu_2377_p1 = add_ln321_104_reg_3432;

assign zext_ln321_158_fu_2395_p1 = tmp_92_fu_2387_p3;

assign zext_ln321_159_fu_2407_p1 = tmp_93_fu_2399_p3;

assign zext_ln321_160_fu_2417_p1 = add_ln321_105_fu_2411_p2;

assign zext_ln321_161_fu_2445_p1 = index_input_element2_15_reg_1514;

assign zext_ln321_162_fu_2449_p1 = index_input_element2_15_reg_1514;

assign zext_ln321_163_fu_2458_p1 = add_ln321_108_fu_2453_p2;

assign zext_ln321_164_fu_2474_p1 = add_ln321_109_reg_3490;

assign zext_ln321_fu_1753_p1 = tmp_76_fu_1745_p3;

assign zext_ln563_fu_1711_p1 = tmp_78_fu_1703_p3;

assign zext_ln572_fu_1823_p1 = current_input_channe_reg_1447;

assign zext_ln642_fu_2512_p1 = tmp_79_fu_2504_p3;

assign zext_ln646_1_fu_2606_p1 = subfilter_element_0_reg_1547;

assign zext_ln646_fu_2496_p1 = current_filter_0_reg_1525;

assign zext_ln659_fu_2788_p1 = index_input_element2_17_reg_1592;

assign zext_ln728_fu_2937_p1 = lhs_V_fu_2929_p3;

always @ (posedge ap_clk) begin
    zext_ln563_reg_2979[5:0] <= 6'b000000;
    zext_ln563_reg_2979[10] <= 1'b0;
    sext_ln321_reg_3000[1:0] <= 2'b00;
    zext_ln572_reg_3026[7:4] <= 4'b0000;
    add_ln321_83_reg_3044[0] <= 1'b0;
    add_ln321_85_reg_3049[0] <= 1'b0;
    add_ln321_87_reg_3054[0] <= 1'b0;
    img_channel_valid_V_69_reg_3059[0] <= 1'b1;
    img_channel_valid_V_70_reg_3064[0] <= 1'b0;
    img_channel_valid_V_71_reg_3069[0] <= 1'b0;
    img_channel_valid_V_72_reg_3074[0] <= 1'b1;
    img_channel_data_V_a_50_reg_3079[0] <= 1'b1;
    img_channel_data_V_a_51_reg_3084[0] <= 1'b0;
    img_channel_data_V_a_52_reg_3089[0] <= 1'b0;
    img_channel_data_V_a_53_reg_3094[0] <= 1'b1;
    img_channel_keep_V_a_51_reg_3099[0] <= 1'b1;
    img_channel_keep_V_a_52_reg_3104[0] <= 1'b0;
    img_channel_keep_V_a_53_reg_3109[0] <= 1'b0;
    img_channel_keep_V_a_54_reg_3114[0] <= 1'b1;
    img_channel_user_V_a_49_reg_3119[0] <= 1'b1;
    img_channel_user_V_a_50_reg_3124[0] <= 1'b0;
    img_channel_user_V_a_51_reg_3129[0] <= 1'b0;
    img_channel_user_V_a_52_reg_3134[0] <= 1'b1;
    img_channel_last_V_a_51_reg_3139[0] <= 1'b1;
    img_channel_last_V_a_52_reg_3144[0] <= 1'b0;
    img_channel_last_V_a_53_reg_3149[0] <= 1'b0;
    img_channel_last_V_a_54_reg_3154[0] <= 1'b1;
    img_channel_id_V_add_51_reg_3159[0] <= 1'b1;
    img_channel_id_V_add_52_reg_3164[0] <= 1'b0;
    img_channel_id_V_add_53_reg_3169[0] <= 1'b0;
    img_channel_id_V_add_54_reg_3174[0] <= 1'b1;
    img_channel_dest_V_a_51_reg_3179[0] <= 1'b1;
    img_channel_dest_V_a_52_reg_3184[0] <= 1'b0;
    img_channel_dest_V_a_53_reg_3189[0] <= 1'b0;
    img_channel_dest_V_a_54_reg_3194[0] <= 1'b1;
    add_ln321_95_reg_3255[0] <= 1'b0;
    img_channel_valid_V_76_reg_3260[0] <= 1'b1;
    img_channel_valid_V_77_reg_3265[0] <= 1'b0;
    img_channel_valid_V_78_reg_3270[0] <= 1'b0;
    img_channel_valid_V_79_reg_3275[0] <= 1'b1;
    img_channel_data_V_a_55_reg_3280[0] <= 1'b1;
    img_channel_data_V_a_56_reg_3285[0] <= 1'b0;
    img_channel_data_V_a_57_reg_3290[0] <= 1'b0;
    img_channel_data_V_a_58_reg_3295[0] <= 1'b1;
    img_channel_keep_V_a_56_reg_3300[0] <= 1'b1;
    img_channel_keep_V_a_57_reg_3305[0] <= 1'b0;
    img_channel_keep_V_a_58_reg_3310[0] <= 1'b0;
    img_channel_keep_V_a_59_reg_3315[0] <= 1'b1;
    img_channel_user_V_a_54_reg_3320[0] <= 1'b1;
    img_channel_user_V_a_55_reg_3325[0] <= 1'b0;
    img_channel_user_V_a_56_reg_3330[0] <= 1'b0;
    img_channel_user_V_a_57_reg_3335[0] <= 1'b1;
    img_channel_last_V_a_56_reg_3340[0] <= 1'b1;
    img_channel_last_V_a_57_reg_3345[0] <= 1'b0;
    img_channel_last_V_a_58_reg_3350[0] <= 1'b0;
    img_channel_last_V_a_59_reg_3355[0] <= 1'b1;
    img_channel_id_V_add_56_reg_3360[0] <= 1'b1;
    img_channel_id_V_add_57_reg_3365[0] <= 1'b0;
    img_channel_id_V_add_58_reg_3370[0] <= 1'b0;
    img_channel_id_V_add_59_reg_3375[0] <= 1'b1;
    img_channel_dest_V_a_56_reg_3380[0] <= 1'b1;
    img_channel_dest_V_a_57_reg_3385[0] <= 1'b0;
    img_channel_dest_V_a_58_reg_3390[0] <= 1'b0;
    img_channel_dest_V_a_59_reg_3395[0] <= 1'b1;
    add_ln321_100_reg_3408[0] <= 1'b0;
    add_ln321_102_reg_3413[0] <= 1'b0;
    add_ln321_106_reg_3467[0] <= 1'b0;
    add_ln321_107_reg_3472[0] <= 1'b0;
    zext_ln646_reg_3533[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln162_reg_3538[11:4] <= 8'b00000000;
    zext_ln642_reg_3543[5:0] <= 6'b000000;
    zext_ln642_reg_3543[10] <= 1'b0;
    zext_ln203_55_reg_3557[7:4] <= 4'b0000;
    tmp_86_reg_3612[1:0] <= 2'b00;
end

endmodule //layer4
