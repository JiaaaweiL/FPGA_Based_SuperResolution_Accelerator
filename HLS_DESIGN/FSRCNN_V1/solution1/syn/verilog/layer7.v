// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module layer7 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        corr6_out_V_valid_V_dout,
        corr6_out_V_valid_V_empty_n,
        corr6_out_V_valid_V_read,
        corr6_out_V_data_V_dout,
        corr6_out_V_data_V_empty_n,
        corr6_out_V_data_V_read,
        corr6_out_V_keep_V_dout,
        corr6_out_V_keep_V_empty_n,
        corr6_out_V_keep_V_read,
        corr6_out_V_user_V_dout,
        corr6_out_V_user_V_empty_n,
        corr6_out_V_user_V_read,
        corr6_out_V_last_V_dout,
        corr6_out_V_last_V_empty_n,
        corr6_out_V_last_V_read,
        corr6_out_V_id_V_dout,
        corr6_out_V_id_V_empty_n,
        corr6_out_V_id_V_read,
        corr6_out_V_dest_V_dout,
        corr6_out_V_dest_V_empty_n,
        corr6_out_V_dest_V_read,
        corr7_out_V_valid_V_din,
        corr7_out_V_valid_V_full_n,
        corr7_out_V_valid_V_write,
        corr7_out_V_data_V_din,
        corr7_out_V_data_V_full_n,
        corr7_out_V_data_V_write,
        corr7_out_V_keep_V_din,
        corr7_out_V_keep_V_full_n,
        corr7_out_V_keep_V_write,
        corr7_out_V_user_V_din,
        corr7_out_V_user_V_full_n,
        corr7_out_V_user_V_write,
        corr7_out_V_last_V_din,
        corr7_out_V_last_V_full_n,
        corr7_out_V_last_V_write,
        corr7_out_V_id_V_din,
        corr7_out_V_id_V_full_n,
        corr7_out_V_id_V_write,
        corr7_out_V_dest_V_din,
        corr7_out_V_dest_V_full_n,
        corr7_out_V_dest_V_write
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [0:0] corr6_out_V_valid_V_dout;
input   corr6_out_V_valid_V_empty_n;
output   corr6_out_V_valid_V_read;
input  [11:0] corr6_out_V_data_V_dout;
input   corr6_out_V_data_V_empty_n;
output   corr6_out_V_data_V_read;
input  [3:0] corr6_out_V_keep_V_dout;
input   corr6_out_V_keep_V_empty_n;
output   corr6_out_V_keep_V_read;
input  [0:0] corr6_out_V_user_V_dout;
input   corr6_out_V_user_V_empty_n;
output   corr6_out_V_user_V_read;
input  [0:0] corr6_out_V_last_V_dout;
input   corr6_out_V_last_V_empty_n;
output   corr6_out_V_last_V_read;
input  [0:0] corr6_out_V_id_V_dout;
input   corr6_out_V_id_V_empty_n;
output   corr6_out_V_id_V_read;
input  [0:0] corr6_out_V_dest_V_dout;
input   corr6_out_V_dest_V_empty_n;
output   corr6_out_V_dest_V_read;
output  [0:0] corr7_out_V_valid_V_din;
input   corr7_out_V_valid_V_full_n;
output   corr7_out_V_valid_V_write;
output  [11:0] corr7_out_V_data_V_din;
input   corr7_out_V_data_V_full_n;
output   corr7_out_V_data_V_write;
output  [3:0] corr7_out_V_keep_V_din;
input   corr7_out_V_keep_V_full_n;
output   corr7_out_V_keep_V_write;
output  [0:0] corr7_out_V_user_V_din;
input   corr7_out_V_user_V_full_n;
output   corr7_out_V_user_V_write;
output  [0:0] corr7_out_V_last_V_din;
input   corr7_out_V_last_V_full_n;
output   corr7_out_V_last_V_write;
output  [0:0] corr7_out_V_id_V_din;
input   corr7_out_V_id_V_full_n;
output   corr7_out_V_id_V_write;
output  [0:0] corr7_out_V_dest_V_din;
input   corr7_out_V_dest_V_full_n;
output   corr7_out_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg corr6_out_V_valid_V_read;
reg corr6_out_V_data_V_read;
reg corr6_out_V_keep_V_read;
reg corr6_out_V_user_V_read;
reg corr6_out_V_last_V_read;
reg corr6_out_V_id_V_read;
reg corr6_out_V_dest_V_read;
reg corr7_out_V_valid_V_write;
reg corr7_out_V_data_V_write;
reg corr7_out_V_keep_V_write;
reg corr7_out_V_user_V_write;
reg corr7_out_V_last_V_write;
reg corr7_out_V_id_V_write;
reg corr7_out_V_dest_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [9:0] weights_layer7_V_0_address0;
reg    weights_layer7_V_0_ce0;
wire   [4:0] weights_layer7_V_0_q0;
wire   [5:0] biases_layer7_V_address0;
reg    biases_layer7_V_ce0;
wire   [2:0] biases_layer7_V_q0;
reg    corr6_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state6;
reg   [0:0] icmp_ln965_reg_1225;
wire   [0:0] icmp_ln968_fu_904_p2;
wire   [0:0] icmp_ln987_fu_873_p2;
reg    corr6_out_V_data_V_blk_n;
reg    corr6_out_V_keep_V_blk_n;
reg    corr6_out_V_user_V_blk_n;
reg    corr6_out_V_last_V_blk_n;
reg    corr6_out_V_id_V_blk_n;
reg    corr6_out_V_dest_V_blk_n;
reg    corr7_out_V_valid_V_blk_n;
wire    ap_CS_fsm_state20;
reg    corr7_out_V_data_V_blk_n;
reg    corr7_out_V_keep_V_blk_n;
reg    corr7_out_V_user_V_blk_n;
reg    corr7_out_V_last_V_blk_n;
reg    corr7_out_V_id_V_blk_n;
reg    corr7_out_V_dest_V_blk_n;
wire   [6:0] row_idx_fu_787_p2;
reg   [6:0] row_idx_reg_1207;
wire    ap_CS_fsm_state2;
wire   [5:0] i_fu_799_p2;
reg   [5:0] i_reg_1215;
wire    ap_CS_fsm_state3;
wire   [12:0] zext_ln946_fu_813_p1;
reg   [12:0] zext_ln946_reg_1220;
wire   [0:0] icmp_ln945_fu_793_p2;
wire   [0:0] icmp_ln965_fu_817_p2;
wire   [6:0] j_fu_829_p2;
wire    ap_CS_fsm_state4;
wire   [3:0] current_input_channe_2_fu_855_p2;
reg   [3:0] current_input_channe_2_reg_1240;
wire    ap_CS_fsm_state5;
wire   [10:0] zext_ln965_fu_869_p1;
reg   [10:0] zext_ln965_reg_1245;
wire   [0:0] icmp_ln950_fu_849_p2;
wire   [6:0] index_input_element_5_fu_879_p2;
wire    io_acc_block_signal_op100;
reg    ap_predicate_op100_read_state6;
wire    io_acc_block_signal_op129;
reg    ap_predicate_op129_read_state6;
reg    ap_block_state6;
wire   [6:0] index_input_element_fu_910_p2;
wire   [5:0] current_filter_fu_941_p2;
reg   [5:0] current_filter_reg_1270;
wire    ap_CS_fsm_state7;
wire   [63:0] zext_ln1028_fu_947_p1;
reg   [63:0] zext_ln1028_reg_1275;
wire   [0:0] icmp_ln1022_fu_935_p2;
wire   [10:0] zext_ln162_fu_951_p1;
reg   [10:0] zext_ln162_reg_1280;
wire   [12:0] zext_ln1024_fu_963_p1;
reg   [12:0] zext_ln1024_reg_1285;
wire   [3:0] current_input_channe_3_fu_973_p2;
reg   [3:0] current_input_channe_3_reg_1294;
wire    ap_CS_fsm_state8;
wire   [10:0] zext_ln203_24_fu_987_p1;
reg   [10:0] zext_ln203_24_reg_1299;
wire   [0:0] icmp_ln1024_fu_967_p2;
reg   [4:0] subfilter_layer_0_V_reg_1314;
wire    ap_CS_fsm_state9;
wire   [6:0] add_ln1033_fu_1025_p2;
reg   [6:0] add_ln1033_reg_1322;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln1033_fu_1019_p2;
wire  signed [15:0] sext_ln46_fu_1045_p1;
reg  signed [15:0] sext_ln46_reg_1332;
wire   [6:0] index_fu_1059_p2;
reg   [6:0] index_reg_1340;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln62_fu_1065_p1;
reg   [63:0] zext_ln62_reg_1345;
wire   [0:0] icmp_ln46_fu_1053_p2;
wire   [11:0] channel_from_prev_ou_q0;
reg   [11:0] channel_from_prev_ou_2_reg_1355;
wire    ap_CS_fsm_state13;
wire   [6:0] index_input_element_7_fu_1095_p2;
reg   [6:0] index_input_element_7_reg_1363;
wire    ap_CS_fsm_state15;
reg   [11:0] out_layer_data_V_add_1_reg_1368;
wire   [0:0] icmp_ln1039_fu_1089_p2;
wire  signed [11:0] sext_ln1265_fu_1127_p1;
reg  signed [11:0] sext_ln1265_reg_1378;
wire    ap_CS_fsm_state17;
wire  signed [10:0] sext_ln703_fu_1131_p1;
reg  signed [10:0] sext_ln703_reg_1383;
wire   [6:0] index_input_element_6_fu_1141_p2;
reg   [6:0] index_input_element_6_reg_1391;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln1044_fu_1135_p2;
reg   [11:0] out_layer_data_V_add_2_reg_1401;
wire    ap_CS_fsm_state19;
wire   [10:0] p_Val2_6_fu_1191_p3;
reg   [10:0] p_Val2_6_reg_1431;
wire   [0:0] out_layer_valid_V_q0;
reg   [0:0] tmp_valid_V_reg_1436;
reg   [5:0] correlate_img_V_assi_address0;
reg    correlate_img_V_assi_ce0;
reg    correlate_img_V_assi_we0;
wire   [11:0] correlate_img_V_assi_d0;
wire   [11:0] correlate_img_V_assi_q0;
reg   [9:0] img_channel_0_data_s_address0;
reg    img_channel_0_data_s_ce0;
reg    img_channel_0_data_s_we0;
wire   [11:0] img_channel_0_data_s_q0;
reg   [9:0] img_channel_0_keep_s_address0;
reg    img_channel_0_keep_s_ce0;
reg    img_channel_0_keep_s_we0;
wire   [3:0] img_channel_0_keep_s_q0;
reg   [9:0] img_channel_0_user_s_address0;
reg    img_channel_0_user_s_ce0;
reg    img_channel_0_user_s_we0;
wire   [0:0] img_channel_0_user_s_q0;
reg   [9:0] img_channel_0_last_s_address0;
reg    img_channel_0_last_s_ce0;
reg    img_channel_0_last_s_we0;
wire   [0:0] img_channel_0_last_s_q0;
reg   [9:0] img_channel_0_id_V_address0;
reg    img_channel_0_id_V_ce0;
reg    img_channel_0_id_V_we0;
wire   [0:0] img_channel_0_id_V_q0;
reg   [9:0] img_channel_0_dest_s_address0;
reg    img_channel_0_dest_s_ce0;
reg    img_channel_0_dest_s_we0;
wire   [0:0] img_channel_0_dest_s_q0;
reg   [12:0] channel_from_prev_ou_address0;
reg    channel_from_prev_ou_ce0;
reg    channel_from_prev_ou_we0;
wire   [11:0] out_layer_valid_V_address0;
reg    out_layer_valid_V_ce0;
reg   [11:0] out_layer_data_V_address0;
reg    out_layer_data_V_ce0;
reg    out_layer_data_V_we0;
reg   [11:0] out_layer_data_V_d0;
wire   [11:0] out_layer_data_V_q0;
reg   [6:0] row_idx_0_reg_616;
reg    ap_block_state1;
reg   [5:0] i_0_reg_628;
wire   [0:0] icmp_ln946_fu_823_p2;
wire   [0:0] icmp_ln942_fu_781_p2;
reg   [6:0] j_0_reg_639;
reg   [3:0] current_input_channe_reg_650;
reg   [6:0] index_input_element2_reg_661;
reg   [6:0] index_input_element1_reg_672;
reg   [5:0] current_filter_0_reg_683;
reg   [3:0] current_input_channe_4_reg_694;
reg   [6:0] index_input_element2_1_reg_705;
wire    ap_CS_fsm_state11;
reg   [6:0] index_0_i_reg_717;
wire    ap_CS_fsm_state14;
reg   [6:0] index_input_element2_2_reg_728;
wire    ap_CS_fsm_state16;
reg   [6:0] index_input_element2_3_reg_739;
wire    io_acc_block_signal_op270;
wire   [63:0] zext_ln203_19_fu_844_p1;
wire   [63:0] zext_ln203_23_fu_894_p1;
wire   [63:0] zext_ln203_21_fu_925_p1;
wire  signed [63:0] sext_ln203_fu_1014_p1;
wire   [63:0] zext_ln203_27_fu_1040_p1;
wire   [63:0] zext_ln1035_fu_1048_p1;
wire   [63:0] zext_ln1265_4_fu_1115_p1;
wire   [63:0] zext_ln1041_fu_1101_p1;
wire   [63:0] zext_ln162_1_fu_1156_p1;
wire   [63:0] zext_ln1046_fu_1162_p1;
wire   [11:0] tmp_data_V_6_fu_1199_p1;
wire   [11:0] add_ln703_fu_1120_p2;
wire   [11:0] tmp_s_fu_805_p3;
wire   [12:0] zext_ln203_fu_835_p1;
wire   [12:0] add_ln203_10_fu_839_p2;
wire   [9:0] tmp_40_fu_861_p3;
wire   [10:0] zext_ln203_22_fu_885_p1;
wire   [10:0] add_ln203_12_fu_889_p2;
wire   [10:0] zext_ln203_20_fu_916_p1;
wire   [10:0] add_ln203_11_fu_920_p2;
wire   [11:0] tmp_41_fu_955_p3;
wire   [9:0] tmp_42_fu_979_p3;
wire   [6:0] tmp_43_fu_991_p3;
wire   [10:0] zext_ln203_25_fu_999_p1;
wire   [10:0] sub_ln203_fu_1003_p2;
wire   [10:0] add_ln203_13_fu_1009_p2;
wire   [10:0] zext_ln203_26_fu_1031_p1;
wire   [10:0] add_ln203_14_fu_1035_p2;
wire  signed [11:0] r_V_fu_1073_p0;
wire  signed [4:0] r_V_fu_1073_p1;
wire   [15:0] r_V_fu_1073_p2;
wire   [12:0] zext_ln1265_fu_1106_p1;
wire   [12:0] add_ln1265_fu_1110_p2;
wire  signed [2:0] sext_ln1265_fu_1127_p0;
wire  signed [2:0] sext_ln703_fu_1131_p0;
wire   [12:0] zext_ln321_fu_1147_p1;
wire   [12:0] add_ln162_fu_1151_p2;
wire   [10:0] trunc_ln703_fu_1171_p1;
wire   [11:0] aux_sum_V_fu_1175_p2;
wire   [0:0] icmp_ln1494_fu_1185_p2;
wire   [10:0] add_ln203_fu_1180_p2;
reg   [19:0] ap_NS_fsm;
reg    ap_condition_915;
reg    ap_condition_919;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 20'd1;
end

layer7_weights_labVr #(
    .DataWidth( 5 ),
    .AddressRange( 672 ),
    .AddressWidth( 10 ))
weights_layer7_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_layer7_V_0_address0),
    .ce0(weights_layer7_V_0_ce0),
    .q0(weights_layer7_V_0_q0)
);

layer7_biases_laybWr #(
    .DataWidth( 3 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
biases_layer7_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_layer7_V_address0),
    .ce0(biases_layer7_V_ce0),
    .q0(biases_layer7_V_q0)
);

layer1_correlate_fYi #(
    .DataWidth( 12 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
correlate_img_V_assi_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(correlate_img_V_assi_address0),
    .ce0(correlate_img_V_assi_ce0),
    .we0(correlate_img_V_assi_we0),
    .d0(correlate_img_V_assi_d0),
    .q0(correlate_img_V_assi_q0)
);

layer2_out_layer_Aem #(
    .DataWidth( 12 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_data_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_data_s_address0),
    .ce0(img_channel_0_data_s_ce0),
    .we0(img_channel_0_data_s_we0),
    .d0(corr6_out_V_data_V_dout),
    .q0(img_channel_0_data_s_q0)
);

layer7_img_channebZs #(
    .DataWidth( 4 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_keep_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_keep_s_address0),
    .ce0(img_channel_0_keep_s_ce0),
    .we0(img_channel_0_keep_s_we0),
    .d0(corr6_out_V_keep_V_dout),
    .q0(img_channel_0_keep_s_q0)
);

layer7_img_channeb0s #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_user_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_user_s_address0),
    .ce0(img_channel_0_user_s_ce0),
    .we0(img_channel_0_user_s_we0),
    .d0(corr6_out_V_user_V_dout),
    .q0(img_channel_0_user_s_q0)
);

layer7_img_channeb0s #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_last_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_last_s_address0),
    .ce0(img_channel_0_last_s_ce0),
    .we0(img_channel_0_last_s_we0),
    .d0(corr6_out_V_last_V_dout),
    .q0(img_channel_0_last_s_q0)
);

layer7_img_channeb0s #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_id_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_id_V_address0),
    .ce0(img_channel_0_id_V_ce0),
    .we0(img_channel_0_id_V_we0),
    .d0(corr6_out_V_id_V_dout),
    .q0(img_channel_0_id_V_q0)
);

layer7_img_channeb0s #(
    .DataWidth( 1 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
img_channel_0_dest_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(img_channel_0_dest_s_address0),
    .ce0(img_channel_0_dest_s_ce0),
    .we0(img_channel_0_dest_s_we0),
    .d0(corr6_out_V_dest_V_dout),
    .q0(img_channel_0_dest_s_q0)
);

layer2_channel_fryd2 #(
    .DataWidth( 12 ),
    .AddressRange( 5508 ),
    .AddressWidth( 13 ))
channel_from_prev_ou_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(channel_from_prev_ou_address0),
    .ce0(channel_from_prev_ou_ce0),
    .we0(channel_from_prev_ou_we0),
    .d0(img_channel_0_data_s_q0),
    .q0(channel_from_prev_ou_q0)
);

layer1_out_layer_g8j #(
    .DataWidth( 1 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
out_layer_valid_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_layer_valid_V_address0),
    .ce0(out_layer_valid_V_ce0),
    .q0(out_layer_valid_V_q0)
);

layer2_img_channesc4 #(
    .DataWidth( 12 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
out_layer_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_layer_data_V_address0),
    .ce0(out_layer_data_V_ce0),
    .we0(out_layer_data_V_we0),
    .d0(out_layer_data_V_d0),
    .q0(out_layer_data_V_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln942_fu_781_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln950_fu_849_p2 == 1'd1))) begin
        current_filter_0_reg_683 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln1044_fu_1135_p2 == 1'd1))) begin
        current_filter_0_reg_683 <= current_filter_reg_1270;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln1039_fu_1089_p2 == 1'd1))) begin
        current_input_channe_4_reg_694 <= current_input_channe_3_reg_1294;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1022_fu_935_p2 == 1'd0))) begin
        current_input_channe_4_reg_694 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln945_fu_793_p2 == 1'd1))) begin
        current_input_channe_reg_650 <= 4'd0;
    end else if ((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (((icmp_ln987_fu_873_p2 == 1'd1) & (icmp_ln965_reg_1225 == 1'd0)) | ((icmp_ln968_fu_904_p2 == 1'd1) & (icmp_ln965_reg_1225 == 1'd1))))) begin
        current_input_channe_reg_650 <= current_input_channe_2_reg_1240;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln942_fu_781_p2 == 1'd0))) begin
        i_0_reg_628 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln946_fu_823_p2 == 1'd1))) begin
        i_0_reg_628 <= i_reg_1215;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        index_0_i_reg_717 <= index_reg_1340;
    end else if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1033_fu_1019_p2 == 1'd1))) begin
        index_0_i_reg_717 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((icmp_ln965_reg_1225 == 1'd1)) begin
        if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln950_fu_849_p2 == 1'd0))) begin
            index_input_element1_reg_672 <= 7'd0;
        end else if ((1'b1 == ap_condition_915)) begin
            index_input_element1_reg_672 <= index_input_element_fu_910_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        index_input_element2_1_reg_705 <= add_ln1033_reg_1322;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        index_input_element2_1_reg_705 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln46_fu_1053_p2 == 1'd1))) begin
        index_input_element2_2_reg_728 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        index_input_element2_2_reg_728 <= index_input_element_7_reg_1363;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        index_input_element2_3_reg_739 <= 7'd0;
    end else if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        index_input_element2_3_reg_739 <= index_input_element_6_reg_1391;
    end
end

always @ (posedge ap_clk) begin
    if ((icmp_ln965_reg_1225 == 1'd0)) begin
        if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln950_fu_849_p2 == 1'd0))) begin
            index_input_element2_reg_661 <= 7'd0;
        end else if ((1'b1 == ap_condition_919)) begin
            index_input_element2_reg_661 <= index_input_element_5_fu_879_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln945_fu_793_p2 == 1'd0))) begin
        j_0_reg_639 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln946_fu_823_p2 == 1'd0))) begin
        j_0_reg_639 <= j_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1022_fu_935_p2 == 1'd1))) begin
        row_idx_0_reg_616 <= row_idx_reg_1207;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        row_idx_0_reg_616 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln1033_reg_1322 <= add_ln1033_fu_1025_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        channel_from_prev_ou_2_reg_1355 <= channel_from_prev_ou_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        current_filter_reg_1270 <= current_filter_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        current_input_channe_2_reg_1240 <= current_input_channe_2_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        current_input_channe_3_reg_1294 <= current_input_channe_3_fu_973_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_1215 <= i_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln945_fu_793_p2 == 1'd1))) begin
        icmp_ln965_reg_1225 <= icmp_ln965_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        index_input_element_6_reg_1391 <= index_input_element_6_fu_1141_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        index_input_element_7_reg_1363 <= index_input_element_7_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        index_reg_1340 <= index_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln1039_fu_1089_p2 == 1'd0))) begin
        out_layer_data_V_add_1_reg_1368 <= zext_ln1265_4_fu_1115_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln1044_fu_1135_p2 == 1'd0))) begin
        out_layer_data_V_add_2_reg_1401 <= zext_ln162_1_fu_1156_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_Val2_6_reg_1431 <= p_Val2_6_fu_1191_p3;
        tmp_valid_V_reg_1436 <= out_layer_valid_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_idx_reg_1207 <= row_idx_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        sext_ln1265_reg_1378 <= sext_ln1265_fu_1127_p1;
        sext_ln703_reg_1383 <= sext_ln703_fu_1131_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1033_fu_1019_p2 == 1'd1))) begin
        sext_ln46_reg_1332 <= sext_ln46_fu_1045_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        subfilter_layer_0_V_reg_1314 <= weights_layer7_V_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1022_fu_935_p2 == 1'd0))) begin
        zext_ln1024_reg_1285[11 : 6] <= zext_ln1024_fu_963_p1[11 : 6];
        zext_ln1028_reg_1275[5 : 0] <= zext_ln1028_fu_947_p1[5 : 0];
        zext_ln162_reg_1280[5 : 0] <= zext_ln162_fu_951_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1024_fu_967_p2 == 1'd0))) begin
        zext_ln203_24_reg_1299[9 : 6] <= zext_ln203_24_fu_987_p1[9 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln46_fu_1053_p2 == 1'd0))) begin
        zext_ln62_reg_1345[6 : 0] <= zext_ln62_fu_1065_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln945_fu_793_p2 == 1'd0))) begin
        zext_ln946_reg_1220[11 : 6] <= zext_ln946_fu_813_p1[11 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln950_fu_849_p2 == 1'd0))) begin
        zext_ln965_reg_1245[9 : 6] <= zext_ln965_fu_869_p1[9 : 6];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln942_fu_781_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        biases_layer7_V_ce0 = 1'b1;
    end else begin
        biases_layer7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        channel_from_prev_ou_address0 = zext_ln62_fu_1065_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        channel_from_prev_ou_address0 = zext_ln1035_fu_1048_p1;
    end else begin
        channel_from_prev_ou_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state12))) begin
        channel_from_prev_ou_ce0 = 1'b1;
    end else begin
        channel_from_prev_ou_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        channel_from_prev_ou_we0 = 1'b1;
    end else begin
        channel_from_prev_ou_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        corr6_out_V_data_V_blk_n = corr6_out_V_data_V_empty_n;
    end else begin
        corr6_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op100_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_data_V_read = 1'b1;
    end else begin
        corr6_out_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        corr6_out_V_dest_V_blk_n = corr6_out_V_dest_V_empty_n;
    end else begin
        corr6_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op100_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_dest_V_read = 1'b1;
    end else begin
        corr6_out_V_dest_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        corr6_out_V_id_V_blk_n = corr6_out_V_id_V_empty_n;
    end else begin
        corr6_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op100_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_id_V_read = 1'b1;
    end else begin
        corr6_out_V_id_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        corr6_out_V_keep_V_blk_n = corr6_out_V_keep_V_empty_n;
    end else begin
        corr6_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op100_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_keep_V_read = 1'b1;
    end else begin
        corr6_out_V_keep_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        corr6_out_V_last_V_blk_n = corr6_out_V_last_V_empty_n;
    end else begin
        corr6_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op100_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_last_V_read = 1'b1;
    end else begin
        corr6_out_V_last_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        corr6_out_V_user_V_blk_n = corr6_out_V_user_V_empty_n;
    end else begin
        corr6_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op100_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_user_V_read = 1'b1;
    end else begin
        corr6_out_V_user_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        corr6_out_V_valid_V_blk_n = corr6_out_V_valid_V_empty_n;
    end else begin
        corr6_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op129_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (ap_predicate_op100_read_state6 == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        corr6_out_V_valid_V_read = 1'b1;
    end else begin
        corr6_out_V_valid_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        corr7_out_V_data_V_blk_n = corr7_out_V_data_V_full_n;
    end else begin
        corr7_out_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        corr7_out_V_data_V_write = 1'b1;
    end else begin
        corr7_out_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        corr7_out_V_dest_V_blk_n = corr7_out_V_dest_V_full_n;
    end else begin
        corr7_out_V_dest_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        corr7_out_V_dest_V_write = 1'b1;
    end else begin
        corr7_out_V_dest_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        corr7_out_V_id_V_blk_n = corr7_out_V_id_V_full_n;
    end else begin
        corr7_out_V_id_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        corr7_out_V_id_V_write = 1'b1;
    end else begin
        corr7_out_V_id_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        corr7_out_V_keep_V_blk_n = corr7_out_V_keep_V_full_n;
    end else begin
        corr7_out_V_keep_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        corr7_out_V_keep_V_write = 1'b1;
    end else begin
        corr7_out_V_keep_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        corr7_out_V_last_V_blk_n = corr7_out_V_last_V_full_n;
    end else begin
        corr7_out_V_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        corr7_out_V_last_V_write = 1'b1;
    end else begin
        corr7_out_V_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        corr7_out_V_user_V_blk_n = corr7_out_V_user_V_full_n;
    end else begin
        corr7_out_V_user_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        corr7_out_V_user_V_write = 1'b1;
    end else begin
        corr7_out_V_user_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        corr7_out_V_valid_V_blk_n = corr7_out_V_valid_V_full_n;
    end else begin
        corr7_out_V_valid_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        corr7_out_V_valid_V_write = 1'b1;
    end else begin
        corr7_out_V_valid_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        correlate_img_V_assi_address0 = zext_ln1041_fu_1101_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        correlate_img_V_assi_address0 = zext_ln62_reg_1345;
    end else begin
        correlate_img_V_assi_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state15))) begin
        correlate_img_V_assi_ce0 = 1'b1;
    end else begin
        correlate_img_V_assi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        correlate_img_V_assi_we0 = 1'b1;
    end else begin
        correlate_img_V_assi_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        img_channel_0_data_s_address0 = zext_ln203_27_fu_1040_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1))) begin
        img_channel_0_data_s_address0 = zext_ln203_21_fu_925_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0))) begin
        img_channel_0_data_s_address0 = zext_ln203_23_fu_894_p1;
    end else begin
        img_channel_0_data_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_data_s_ce0 = 1'b1;
    end else begin
        img_channel_0_data_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_data_s_we0 = 1'b1;
    end else begin
        img_channel_0_data_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        img_channel_0_dest_s_address0 = zext_ln1046_fu_1162_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1))) begin
        img_channel_0_dest_s_address0 = zext_ln203_21_fu_925_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0))) begin
        img_channel_0_dest_s_address0 = zext_ln203_23_fu_894_p1;
    end else begin
        img_channel_0_dest_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_dest_s_ce0 = 1'b1;
    end else begin
        img_channel_0_dest_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_dest_s_we0 = 1'b1;
    end else begin
        img_channel_0_dest_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        img_channel_0_id_V_address0 = zext_ln1046_fu_1162_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1))) begin
        img_channel_0_id_V_address0 = zext_ln203_21_fu_925_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0))) begin
        img_channel_0_id_V_address0 = zext_ln203_23_fu_894_p1;
    end else begin
        img_channel_0_id_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_id_V_ce0 = 1'b1;
    end else begin
        img_channel_0_id_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_id_V_we0 = 1'b1;
    end else begin
        img_channel_0_id_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        img_channel_0_keep_s_address0 = zext_ln1046_fu_1162_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1))) begin
        img_channel_0_keep_s_address0 = zext_ln203_21_fu_925_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0))) begin
        img_channel_0_keep_s_address0 = zext_ln203_23_fu_894_p1;
    end else begin
        img_channel_0_keep_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_keep_s_ce0 = 1'b1;
    end else begin
        img_channel_0_keep_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_keep_s_we0 = 1'b1;
    end else begin
        img_channel_0_keep_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        img_channel_0_last_s_address0 = zext_ln1046_fu_1162_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1))) begin
        img_channel_0_last_s_address0 = zext_ln203_21_fu_925_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0))) begin
        img_channel_0_last_s_address0 = zext_ln203_23_fu_894_p1;
    end else begin
        img_channel_0_last_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_last_s_ce0 = 1'b1;
    end else begin
        img_channel_0_last_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_last_s_we0 = 1'b1;
    end else begin
        img_channel_0_last_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        img_channel_0_user_s_address0 = zext_ln1046_fu_1162_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1))) begin
        img_channel_0_user_s_address0 = zext_ln203_21_fu_925_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0))) begin
        img_channel_0_user_s_address0 = zext_ln203_23_fu_894_p1;
    end else begin
        img_channel_0_user_s_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_user_s_ce0 = 1'b1;
    end else begin
        img_channel_0_user_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1)))) begin
        img_channel_0_user_s_we0 = 1'b1;
    end else begin
        img_channel_0_user_s_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln942_fu_781_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        out_layer_data_V_address0 = out_layer_data_V_add_2_reg_1401;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        out_layer_data_V_address0 = zext_ln162_1_fu_1156_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        out_layer_data_V_address0 = out_layer_data_V_add_1_reg_1368;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        out_layer_data_V_address0 = zext_ln1265_4_fu_1115_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_address0 = zext_ln203_19_fu_844_p1;
    end else begin
        out_layer_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4) | ((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        out_layer_data_V_ce0 = 1'b1;
    end else begin
        out_layer_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        out_layer_data_V_d0 = tmp_data_V_6_fu_1199_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        out_layer_data_V_d0 = add_ln703_fu_1120_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        out_layer_data_V_d0 = 12'd0;
    end else begin
        out_layer_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln946_fu_823_p2 == 1'd0)) | ((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        out_layer_data_V_we0 = 1'b1;
    end else begin
        out_layer_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        out_layer_valid_V_ce0 = 1'b1;
    end else begin
        out_layer_valid_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        weights_layer7_V_0_ce0 = 1'b1;
    end else begin
        weights_layer7_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln942_fu_781_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln945_fu_793_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln946_fu_823_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln950_fu_849_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (((icmp_ln987_fu_873_p2 == 1'd1) & (icmp_ln965_reg_1225 == 1'd0)) | ((icmp_ln968_fu_904_p2 == 1'd1) & (icmp_ln965_reg_1225 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if ((~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (((icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0)) | ((icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln1022_fu_935_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln1024_fu_967_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln1033_fu_1019_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln46_fu_1053_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln1039_fu_1089_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln1044_fu_1135_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((io_acc_block_signal_op270 == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1033_fu_1025_p2 = (index_input_element2_1_reg_705 + 7'd1);

assign add_ln1265_fu_1110_p2 = (zext_ln1024_reg_1285 + zext_ln1265_fu_1106_p1);

assign add_ln162_fu_1151_p2 = (zext_ln1024_reg_1285 + zext_ln321_fu_1147_p1);

assign add_ln203_10_fu_839_p2 = (zext_ln946_reg_1220 + zext_ln203_fu_835_p1);

assign add_ln203_11_fu_920_p2 = (zext_ln965_reg_1245 + zext_ln203_20_fu_916_p1);

assign add_ln203_12_fu_889_p2 = (zext_ln965_reg_1245 + zext_ln203_22_fu_885_p1);

assign add_ln203_13_fu_1009_p2 = (sub_ln203_fu_1003_p2 + zext_ln162_reg_1280);

assign add_ln203_14_fu_1035_p2 = (zext_ln203_24_reg_1299 + zext_ln203_26_fu_1031_p1);

assign add_ln203_fu_1180_p2 = ($signed(sext_ln703_reg_1383) + $signed(trunc_ln703_fu_1171_p1));

assign add_ln703_fu_1120_p2 = (correlate_img_V_assi_q0 + out_layer_data_V_q0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state6 = (((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0)));
end

always @ (*) begin
    ap_condition_915 = (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln968_fu_904_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_919 = (~(((ap_predicate_op129_read_state6 == 1'b1) & (io_acc_block_signal_op129 == 1'b0)) | ((ap_predicate_op100_read_state6 == 1'b1) & (io_acc_block_signal_op100 == 1'b0))) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln987_fu_873_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op100_read_state6 = ((icmp_ln987_fu_873_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd0));
end

always @ (*) begin
    ap_predicate_op129_read_state6 = ((icmp_ln968_fu_904_p2 == 1'd0) & (icmp_ln965_reg_1225 == 1'd1));
end

assign ap_ready = internal_ap_ready;

assign aux_sum_V_fu_1175_p2 = ($signed(sext_ln1265_reg_1378) + $signed(out_layer_data_V_q0));

assign biases_layer7_V_address0 = zext_ln1028_reg_1275;

assign corr7_out_V_data_V_din = p_Val2_6_reg_1431;

assign corr7_out_V_dest_V_din = img_channel_0_dest_s_q0;

assign corr7_out_V_id_V_din = img_channel_0_id_V_q0;

assign corr7_out_V_keep_V_din = img_channel_0_keep_s_q0;

assign corr7_out_V_last_V_din = img_channel_0_last_s_q0;

assign corr7_out_V_user_V_din = img_channel_0_user_s_q0;

assign corr7_out_V_valid_V_din = tmp_valid_V_reg_1436;

assign correlate_img_V_assi_d0 = {{r_V_fu_1073_p2[15:4]}};

assign current_filter_fu_941_p2 = (current_filter_0_reg_683 + 6'd1);

assign current_input_channe_2_fu_855_p2 = (current_input_channe_reg_650 + 4'd1);

assign current_input_channe_3_fu_973_p2 = (current_input_channe_4_reg_694 + 4'd1);

assign i_fu_799_p2 = (i_0_reg_628 + 6'd1);

assign icmp_ln1022_fu_935_p2 = ((current_filter_0_reg_683 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln1024_fu_967_p2 = ((current_input_channe_4_reg_694 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln1033_fu_1019_p2 = ((index_input_element2_1_reg_705 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln1039_fu_1089_p2 = ((index_input_element2_2_reg_728 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln1044_fu_1135_p2 = ((index_input_element2_3_reg_739 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_1185_p2 = (($signed(aux_sum_V_fu_1175_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_1053_p2 = ((index_0_i_reg_717 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln942_fu_781_p2 = ((row_idx_0_reg_616 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln945_fu_793_p2 = ((i_0_reg_628 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln946_fu_823_p2 = ((j_0_reg_639 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln950_fu_849_p2 = ((current_input_channe_reg_650 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln965_fu_817_p2 = ((row_idx_0_reg_616 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln968_fu_904_p2 = ((index_input_element1_reg_672 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln987_fu_873_p2 = ((index_input_element2_reg_661 == 7'd64) ? 1'b1 : 1'b0);

assign index_fu_1059_p2 = (index_0_i_reg_717 + 7'd1);

assign index_input_element_5_fu_879_p2 = (index_input_element2_reg_661 + 7'd1);

assign index_input_element_6_fu_1141_p2 = (index_input_element2_3_reg_739 + 7'd1);

assign index_input_element_7_fu_1095_p2 = (index_input_element2_2_reg_728 + 7'd1);

assign index_input_element_fu_910_p2 = (index_input_element1_reg_672 + 7'd1);

assign io_acc_block_signal_op100 = (corr6_out_V_valid_V_empty_n & corr6_out_V_user_V_empty_n & corr6_out_V_last_V_empty_n & corr6_out_V_keep_V_empty_n & corr6_out_V_id_V_empty_n & corr6_out_V_dest_V_empty_n & corr6_out_V_data_V_empty_n);

assign io_acc_block_signal_op129 = (corr6_out_V_valid_V_empty_n & corr6_out_V_user_V_empty_n & corr6_out_V_last_V_empty_n & corr6_out_V_keep_V_empty_n & corr6_out_V_id_V_empty_n & corr6_out_V_dest_V_empty_n & corr6_out_V_data_V_empty_n);

assign io_acc_block_signal_op270 = (corr7_out_V_valid_V_full_n & corr7_out_V_user_V_full_n & corr7_out_V_last_V_full_n & corr7_out_V_keep_V_full_n & corr7_out_V_id_V_full_n & corr7_out_V_dest_V_full_n & corr7_out_V_data_V_full_n);

assign j_fu_829_p2 = (j_0_reg_639 + 7'd1);

assign out_layer_valid_V_address0 = zext_ln162_1_fu_1156_p1;

assign p_Val2_6_fu_1191_p3 = ((icmp_ln1494_fu_1185_p2[0:0] === 1'b1) ? add_ln203_fu_1180_p2 : 11'd0);

assign r_V_fu_1073_p0 = channel_from_prev_ou_2_reg_1355;

assign r_V_fu_1073_p1 = sext_ln46_reg_1332;

assign r_V_fu_1073_p2 = ($signed(r_V_fu_1073_p0) * $signed(r_V_fu_1073_p1));

assign row_idx_fu_787_p2 = (row_idx_0_reg_616 + 7'd1);

assign sext_ln1265_fu_1127_p0 = biases_layer7_V_q0;

assign sext_ln1265_fu_1127_p1 = sext_ln1265_fu_1127_p0;

assign sext_ln203_fu_1014_p1 = $signed(add_ln203_13_fu_1009_p2);

assign sext_ln46_fu_1045_p1 = $signed(subfilter_layer_0_V_reg_1314);

assign sext_ln703_fu_1131_p0 = biases_layer7_V_q0;

assign sext_ln703_fu_1131_p1 = sext_ln703_fu_1131_p0;

assign start_out = real_start;

assign sub_ln203_fu_1003_p2 = (zext_ln203_24_fu_987_p1 - zext_ln203_25_fu_999_p1);

assign tmp_40_fu_861_p3 = {{current_input_channe_reg_650}, {6'd0}};

assign tmp_41_fu_955_p3 = {{current_filter_0_reg_683}, {6'd0}};

assign tmp_42_fu_979_p3 = {{current_input_channe_4_reg_694}, {6'd0}};

assign tmp_43_fu_991_p3 = {{current_input_channe_4_reg_694}, {3'd0}};

assign tmp_data_V_6_fu_1199_p1 = p_Val2_6_reg_1431;

assign tmp_s_fu_805_p3 = {{i_0_reg_628}, {6'd0}};

assign trunc_ln703_fu_1171_p1 = out_layer_data_V_q0[10:0];

assign weights_layer7_V_0_address0 = sext_ln203_fu_1014_p1;

assign zext_ln1024_fu_963_p1 = tmp_41_fu_955_p3;

assign zext_ln1028_fu_947_p1 = current_filter_0_reg_683;

assign zext_ln1035_fu_1048_p1 = index_input_element2_1_reg_705;

assign zext_ln1041_fu_1101_p1 = index_input_element2_2_reg_728;

assign zext_ln1046_fu_1162_p1 = index_input_element2_3_reg_739;

assign zext_ln1265_4_fu_1115_p1 = add_ln1265_fu_1110_p2;

assign zext_ln1265_fu_1106_p1 = index_input_element2_2_reg_728;

assign zext_ln162_1_fu_1156_p1 = add_ln162_fu_1151_p2;

assign zext_ln162_fu_951_p1 = current_filter_0_reg_683;

assign zext_ln203_19_fu_844_p1 = add_ln203_10_fu_839_p2;

assign zext_ln203_20_fu_916_p1 = index_input_element1_reg_672;

assign zext_ln203_21_fu_925_p1 = add_ln203_11_fu_920_p2;

assign zext_ln203_22_fu_885_p1 = index_input_element2_reg_661;

assign zext_ln203_23_fu_894_p1 = add_ln203_12_fu_889_p2;

assign zext_ln203_24_fu_987_p1 = tmp_42_fu_979_p3;

assign zext_ln203_25_fu_999_p1 = tmp_43_fu_991_p3;

assign zext_ln203_26_fu_1031_p1 = index_input_element2_1_reg_705;

assign zext_ln203_27_fu_1040_p1 = add_ln203_14_fu_1035_p2;

assign zext_ln203_fu_835_p1 = j_0_reg_639;

assign zext_ln321_fu_1147_p1 = index_input_element2_3_reg_739;

assign zext_ln62_fu_1065_p1 = index_0_i_reg_717;

assign zext_ln946_fu_813_p1 = tmp_s_fu_805_p3;

assign zext_ln965_fu_869_p1 = tmp_40_fu_861_p3;

always @ (posedge ap_clk) begin
    zext_ln946_reg_1220[5:0] <= 6'b000000;
    zext_ln946_reg_1220[12] <= 1'b0;
    zext_ln965_reg_1245[5:0] <= 6'b000000;
    zext_ln965_reg_1245[10] <= 1'b0;
    zext_ln1028_reg_1275[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln162_reg_1280[10:6] <= 5'b00000;
    zext_ln1024_reg_1285[5:0] <= 6'b000000;
    zext_ln1024_reg_1285[12] <= 1'b0;
    zext_ln203_24_reg_1299[5:0] <= 6'b000000;
    zext_ln203_24_reg_1299[10] <= 1'b0;
    zext_ln62_reg_1345[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //layer7
