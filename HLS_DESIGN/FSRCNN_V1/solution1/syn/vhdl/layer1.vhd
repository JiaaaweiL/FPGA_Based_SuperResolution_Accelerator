-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity layer1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_valid_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_valid_V_full_n : IN STD_LOGIC;
    corr1_out_V_valid_V_write : OUT STD_LOGIC;
    corr1_out_V_data_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    corr1_out_V_data_V_full_n : IN STD_LOGIC;
    corr1_out_V_data_V_write : OUT STD_LOGIC;
    corr1_out_V_keep_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    corr1_out_V_keep_V_full_n : IN STD_LOGIC;
    corr1_out_V_keep_V_write : OUT STD_LOGIC;
    corr1_out_V_user_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_user_V_full_n : IN STD_LOGIC;
    corr1_out_V_user_V_write : OUT STD_LOGIC;
    corr1_out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_last_V_full_n : IN STD_LOGIC;
    corr1_out_V_last_V_write : OUT STD_LOGIC;
    corr1_out_V_id_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_id_V_full_n : IN STD_LOGIC;
    corr1_out_V_id_V_write : OUT STD_LOGIC;
    corr1_out_V_dest_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_dest_V_full_n : IN STD_LOGIC;
    corr1_out_V_dest_V_write : OUT STD_LOGIC );
end;


architecture behav of layer1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_pp7_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_pp8_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv64_112 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000100010010";
    constant ap_const_lv64_151 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000101010001";
    constant ap_const_lv7_44 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv9_110 : STD_LOGIC_VECTOR (8 downto 0) := "100010000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_41 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv25_0 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv62_44 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000001000100";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv9_CC : STD_LOGIC_VECTOR (8 downto 0) := "011001100";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv8_88 : STD_LOGIC_VECTOR (7 downto 0) := "10001000";
    constant ap_const_lv26_1011 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000001000000010001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal stream_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_data_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel : STD_LOGIC;
    signal stream_in_V_data_V_0_load_A : STD_LOGIC;
    signal stream_in_V_data_V_0_load_B : STD_LOGIC;
    signal stream_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_keep_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_A : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_B : STD_LOGIC;
    signal stream_in_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_strb_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_A : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_B : STD_LOGIC;
    signal stream_in_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_user_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_user_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_user_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_user_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel : STD_LOGIC;
    signal stream_in_V_user_V_0_load_A : STD_LOGIC;
    signal stream_in_V_user_V_0_load_B : STD_LOGIC;
    signal stream_in_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_last_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel : STD_LOGIC;
    signal stream_in_V_last_V_0_load_A : STD_LOGIC;
    signal stream_in_V_last_V_0_load_B : STD_LOGIC;
    signal stream_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_id_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_id_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_id_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_id_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_id_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel : STD_LOGIC;
    signal stream_in_V_id_V_0_load_A : STD_LOGIC;
    signal stream_in_V_id_V_0_load_B : STD_LOGIC;
    signal stream_in_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_A : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_B : STD_LOGIC;
    signal stream_in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal weights_layer1_V_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal weights_layer1_V_0_ce0 : STD_LOGIC;
    signal weights_layer1_V_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal biases_layer1_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal biases_layer1_V_ce0 : STD_LOGIC;
    signal biases_layer1_V_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln198_fu_1974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln223_fu_2170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal corr1_out_V_valid_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal corr1_out_V_data_V_blk_n : STD_LOGIC;
    signal corr1_out_V_keep_V_blk_n : STD_LOGIC;
    signal corr1_out_V_user_V_blk_n : STD_LOGIC;
    signal corr1_out_V_last_V_blk_n : STD_LOGIC;
    signal corr1_out_V_id_V_blk_n : STD_LOGIC;
    signal corr1_out_V_dest_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_1497 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_line_0_reg_1508 : STD_LOGIC_VECTOR (2 downto 0);
    signal buffer_col_0_reg_1519 : STD_LOGIC_VECTOR (6 downto 0);
    signal buffer_col14_0_reg_1530 : STD_LOGIC_VECTOR (6 downto 0);
    signal buffer_col15_0_reg_1541 : STD_LOGIC_VECTOR (1 downto 0);
    signal buffer_col16_0_reg_1552 : STD_LOGIC_VECTOR (6 downto 0);
    signal buffer_col18_0_reg_1575 : STD_LOGIC_VECTOR (1 downto 0);
    signal buffer_col19_0_reg_1587 : STD_LOGIC_VECTOR (6 downto 0);
    signal buffer_col20_0_reg_1598 : STD_LOGIC_VECTOR (6 downto 0);
    signal buffer_col21_0_reg_1609 : STD_LOGIC_VECTOR (6 downto 0);
    signal filter_element_0_0_reg_1631 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln178_fu_1721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_idx_fu_1727_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_idx_reg_2825 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln181_fu_1733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln183_fu_1745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln183_reg_2834 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln183_reg_2834_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln183_fu_1751_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln188_1_fu_1771_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln188_1_reg_2843 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln321_338_fu_1863_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_338_reg_2848 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln321_265_fu_1871_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_265_reg_2856 : STD_LOGIC_VECTOR (13 downto 0);
    signal buffer_col_fu_1877_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln321_339_fu_1883_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_339_reg_2891 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln195_fu_1890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal and_ln195_fu_1902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln321_266_fu_1932_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_266_reg_2922 : STD_LOGIC_VECTOR (13 downto 0);
    signal buffer_data_V_addr_3_reg_2930 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_data_V_addr_5_reg_2935 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_keep_V_addr_3_reg_2940 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_keep_V_addr_5_reg_2945 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_strb_V_addr_3_reg_2950 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_strb_V_addr_5_reg_2955 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_user_V_addr_3_reg_2960 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_user_V_addr_5_reg_2965 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_last_V_addr_3_reg_2970 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_last_V_addr_5_reg_2975 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_id_V_addr_3_reg_2980 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_id_V_addr_5_reg_2985 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_dest_V_addr_3_reg_2990 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_dest_V_addr_5_reg_2995 : STD_LOGIC_VECTOR (8 downto 0);
    signal img_channel_V_addr_4_reg_3000 : STD_LOGIC_VECTOR (12 downto 0);
    signal img_channel_V_addr_6_reg_3005 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln198_reg_3010 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal zext_ln321_344_fu_1989_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_344_reg_3014 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1148_fu_2016_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1148_reg_3019 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_69_reg_3024 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_3030 : STD_LOGIC_VECTOR (5 downto 0);
    signal buffer_col_1_fu_2028_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln205_fu_2077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln205_reg_3040 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state10_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal buffer_col_2_fu_2083_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal or_ln321_3_fu_2092_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln321_3_reg_3049 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln212_fu_2126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln212_reg_3054 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state13_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state14_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal add_ln321_269_fu_2136_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_269_reg_3058 : STD_LOGIC_VECTOR (13 downto 0);
    signal buffer_col_3_fu_2141_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal icmp_ln220_fu_2158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln220_reg_3068 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal or_ln220_fu_2164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state16 : BOOLEAN;
    signal tmp_data_V_17_reg_3080 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_keep_V_16_reg_3085 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_1_reg_3090 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_user_V_15_reg_3095 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_16_reg_3100 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_16_reg_3105 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_dest_V_16_reg_3110 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1148_1_fu_2192_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1148_1_reg_3115 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_75_reg_3120 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_3126 : STD_LOGIC_VECTOR (5 downto 0);
    signal buffer_col_4_fu_2269_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln229_fu_2275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln229_reg_3136 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state18_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state19_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal buffer_col_5_fu_2281_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal buffer_col_5_reg_3140 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal icmp_ln236_fu_2303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln236_reg_3145 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_block_state21_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal add_ln321_271_fu_2313_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln321_271_reg_3149 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_col_6_fu_2319_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal and_ln244_fu_2348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal add_ln321_272_fu_2378_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_272_reg_3163 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln246_fu_2384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln246_reg_3168 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_block_state24_pp6_stage0_iter0 : BOOLEAN;
    signal ap_block_state25_pp6_stage0_iter1 : BOOLEAN;
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal buffer_col_7_fu_2390_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal add_ln321_273_fu_2412_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_273_reg_3182 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln256_fu_2428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln256_reg_3222 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp7_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp7_stage0 : signal is "none";
    signal ap_block_state27_pp7_stage0_iter0 : BOOLEAN;
    signal ap_block_state28_pp7_stage0_iter1 : BOOLEAN;
    signal ap_block_pp7_stage0_11001 : BOOLEAN;
    signal buffer_col_8_fu_2434_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp7_iter0 : STD_LOGIC := '0';
    signal zext_ln321_356_fu_2440_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln321_356_reg_3231 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln264_reg_3276 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln266_fu_2479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal current_filter_fu_2485_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal current_filter_reg_3284 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln273_fu_2491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln273_reg_3289 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln162_fu_2495_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln162_reg_3294 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln270_fu_2507_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln270_reg_3299 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln270_fu_2511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln270_reg_3304 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp8_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp8_stage0 : signal is "none";
    signal ap_block_state31_pp8_stage0_iter0 : BOOLEAN;
    signal ap_block_state32_pp8_stage0_iter1 : BOOLEAN;
    signal ap_block_pp8_stage0_11001 : BOOLEAN;
    signal add_ln270_fu_2517_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln270_reg_3308 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp8_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal sext_ln1265_fu_2573_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1265_reg_3323 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_CORRELATE_2_fu_1655_ap_ready : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_ap_done : STD_LOGIC;
    signal sext_ln703_fu_2577_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_reg_3328 : STD_LOGIC_VECTOR (10 downto 0);
    signal k_fu_2587_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_reg_3336 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal icmp_ln277_fu_2581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln7_fu_2640_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln7_reg_3351 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal select_ln14_fu_2648_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln14_reg_3357 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_layer_valid_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_valid_V_reg_3387 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state7 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state13 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state18 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state21 : STD_LOGIC;
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state24 : STD_LOGIC;
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_block_pp7_stage0_subdone : BOOLEAN;
    signal ap_condition_pp7_exit_iter0_state27 : STD_LOGIC;
    signal ap_enable_reg_pp7_iter1 : STD_LOGIC := '0';
    signal ap_block_pp8_stage0_subdone : BOOLEAN;
    signal ap_condition_pp8_exit_iter0_state31 : STD_LOGIC;
    signal ap_enable_reg_pp8_iter1 : STD_LOGIC := '0';
    signal subfilter_layer_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal subfilter_layer_V_ce0 : STD_LOGIC;
    signal subfilter_layer_V_we0 : STD_LOGIC;
    signal subfilter_layer_V_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal subfilter_layer_V_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal correlate_img_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal correlate_img_ce0 : STD_LOGIC;
    signal correlate_img_we0 : STD_LOGIC;
    signal correlate_img_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_layer_valid_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_layer_valid_V_ce0 : STD_LOGIC;
    signal buffer_data_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_data_V_ce0 : STD_LOGIC;
    signal buffer_data_V_we0 : STD_LOGIC;
    signal buffer_data_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_data_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_data_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_data_V_ce1 : STD_LOGIC;
    signal buffer_data_V_we1 : STD_LOGIC;
    signal buffer_data_V_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_data_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal buffer_keep_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_keep_V_ce0 : STD_LOGIC;
    signal buffer_keep_V_we0 : STD_LOGIC;
    signal buffer_keep_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_keep_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_keep_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_keep_V_ce1 : STD_LOGIC;
    signal buffer_keep_V_we1 : STD_LOGIC;
    signal buffer_keep_V_d1 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_keep_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_strb_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_strb_V_ce0 : STD_LOGIC;
    signal buffer_strb_V_we0 : STD_LOGIC;
    signal buffer_strb_V_d0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_strb_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_strb_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_strb_V_ce1 : STD_LOGIC;
    signal buffer_strb_V_we1 : STD_LOGIC;
    signal buffer_strb_V_d1 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_strb_V_q1 : STD_LOGIC_VECTOR (3 downto 0);
    signal buffer_user_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_user_V_ce0 : STD_LOGIC;
    signal buffer_user_V_we0 : STD_LOGIC;
    signal buffer_user_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_user_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_user_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_user_V_ce1 : STD_LOGIC;
    signal buffer_user_V_we1 : STD_LOGIC;
    signal buffer_user_V_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_user_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_last_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_last_V_ce0 : STD_LOGIC;
    signal buffer_last_V_we0 : STD_LOGIC;
    signal buffer_last_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_last_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_last_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_last_V_ce1 : STD_LOGIC;
    signal buffer_last_V_we1 : STD_LOGIC;
    signal buffer_last_V_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_last_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_id_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_id_V_ce0 : STD_LOGIC;
    signal buffer_id_V_we0 : STD_LOGIC;
    signal buffer_id_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_id_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_id_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_id_V_ce1 : STD_LOGIC;
    signal buffer_id_V_we1 : STD_LOGIC;
    signal buffer_id_V_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_id_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_dest_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_dest_V_ce0 : STD_LOGIC;
    signal buffer_dest_V_we0 : STD_LOGIC;
    signal buffer_dest_V_d0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_dest_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_dest_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buffer_dest_V_ce1 : STD_LOGIC;
    signal buffer_dest_V_we1 : STD_LOGIC;
    signal buffer_dest_V_d1 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_dest_V_q1 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_channel_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal img_channel_V_ce0 : STD_LOGIC;
    signal img_channel_V_we0 : STD_LOGIC;
    signal img_channel_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_V_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal img_channel_V_ce1 : STD_LOGIC;
    signal img_channel_V_we1 : STD_LOGIC;
    signal img_channel_V_d1 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_V_q1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_CORRELATE_2_fu_1655_ap_start : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_ap_idle : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_prev_output_channel_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_CORRELATE_2_fu_1655_prev_output_channel_V_ce0 : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_filter_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_CORRELATE_2_fu_1655_filter_V_ce0 : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_correlate_img_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_CORRELATE_2_fu_1655_correlate_img_V_ce0 : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_correlate_img_V_we0 : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_correlate_img_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_idx_0_reg_1485 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_buffer_line_0_phi_fu_1512_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal buffer_col17_0_reg_1563 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal current_filter_0_reg_1620 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp8_stage0 : BOOLEAN;
    signal k_0_reg_1643 : STD_LOGIC_VECTOR (6 downto 0);
    signal io_acc_block_signal_op692 : STD_LOGIC;
    signal grp_CORRELATE_2_fu_1655_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln321_342_fu_1944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln321_fu_1962_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_345_fu_2114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln321_347_fu_2147_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal zext_ln321_349_fu_2214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_120_fu_2287_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_351_fu_2325_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal zext_ln249_fu_2396_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal zext_ln321_355_fu_2417_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_357_fu_2450_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp7_stage0 : BOOLEAN;
    signal zext_ln321_358_fu_2467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_fu_2558_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln273_1_fu_2563_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln162_10_fu_2607_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln279_fu_2593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_360_fu_2672_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln1148_1_fu_2069_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1148_3_fu_2261_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1662_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln185_fu_1757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buffer_line_fu_1739_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_64_fu_1779_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_65_fu_1791_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln321_fu_1787_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_334_fu_1799_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln188_fu_1809_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln188_2_fu_1815_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_66_fu_1823_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_67_fu_1835_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln321_335_fu_1831_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_336_fu_1843_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln188_fu_1763_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln321_337_fu_1853_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_263_fu_1847_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_264_fu_1857_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_fu_1803_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln195_1_fu_1896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_118_fu_1908_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_119_fu_1920_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln321_341_fu_1928_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_340_fu_1916_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln321_fu_1938_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_267_fu_1956_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_343_fu_1980_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_268_fu_1984_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln731_fu_2000_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_fu_2004_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1148_fu_2725_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sub_ln1148_fu_2034_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_70_fu_2039_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1148_1_fu_2049_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1148_2_fu_2053_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1148_fu_2056_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1148_1_fu_2063_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln321_fu_2089_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_72_fu_2098_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_73_fu_2107_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_346_fu_2132_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln731_1_fu_2176_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_1_fu_2180_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln1148_1_fu_2733_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln321_348_fu_2204_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln321_270_fu_2208_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1148_2_fu_2226_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_76_fu_2231_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln1148_4_fu_2241_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1148_5_fu_2245_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1148_2_fu_2248_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1148_3_fu_2255_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln321_350_fu_2309_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln244_fu_2336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_1_fu_2342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_fu_2354_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_122_fu_2366_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln321_353_fu_2374_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_352_fu_2362_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln321_354_fu_2408_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln321_274_fu_2444_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln321_275_fu_2462_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_123_fu_2499_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_124_fu_2523_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_125_fu_2535_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_fu_2531_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_92_fu_2543_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln203_fu_2547_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln203_55_fu_2553_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1265_fu_2573_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln703_fu_2577_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln162_9_fu_2598_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln162_fu_2602_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln703_fu_2612_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal aux_sum_V_fu_2616_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_79_fu_2632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_2626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln203_fu_2621_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln282_fu_2656_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln321_359_fu_2662_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln321_276_fu_2666_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1192_fu_2681_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_fu_2684_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_fu_2697_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln728_fu_2704_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1192_fu_2691_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_2708_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln1148_fu_2725_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln1148_1_fu_2733_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;
    signal ap_idle_pp7 : STD_LOGIC;
    signal ap_enable_pp7 : STD_LOGIC;
    signal ap_idle_pp8 : STD_LOGIC;
    signal ap_enable_pp8 : STD_LOGIC;

    component CORRELATE_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        prev_output_channel_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        prev_output_channel_V_ce0 : OUT STD_LOGIC;
        prev_output_channel_V_q0 : IN STD_LOGIC_VECTOR (11 downto 0);
        filter_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        filter_V_ce0 : OUT STD_LOGIC;
        filter_V_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        correlate_img_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        correlate_img_V_ce0 : OUT STD_LOGIC;
        correlate_img_V_we0 : OUT STD_LOGIC;
        correlate_img_V_d0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component FSRCNN_mul_mul_12ocq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component layer1_weights_lacud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component layer1_biases_laydEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component layer1_subfilter_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component layer1_correlate_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component layer1_out_layer_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component layer1_buffer_dathbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component layer1_buffer_keeibs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (3 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component layer1_buffer_usekbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (0 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component layer1_img_channencg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (11 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    weights_layer1_V_0_U : component layer1_weights_lacud
    generic map (
        DataWidth => 6,
        AddressRange => 1400,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights_layer1_V_0_address0,
        ce0 => weights_layer1_V_0_ce0,
        q0 => weights_layer1_V_0_q0);

    biases_layer1_V_U : component layer1_biases_laydEe
    generic map (
        DataWidth => 5,
        AddressRange => 56,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => biases_layer1_V_address0,
        ce0 => biases_layer1_V_ce0,
        q0 => biases_layer1_V_q0);

    subfilter_layer_V_U : component layer1_subfilter_eOg
    generic map (
        DataWidth => 7,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => subfilter_layer_V_address0,
        ce0 => subfilter_layer_V_ce0,
        we0 => subfilter_layer_V_we0,
        d0 => subfilter_layer_V_d0,
        q0 => subfilter_layer_V_q0);

    correlate_img_U : component layer1_correlate_fYi
    generic map (
        DataWidth => 12,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => correlate_img_address0,
        ce0 => correlate_img_ce0,
        we0 => correlate_img_we0,
        d0 => grp_CORRELATE_2_fu_1655_correlate_img_V_d0,
        q0 => correlate_img_q0);

    out_layer_valid_V_U : component layer1_out_layer_g8j
    generic map (
        DataWidth => 1,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_layer_valid_V_address0,
        ce0 => out_layer_valid_V_ce0,
        q0 => out_layer_valid_V_q0);

    buffer_data_V_U : component layer1_buffer_dathbi
    generic map (
        DataWidth => 32,
        AddressRange => 340,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_data_V_address0,
        ce0 => buffer_data_V_ce0,
        we0 => buffer_data_V_we0,
        d0 => buffer_data_V_d0,
        q0 => buffer_data_V_q0,
        address1 => buffer_data_V_address1,
        ce1 => buffer_data_V_ce1,
        we1 => buffer_data_V_we1,
        d1 => buffer_data_V_d1,
        q1 => buffer_data_V_q1);

    buffer_keep_V_U : component layer1_buffer_keeibs
    generic map (
        DataWidth => 4,
        AddressRange => 340,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_keep_V_address0,
        ce0 => buffer_keep_V_ce0,
        we0 => buffer_keep_V_we0,
        d0 => buffer_keep_V_d0,
        q0 => buffer_keep_V_q0,
        address1 => buffer_keep_V_address1,
        ce1 => buffer_keep_V_ce1,
        we1 => buffer_keep_V_we1,
        d1 => buffer_keep_V_d1,
        q1 => buffer_keep_V_q1);

    buffer_strb_V_U : component layer1_buffer_keeibs
    generic map (
        DataWidth => 4,
        AddressRange => 340,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_strb_V_address0,
        ce0 => buffer_strb_V_ce0,
        we0 => buffer_strb_V_we0,
        d0 => buffer_strb_V_d0,
        q0 => buffer_strb_V_q0,
        address1 => buffer_strb_V_address1,
        ce1 => buffer_strb_V_ce1,
        we1 => buffer_strb_V_we1,
        d1 => buffer_strb_V_d1,
        q1 => buffer_strb_V_q1);

    buffer_user_V_U : component layer1_buffer_usekbM
    generic map (
        DataWidth => 1,
        AddressRange => 340,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_user_V_address0,
        ce0 => buffer_user_V_ce0,
        we0 => buffer_user_V_we0,
        d0 => buffer_user_V_d0,
        q0 => buffer_user_V_q0,
        address1 => buffer_user_V_address1,
        ce1 => buffer_user_V_ce1,
        we1 => buffer_user_V_we1,
        d1 => buffer_user_V_d1,
        q1 => buffer_user_V_q1);

    buffer_last_V_U : component layer1_buffer_usekbM
    generic map (
        DataWidth => 1,
        AddressRange => 340,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_last_V_address0,
        ce0 => buffer_last_V_ce0,
        we0 => buffer_last_V_we0,
        d0 => buffer_last_V_d0,
        q0 => buffer_last_V_q0,
        address1 => buffer_last_V_address1,
        ce1 => buffer_last_V_ce1,
        we1 => buffer_last_V_we1,
        d1 => buffer_last_V_d1,
        q1 => buffer_last_V_q1);

    buffer_id_V_U : component layer1_buffer_usekbM
    generic map (
        DataWidth => 1,
        AddressRange => 340,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_id_V_address0,
        ce0 => buffer_id_V_ce0,
        we0 => buffer_id_V_we0,
        d0 => buffer_id_V_d0,
        q0 => buffer_id_V_q0,
        address1 => buffer_id_V_address1,
        ce1 => buffer_id_V_ce1,
        we1 => buffer_id_V_we1,
        d1 => buffer_id_V_d1,
        q1 => buffer_id_V_q1);

    buffer_dest_V_U : component layer1_buffer_usekbM
    generic map (
        DataWidth => 1,
        AddressRange => 340,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buffer_dest_V_address0,
        ce0 => buffer_dest_V_ce0,
        we0 => buffer_dest_V_we0,
        d0 => buffer_dest_V_d0,
        q0 => buffer_dest_V_q0,
        address1 => buffer_dest_V_address1,
        ce1 => buffer_dest_V_ce1,
        we1 => buffer_dest_V_we1,
        d1 => buffer_dest_V_d1,
        q1 => buffer_dest_V_q1);

    img_channel_V_U : component layer1_img_channencg
    generic map (
        DataWidth => 12,
        AddressRange => 5508,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_V_address0,
        ce0 => img_channel_V_ce0,
        we0 => img_channel_V_we0,
        d0 => img_channel_V_d0,
        q0 => img_channel_V_q0,
        address1 => img_channel_V_address1,
        ce1 => img_channel_V_ce1,
        we1 => img_channel_V_we1,
        d1 => img_channel_V_d1,
        q1 => img_channel_V_q1);

    grp_CORRELATE_2_fu_1655 : component CORRELATE_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_CORRELATE_2_fu_1655_ap_start,
        ap_done => grp_CORRELATE_2_fu_1655_ap_done,
        ap_idle => grp_CORRELATE_2_fu_1655_ap_idle,
        ap_ready => grp_CORRELATE_2_fu_1655_ap_ready,
        prev_output_channel_V_address0 => grp_CORRELATE_2_fu_1655_prev_output_channel_V_address0,
        prev_output_channel_V_ce0 => grp_CORRELATE_2_fu_1655_prev_output_channel_V_ce0,
        prev_output_channel_V_q0 => img_channel_V_q0,
        filter_V_address0 => grp_CORRELATE_2_fu_1655_filter_V_address0,
        filter_V_ce0 => grp_CORRELATE_2_fu_1655_filter_V_ce0,
        filter_V_q0 => subfilter_layer_V_q0,
        correlate_img_V_address0 => grp_CORRELATE_2_fu_1655_correlate_img_V_address0,
        correlate_img_V_ce0 => grp_CORRELATE_2_fu_1655_correlate_img_V_ce0,
        correlate_img_V_we0 => grp_CORRELATE_2_fu_1655_correlate_img_V_we0,
        correlate_img_V_d0 => grp_CORRELATE_2_fu_1655_correlate_img_V_d0);

    FSRCNN_mul_mul_12ocq_U6 : component FSRCNN_mul_mul_12ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 14,
        dout_WIDTH => 26)
    port map (
        din0 => t_V_fu_2004_p3,
        din1 => mul_ln1148_fu_2725_p1,
        dout => mul_ln1148_fu_2725_p2);

    FSRCNN_mul_mul_12ocq_U7 : component FSRCNN_mul_mul_12ocq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 14,
        dout_WIDTH => 26)
    port map (
        din0 => t_V_1_fu_2180_p3,
        din1 => mul_ln1148_1_fu_2733_p1,
        dout => mul_ln1148_1_fu_2733_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln178_fu_1721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln181_fu_1733_p2 = ap_const_lv1_1) and (icmp_ln178_fu_1721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((icmp_ln181_fu_1733_p2 = ap_const_lv1_1) and (icmp_ln178_fu_1721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((ap_const_lv1_1 = and_ln195_fu_1902_p2) or (icmp_ln195_fu_1890_p2 = ap_const_lv1_1)))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state7) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state7);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((ap_const_lv1_1 = and_ln195_fu_1902_p2) or (icmp_ln195_fu_1890_p2 = ap_const_lv1_1)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state10);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state13) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state13) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then 
                    ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state13);
                elsif ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state18) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state18) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then 
                    ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state18);
                elsif ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                elsif ((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state21) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state21) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then 
                    ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state21);
                elsif ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_logic_1 = ap_condition_pp6_exit_iter0_state24) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = and_ln244_fu_2348_p2) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state24) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then 
                    ap_enable_reg_pp6_iter1 <= (ap_const_logic_1 xor ap_condition_pp6_exit_iter0_state24);
                elsif ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                elsif (((ap_const_lv1_1 = and_ln244_fu_2348_p2) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_logic_1 = ap_condition_pp7_exit_iter0_state27) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln220_reg_3068 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    ap_enable_reg_pp7_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp7_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp7_exit_iter0_state27) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))) then 
                    ap_enable_reg_pp7_iter1 <= (ap_const_logic_1 xor ap_condition_pp7_exit_iter0_state27);
                elsif ((ap_const_boolean_0 = ap_block_pp7_stage0_subdone)) then 
                    ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
                elsif (((icmp_ln220_reg_3068 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    ap_enable_reg_pp7_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp8_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp8_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp8_exit_iter0_state31) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0_subdone))) then 
                    ap_enable_reg_pp8_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln266_fu_2479_p2 = ap_const_lv1_0) and (icmp_ln264_reg_3276 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    ap_enable_reg_pp8_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp8_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp8_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp8_exit_iter0_state31) and (ap_const_boolean_0 = ap_block_pp8_stage0_subdone))) then 
                    ap_enable_reg_pp8_iter1 <= (ap_const_logic_1 xor ap_condition_pp8_exit_iter0_state31);
                elsif ((ap_const_boolean_0 = ap_block_pp8_stage0_subdone)) then 
                    ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
                elsif (((icmp_ln266_fu_2479_p2 = ap_const_lv1_0) and (icmp_ln264_reg_3276 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    ap_enable_reg_pp8_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_CORRELATE_2_fu_1655_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_CORRELATE_2_fu_1655_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    grp_CORRELATE_2_fu_1655_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_CORRELATE_2_fu_1655_ap_ready = ap_const_logic_1)) then 
                    grp_CORRELATE_2_fu_1655_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_out = ap_const_logic_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_rd <= not(stream_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_in = ap_const_logic_1) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_wr <= not(stream_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_data_V_0_state = ap_const_lv2_3)) or ((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_out = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_rd <= not(stream_in_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_in = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_wr <= not(stream_in_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_dest_V_0_state = ap_const_lv2_3)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_out = ap_const_logic_1) and (stream_in_V_id_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_rd <= not(stream_in_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_in = ap_const_logic_1) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_wr <= not(stream_in_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_id_V_0_state = ap_const_lv2_3)) or ((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_out = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_rd <= not(stream_in_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_in = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_wr <= not(stream_in_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_keep_V_0_state = ap_const_lv2_3)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_last_V_0_ack_out = ap_const_logic_1) and (stream_in_V_last_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_last_V_0_sel_rd <= not(stream_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_last_V_0_ack_in = ap_const_logic_1) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_last_V_0_sel_wr <= not(stream_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_last_V_0_state = ap_const_lv2_2) and (stream_in_V_last_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_last_V_0_state = ap_const_lv2_3) and (stream_in_V_last_V_0_vld_in = ap_const_logic_0) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_last_V_0_state = ap_const_lv2_1) and (stream_in_V_last_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_last_V_0_state = ap_const_lv2_3) and (stream_in_V_last_V_0_ack_out = ap_const_logic_0) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_last_V_0_vld_in = ap_const_logic_0) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_last_V_0_ack_out = ap_const_logic_0) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_last_V_0_state = ap_const_lv2_3)) or ((stream_in_V_last_V_0_state = ap_const_lv2_1) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_last_V_0_state = ap_const_lv2_2) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_out = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_rd <= not(stream_in_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_in = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_wr <= not(stream_in_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_strb_V_0_state = ap_const_lv2_3)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_out = ap_const_logic_1) and (stream_in_V_user_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_rd <= not(stream_in_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_in = ap_const_logic_1) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_wr <= not(stream_in_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_user_V_0_state = ap_const_lv2_3)) or ((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    buffer_col14_0_reg_1530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                buffer_col14_0_reg_1530 <= buffer_col_1_fu_2028_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and ((ap_const_lv1_1 = and_ln195_fu_1902_p2) or (icmp_ln195_fu_1890_p2 = ap_const_lv1_1)))) then 
                buffer_col14_0_reg_1530 <= ap_const_lv7_2;
            end if; 
        end if;
    end process;

    buffer_col15_0_reg_1541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                buffer_col15_0_reg_1541 <= ap_const_lv2_0;
            elsif (((icmp_ln205_fu_2077_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                buffer_col15_0_reg_1541 <= buffer_col_2_fu_2083_p2;
            end if; 
        end if;
    end process;

    buffer_col16_0_reg_1552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                buffer_col16_0_reg_1552 <= ap_const_lv7_42;
            elsif (((icmp_ln212_fu_2126_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                buffer_col16_0_reg_1552 <= buffer_col_3_fu_2141_p2;
            end if; 
        end if;
    end process;

    buffer_col17_0_reg_1563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln220_fu_2164_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                buffer_col17_0_reg_1563 <= ap_const_lv7_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                buffer_col17_0_reg_1563 <= buffer_col_4_fu_2269_p2;
            end if; 
        end if;
    end process;

    buffer_col18_0_reg_1575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                buffer_col18_0_reg_1575 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1))) then 
                buffer_col18_0_reg_1575 <= buffer_col_5_reg_3140;
            end if; 
        end if;
    end process;

    buffer_col19_0_reg_1587_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                buffer_col19_0_reg_1587 <= ap_const_lv7_42;
            elsif (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_fu_2303_p2 = ap_const_lv1_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                buffer_col19_0_reg_1587 <= buffer_col_6_fu_2319_p2;
            end if; 
        end if;
    end process;

    buffer_col20_0_reg_1598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln244_fu_2348_p2) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                buffer_col20_0_reg_1598 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_fu_2384_p2 = ap_const_lv1_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
                buffer_col20_0_reg_1598 <= buffer_col_7_fu_2390_p2;
            end if; 
        end if;
    end process;

    buffer_col21_0_reg_1609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln220_reg_3068 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                buffer_col21_0_reg_1609 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_fu_2428_p2 = ap_const_lv1_0) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then 
                buffer_col21_0_reg_1609 <= buffer_col_8_fu_2434_p2;
            end if; 
        end if;
    end process;

    buffer_col_0_reg_1519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_fu_1733_p2 = ap_const_lv1_1) and (icmp_ln178_fu_1721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                buffer_col_0_reg_1519 <= ap_const_lv7_0;
            elsif (((icmp_ln183_fu_1745_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                buffer_col_0_reg_1519 <= buffer_col_fu_1877_p2;
            end if; 
        end if;
    end process;

    buffer_line_0_reg_1508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_fu_1733_p2 = ap_const_lv1_1) and (icmp_ln178_fu_1721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                buffer_line_0_reg_1508 <= ap_const_lv3_0;
            elsif (((icmp_ln183_reg_2834 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                buffer_line_0_reg_1508 <= select_ln188_1_reg_2843;
            end if; 
        end if;
    end process;

    current_filter_0_reg_1620_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_fu_1672_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                current_filter_0_reg_1620 <= ap_const_lv6_0;
            elsif (((icmp_ln277_fu_2581_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                current_filter_0_reg_1620 <= current_filter_reg_3284;
            end if; 
        end if;
    end process;

    filter_element_0_0_reg_1631_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_2479_p2 = ap_const_lv1_0) and (icmp_ln264_reg_3276 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                filter_element_0_0_reg_1631 <= ap_const_lv5_0;
            elsif (((icmp_ln270_reg_3304 = ap_const_lv1_0) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001))) then 
                filter_element_0_0_reg_1631 <= add_ln270_reg_3308;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_1497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln181_fu_1733_p2 = ap_const_lv1_1) and (icmp_ln178_fu_1721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_1497 <= ap_const_lv9_0;
            elsif (((icmp_ln183_fu_1745_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                indvar_flatten_reg_1497 <= add_ln183_fu_1751_p2;
            end if; 
        end if;
    end process;

    k_0_reg_1643_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
                k_0_reg_1643 <= k_reg_3336;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state34) and (grp_CORRELATE_2_fu_1655_ap_done = ap_const_logic_1))) then 
                k_0_reg_1643 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    row_idx_0_reg_1485_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_idx_0_reg_1485 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state30) and ((icmp_ln266_fu_2479_p2 = ap_const_lv1_1) or (icmp_ln264_reg_3276 = ap_const_lv1_1)))) then 
                row_idx_0_reg_1485 <= row_idx_reg_2825;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp8_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001))) then
                add_ln270_reg_3308 <= add_ln270_fu_2517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln183_fu_1745_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln321_265_reg_2856 <= add_ln321_265_fu_1871_p2;
                    zext_ln321_338_reg_2848(13 downto 0) <= zext_ln321_338_fu_1863_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((ap_const_lv1_1 = and_ln195_fu_1902_p2) or (icmp_ln195_fu_1890_p2 = ap_const_lv1_1)))) then
                    add_ln321_266_reg_2922(13 downto 2) <= add_ln321_266_fu_1932_p2(13 downto 2);
                    buffer_data_V_addr_3_reg_2930(8 downto 2) <= zext_ln321_342_fu_1944_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_data_V_addr_5_reg_2935(8 downto 2) <= sext_ln321_fu_1962_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_dest_V_addr_3_reg_2990(8 downto 2) <= zext_ln321_342_fu_1944_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_dest_V_addr_5_reg_2995(8 downto 2) <= sext_ln321_fu_1962_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_id_V_addr_3_reg_2980(8 downto 2) <= zext_ln321_342_fu_1944_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_id_V_addr_5_reg_2985(8 downto 2) <= sext_ln321_fu_1962_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_keep_V_addr_3_reg_2940(8 downto 2) <= zext_ln321_342_fu_1944_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_keep_V_addr_5_reg_2945(8 downto 2) <= sext_ln321_fu_1962_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_last_V_addr_3_reg_2970(8 downto 2) <= zext_ln321_342_fu_1944_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_last_V_addr_5_reg_2975(8 downto 2) <= sext_ln321_fu_1962_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_strb_V_addr_3_reg_2950(8 downto 2) <= zext_ln321_342_fu_1944_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_strb_V_addr_5_reg_2955(8 downto 2) <= sext_ln321_fu_1962_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_user_V_addr_3_reg_2960(8 downto 2) <= zext_ln321_342_fu_1944_p1(9 - 1 downto 0)(8 downto 2);
                    buffer_user_V_addr_5_reg_2965(8 downto 2) <= sext_ln321_fu_1962_p1(9 - 1 downto 0)(8 downto 2);
                    img_channel_V_addr_4_reg_3000(12 downto 2) <= zext_ln321_342_fu_1944_p1(13 - 1 downto 0)(12 downto 2);
                    img_channel_V_addr_6_reg_3005(12 downto 2) <= sext_ln321_fu_1962_p1(13 - 1 downto 0)(12 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln212_fu_2126_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                add_ln321_269_reg_3058 <= add_ln321_269_fu_2136_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_fu_2303_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                add_ln321_271_reg_3149 <= add_ln321_271_fu_2313_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln244_fu_2348_p2) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    add_ln321_272_reg_3163(13 downto 2) <= add_ln321_272_fu_2378_p2(13 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_fu_2384_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then
                add_ln321_273_reg_3182 <= add_ln321_273_fu_2412_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                buffer_col_5_reg_3140 <= buffer_col_5_fu_2281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln264_reg_3276 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                current_filter_reg_3284 <= current_filter_fu_2485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln183_reg_2834 <= icmp_ln183_fu_1745_p2;
                icmp_ln183_reg_2834_pp0_iter1_reg <= icmp_ln183_reg_2834;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln198_reg_3010 <= icmp_ln198_fu_1974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln205_reg_3040 <= icmp_ln205_fu_2077_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                icmp_ln212_reg_3054 <= icmp_ln212_fu_2126_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                icmp_ln220_reg_3068 <= icmp_ln220_fu_2158_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln229_reg_3136 <= icmp_ln229_fu_2275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                icmp_ln236_reg_3145 <= icmp_ln236_fu_2303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then
                icmp_ln246_reg_3168 <= icmp_ln246_fu_2384_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then
                icmp_ln256_reg_3222 <= icmp_ln256_fu_2428_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                icmp_ln264_reg_3276 <= grp_fu_1672_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001))) then
                icmp_ln270_reg_3304 <= icmp_ln270_fu_2511_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                k_reg_3336 <= k_fu_2587_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln205_fu_2077_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                or_ln321_3_reg_3049 <= or_ln321_3_fu_2092_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                row_idx_reg_2825 <= row_idx_fu_1727_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                select_ln14_reg_3357 <= select_ln14_fu_2648_p3;
                select_ln7_reg_3351 <= select_ln7_fu_2640_p3;
                tmp_valid_V_reg_3387 <= out_layer_valid_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln183_fu_1745_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln188_1_reg_2843 <= select_ln188_1_fu_1771_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state34) and (grp_CORRELATE_2_fu_1655_ap_done = ap_const_logic_1))) then
                sext_ln1265_reg_3323 <= sext_ln1265_fu_2573_p1;
                sext_ln703_reg_3328 <= sext_ln703_fu_2577_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_A <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_B <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_A <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_B <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_A <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_B <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_A <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_B <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_last_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_last_V_0_payload_A <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_last_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_last_V_0_payload_B <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_A <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_B <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_A <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_B <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_69_reg_3024 <= stream_in_V_data_V_0_data_out(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_71_reg_3030 <= mul_ln1148_fu_2725_p2(25 downto 20);
                trunc_ln1148_reg_3019 <= trunc_ln1148_fu_2016_p1;
                    zext_ln321_344_reg_3014(13 downto 0) <= zext_ln321_344_fu_1989_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                tmp_75_reg_3120 <= stream_in_V_data_V_0_data_out(7 downto 7);
                tmp_77_reg_3126 <= mul_ln1148_1_fu_2733_p2(25 downto 20);
                tmp_data_V_17_reg_3080 <= stream_in_V_data_V_0_data_out;
                tmp_dest_V_16_reg_3110 <= stream_in_V_dest_V_0_data_out;
                tmp_id_V_16_reg_3105 <= stream_in_V_id_V_0_data_out;
                tmp_keep_V_16_reg_3085 <= stream_in_V_keep_V_0_data_out;
                tmp_last_V_16_reg_3100 <= stream_in_V_last_V_0_data_out;
                tmp_strb_V_1_reg_3090 <= stream_in_V_strb_V_0_data_out;
                tmp_user_V_15_reg_3095 <= stream_in_V_user_V_0_data_out;
                trunc_ln1148_1_reg_3115 <= trunc_ln1148_1_fu_2192_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_2479_p2 = ap_const_lv1_0) and (icmp_ln264_reg_3276 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    zext_ln162_reg_3294(5 downto 0) <= zext_ln162_fu_2495_p1(5 downto 0);
                    zext_ln270_reg_3299(11 downto 6) <= zext_ln270_fu_2507_p1(11 downto 6);
                    zext_ln273_reg_3289(5 downto 0) <= zext_ln273_fu_2491_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln183_reg_2834 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    zext_ln321_339_reg_2891(13 downto 0) <= zext_ln321_339_fu_1883_p1(13 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_fu_2428_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0))) then
                    zext_ln321_356_reg_3231(6 downto 0) <= zext_ln321_356_fu_2440_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln321_338_reg_2848(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    zext_ln321_339_reg_2891(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    add_ln321_266_reg_2922(1 downto 0) <= "00";
    buffer_data_V_addr_3_reg_2930(1 downto 0) <= "10";
    buffer_data_V_addr_5_reg_2935(1 downto 0) <= "01";
    buffer_keep_V_addr_3_reg_2940(1 downto 0) <= "10";
    buffer_keep_V_addr_5_reg_2945(1 downto 0) <= "01";
    buffer_strb_V_addr_3_reg_2950(1 downto 0) <= "10";
    buffer_strb_V_addr_5_reg_2955(1 downto 0) <= "01";
    buffer_user_V_addr_3_reg_2960(1 downto 0) <= "10";
    buffer_user_V_addr_5_reg_2965(1 downto 0) <= "01";
    buffer_last_V_addr_3_reg_2970(1 downto 0) <= "10";
    buffer_last_V_addr_5_reg_2975(1 downto 0) <= "01";
    buffer_id_V_addr_3_reg_2980(1 downto 0) <= "10";
    buffer_id_V_addr_5_reg_2985(1 downto 0) <= "01";
    buffer_dest_V_addr_3_reg_2990(1 downto 0) <= "10";
    buffer_dest_V_addr_5_reg_2995(1 downto 0) <= "01";
    img_channel_V_addr_4_reg_3000(1 downto 0) <= "10";
    img_channel_V_addr_6_reg_3005(1 downto 0) <= "01";
    zext_ln321_344_reg_3014(63 downto 14) <= "00000000000000000000000000000000000000000000000000";
    add_ln321_272_reg_3163(1 downto 0) <= "00";
    zext_ln321_356_reg_3231(8 downto 7) <= "00";
    zext_ln273_reg_3289(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln162_reg_3294(11 downto 6) <= "000000";
    zext_ln270_reg_3299(5 downto 0) <= "000000";
    zext_ln270_reg_3299(12) <= '0';

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, stream_in_V_data_V_0_vld_out, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_CS_fsm_state37, icmp_ln178_fu_1721_p2, ap_CS_fsm_state2, icmp_ln181_fu_1733_p2, icmp_ln183_fu_1745_p2, ap_enable_reg_pp0_iter0, icmp_ln195_fu_1890_p2, ap_CS_fsm_state6, and_ln195_fu_1902_p2, icmp_ln205_fu_2077_p2, ap_enable_reg_pp2_iter0, icmp_ln212_fu_2126_p2, ap_enable_reg_pp3_iter0, icmp_ln220_reg_3068, ap_CS_fsm_state15, or_ln220_fu_2164_p2, icmp_ln229_fu_2275_p2, ap_enable_reg_pp4_iter0, icmp_ln236_fu_2303_p2, ap_enable_reg_pp5_iter0, and_ln244_fu_2348_p2, ap_CS_fsm_state23, icmp_ln246_fu_2384_p2, ap_enable_reg_pp6_iter0, icmp_ln256_fu_2428_p2, ap_enable_reg_pp7_iter0, icmp_ln264_reg_3276, icmp_ln266_fu_2479_p2, ap_CS_fsm_state30, icmp_ln270_fu_2511_p2, ap_enable_reg_pp8_iter0, ap_CS_fsm_state34, grp_CORRELATE_2_fu_1655_ap_done, ap_CS_fsm_state35, icmp_ln277_fu_2581_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, ap_block_pp3_stage0_subdone, ap_block_pp4_stage0_subdone, ap_block_pp5_stage0_subdone, ap_block_pp6_stage0_subdone, ap_CS_fsm_state26, ap_block_pp7_stage0_subdone, ap_block_pp8_stage0_subdone, io_acc_block_signal_op692)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln178_fu_1721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln181_fu_1733_p2 = ap_const_lv1_1) and (icmp_ln178_fu_1721_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln183_fu_1745_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((icmp_ln183_fu_1745_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((ap_const_lv1_1 = and_ln195_fu_1902_p2) or (icmp_ln195_fu_1890_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((icmp_ln198_fu_1974_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((icmp_ln198_fu_1974_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((icmp_ln205_fu_2077_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((icmp_ln205_fu_2077_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if (not(((icmp_ln212_fu_2126_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif (((icmp_ln212_fu_2126_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state15 => 
                if (((or_ln220_fu_2164_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_pp4_stage0 => 
                if (not(((icmp_ln229_fu_2275_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif (((icmp_ln229_fu_2275_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if (not(((icmp_ln236_fu_2303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif (((icmp_ln236_fu_2303_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_lv1_1 = and_ln244_fu_2348_p2) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_pp6_stage0 => 
                if (not(((icmp_ln246_fu_2384_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif (((icmp_ln246_fu_2384_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln220_reg_3068 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_pp7_stage0 => 
                if (not(((icmp_ln256_fu_2428_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                elsif (((icmp_ln256_fu_2428_p2 = ap_const_lv1_1) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp7_stage0;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state30) and ((icmp_ln266_fu_2479_p2 = ap_const_lv1_1) or (icmp_ln264_reg_3276 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp8_stage0;
                end if;
            when ap_ST_fsm_pp8_stage0 => 
                if (not(((icmp_ln270_fu_2511_p2 = ap_const_lv1_1) and (ap_enable_reg_pp8_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp8_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp8_stage0;
                elsif (((icmp_ln270_fu_2511_p2 = ap_const_lv1_1) and (ap_enable_reg_pp8_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp8_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp8_stage0;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state34) and (grp_CORRELATE_2_fu_1655_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln277_fu_2581_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln162_fu_2602_p2 <= std_logic_vector(unsigned(zext_ln162_9_fu_2598_p1) + unsigned(zext_ln270_reg_3299));
    add_ln183_fu_1751_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_1497) + unsigned(ap_const_lv9_1));
    add_ln188_fu_1809_p2 <= std_logic_vector(unsigned(ap_phi_mux_buffer_line_0_phi_fu_1512_p4) + unsigned(ap_const_lv3_2));
    add_ln203_55_fu_2553_p2 <= std_logic_vector(unsigned(sub_ln203_fu_2547_p2) + unsigned(zext_ln162_reg_3294));
    add_ln203_fu_2621_p2 <= std_logic_vector(signed(sext_ln703_reg_3328) + signed(trunc_ln703_fu_2612_p1));
    add_ln270_fu_2517_p2 <= std_logic_vector(unsigned(ap_phi_mux_filter_element_0_0_phi_fu_1635_p4) + unsigned(ap_const_lv5_1));
    add_ln282_fu_2656_p2 <= std_logic_vector(unsigned(ap_const_lv7_2) + unsigned(k_0_reg_1643));
    add_ln321_263_fu_1847_p2 <= std_logic_vector(unsigned(zext_ln321_335_fu_1831_p1) + unsigned(zext_ln321_336_fu_1843_p1));
    add_ln321_264_fu_1857_p2 <= std_logic_vector(unsigned(zext_ln321_337_fu_1853_p1) + unsigned(add_ln321_263_fu_1847_p2));
    add_ln321_265_fu_1871_p2 <= std_logic_vector(unsigned(zext_ln321_337_fu_1853_p1) + unsigned(add_ln321_fu_1803_p2));
    add_ln321_266_fu_1932_p2 <= std_logic_vector(unsigned(zext_ln321_341_fu_1928_p1) + unsigned(zext_ln321_340_fu_1916_p1));
    add_ln321_267_fu_1956_p2 <= std_logic_vector(unsigned(add_ln321_266_fu_1932_p2) + unsigned(ap_const_lv14_41));
    add_ln321_268_fu_1984_p2 <= std_logic_vector(unsigned(zext_ln321_343_fu_1980_p1) + unsigned(add_ln321_266_reg_2922));
    add_ln321_269_fu_2136_p2 <= std_logic_vector(unsigned(add_ln321_266_reg_2922) + unsigned(zext_ln321_346_fu_2132_p1));
    add_ln321_270_fu_2208_p2 <= std_logic_vector(unsigned(zext_ln321_348_fu_2204_p1) + unsigned(ap_const_lv9_110));
    add_ln321_271_fu_2313_p2 <= std_logic_vector(unsigned(zext_ln321_350_fu_2309_p1) + unsigned(ap_const_lv9_110));
    add_ln321_272_fu_2378_p2 <= std_logic_vector(unsigned(zext_ln321_353_fu_2374_p1) + unsigned(zext_ln321_352_fu_2362_p1));
    add_ln321_273_fu_2412_p2 <= std_logic_vector(unsigned(add_ln321_272_reg_3163) + unsigned(zext_ln321_354_fu_2408_p1));
    add_ln321_274_fu_2444_p2 <= std_logic_vector(unsigned(zext_ln321_356_fu_2440_p1) + unsigned(ap_const_lv9_CC));
    add_ln321_275_fu_2462_p2 <= std_logic_vector(unsigned(zext_ln321_356_reg_3231) + unsigned(ap_const_lv9_110));
    add_ln321_276_fu_2666_p2 <= std_logic_vector(signed(ap_const_lv8_88) + signed(zext_ln321_359_fu_2662_p1));
    add_ln321_fu_1803_p2 <= std_logic_vector(unsigned(zext_ln321_fu_1787_p1) + unsigned(zext_ln321_334_fu_1799_p1));
    and_ln195_fu_1902_p2 <= (icmp_ln195_1_fu_1896_p2 and grp_fu_1672_p2);
    and_ln244_fu_2348_p2 <= (icmp_ln244_fu_2336_p2 and icmp_ln244_1_fu_2342_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(8);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(14);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp7_stage0 <= ap_CS_fsm(18);
    ap_CS_fsm_pp8_stage0 <= ap_CS_fsm(21);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(7);
    ap_CS_fsm_state15 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(10);
    ap_CS_fsm_state17 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(13);
    ap_CS_fsm_state23 <= ap_CS_fsm(15);
    ap_CS_fsm_state26 <= ap_CS_fsm(17);
    ap_CS_fsm_state29 <= ap_CS_fsm(19);
    ap_CS_fsm_state30 <= ap_CS_fsm(20);
    ap_CS_fsm_state33 <= ap_CS_fsm(22);
    ap_CS_fsm_state34 <= ap_CS_fsm(23);
    ap_CS_fsm_state35 <= ap_CS_fsm(24);
    ap_CS_fsm_state36 <= ap_CS_fsm(25);
    ap_CS_fsm_state37 <= ap_CS_fsm(26);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2)
    begin
                ap_block_pp1_stage0_11001 <= ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2)
    begin
                ap_block_pp1_stage0_subdone <= ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp7_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp8_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp8_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp8_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_assign_proc : process(stream_in_V_data_V_0_vld_out, icmp_ln223_fu_2170_p2)
    begin
                ap_block_state16 <= ((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state18_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp6_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp6_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp7_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp7_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp8_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp8_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter0_assign_proc : process(stream_in_V_data_V_0_vld_out, icmp_ln198_fu_1974_p2)
    begin
                ap_block_state7_pp1_stage0_iter0 <= ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state8_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln183_fu_1745_p2)
    begin
        if ((icmp_ln183_fu_1745_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state7_assign_proc : process(icmp_ln198_fu_1974_p2)
    begin
        if ((icmp_ln198_fu_1974_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state10_assign_proc : process(icmp_ln205_fu_2077_p2)
    begin
        if ((icmp_ln205_fu_2077_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state13_assign_proc : process(icmp_ln212_fu_2126_p2)
    begin
        if ((icmp_ln212_fu_2126_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state13 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state18_assign_proc : process(icmp_ln229_fu_2275_p2)
    begin
        if ((icmp_ln229_fu_2275_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state21_assign_proc : process(icmp_ln236_fu_2303_p2)
    begin
        if ((icmp_ln236_fu_2303_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state24_assign_proc : process(icmp_ln246_fu_2384_p2)
    begin
        if ((icmp_ln246_fu_2384_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state24 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp7_exit_iter0_state27_assign_proc : process(icmp_ln256_fu_2428_p2)
    begin
        if ((icmp_ln256_fu_2428_p2 = ap_const_lv1_1)) then 
            ap_condition_pp7_exit_iter0_state27 <= ap_const_logic_1;
        else 
            ap_condition_pp7_exit_iter0_state27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp8_exit_iter0_state31_assign_proc : process(icmp_ln270_fu_2511_p2)
    begin
        if ((icmp_ln270_fu_2511_p2 = ap_const_lv1_1)) then 
            ap_condition_pp8_exit_iter0_state31 <= ap_const_logic_1;
        else 
            ap_condition_pp8_exit_iter0_state31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln178_fu_1721_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln178_fu_1721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);
    ap_enable_pp7 <= (ap_idle_pp7 xor ap_const_logic_1);
    ap_enable_pp8 <= (ap_idle_pp8 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1)
    begin
        if (((ap_enable_reg_pp4_iter0 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1)
    begin
        if (((ap_enable_reg_pp5_iter0 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter0, ap_enable_reg_pp6_iter1)
    begin
        if (((ap_enable_reg_pp6_iter0 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp7_assign_proc : process(ap_enable_reg_pp7_iter0, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_enable_reg_pp7_iter0 = ap_const_logic_0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_0))) then 
            ap_idle_pp7 <= ap_const_logic_1;
        else 
            ap_idle_pp7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp8_assign_proc : process(ap_enable_reg_pp8_iter0, ap_enable_reg_pp8_iter1)
    begin
        if (((ap_enable_reg_pp8_iter1 = ap_const_logic_0) and (ap_enable_reg_pp8_iter0 = ap_const_logic_0))) then 
            ap_idle_pp8 <= ap_const_logic_1;
        else 
            ap_idle_pp8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_buffer_col18_0_phi_fu_1579_p4_assign_proc : process(buffer_col18_0_reg_1575, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, buffer_col_5_reg_3140, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0)
    begin
        if (((icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 <= buffer_col_5_reg_3140;
        else 
            ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 <= buffer_col18_0_reg_1575;
        end if; 
    end process;


    ap_phi_mux_buffer_line_0_phi_fu_1512_p4_assign_proc : process(buffer_line_0_reg_1508, icmp_ln183_reg_2834, ap_CS_fsm_pp0_stage0, select_ln188_1_reg_2843, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln183_reg_2834 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_buffer_line_0_phi_fu_1512_p4 <= select_ln188_1_reg_2843;
        else 
            ap_phi_mux_buffer_line_0_phi_fu_1512_p4 <= buffer_line_0_reg_1508;
        end if; 
    end process;


    ap_phi_mux_filter_element_0_0_phi_fu_1635_p4_assign_proc : process(filter_element_0_0_reg_1631, icmp_ln270_reg_3304, ap_CS_fsm_pp8_stage0, add_ln270_reg_3308, ap_enable_reg_pp8_iter1, ap_block_pp8_stage0)
    begin
        if (((icmp_ln270_reg_3304 = ap_const_lv1_0) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0))) then 
            ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 <= add_ln270_reg_3308;
        else 
            ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 <= filter_element_0_0_reg_1631;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    aux_sum_V_fu_2616_p2 <= std_logic_vector(signed(sext_ln1265_reg_3323) + signed(correlate_img_q0));
    biases_layer1_V_address0 <= zext_ln273_reg_3289(6 - 1 downto 0);

    biases_layer1_V_ce0_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            biases_layer1_V_ce0 <= ap_const_logic_1;
        else 
            biases_layer1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_col_1_fu_2028_p2 <= std_logic_vector(unsigned(buffer_col14_0_reg_1530) + unsigned(ap_const_lv7_1));
    buffer_col_2_fu_2083_p2 <= std_logic_vector(unsigned(buffer_col15_0_reg_1541) + unsigned(ap_const_lv2_1));
    buffer_col_3_fu_2141_p2 <= std_logic_vector(unsigned(buffer_col16_0_reg_1552) + unsigned(ap_const_lv7_1));
    buffer_col_4_fu_2269_p2 <= std_logic_vector(unsigned(buffer_col17_0_reg_1563) + unsigned(ap_const_lv7_1));
    buffer_col_5_fu_2281_p2 <= std_logic_vector(unsigned(ap_phi_mux_buffer_col18_0_phi_fu_1579_p4) + unsigned(ap_const_lv2_1));
    buffer_col_6_fu_2319_p2 <= std_logic_vector(unsigned(buffer_col19_0_reg_1587) + unsigned(ap_const_lv7_1));
    buffer_col_7_fu_2390_p2 <= std_logic_vector(unsigned(buffer_col20_0_reg_1598) + unsigned(ap_const_lv7_1));
    buffer_col_8_fu_2434_p2 <= std_logic_vector(unsigned(buffer_col21_0_reg_1609) + unsigned(ap_const_lv7_1));
    buffer_col_fu_1877_p2 <= std_logic_vector(unsigned(select_ln188_fu_1763_p3) + unsigned(ap_const_lv7_1));

    buffer_data_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, zext_ln321_338_reg_2848, zext_ln321_344_fu_1989_p1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0)
    begin
        if (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_data_V_address0 <= zext_ln321_357_fu_2450_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_data_V_address0 <= zext_ln249_fu_2396_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_data_V_address0 <= ap_const_lv64_151(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_data_V_address0 <= ap_const_lv64_112(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_data_V_address0 <= zext_ln321_347_fu_2147_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_data_V_address0 <= zext_ln321_345_fu_2114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_data_V_address0 <= zext_ln321_344_fu_1989_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_data_V_address0 <= zext_ln321_338_reg_2848(9 - 1 downto 0);
        else 
            buffer_data_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_data_V_address1_assign_proc : process(zext_ln321_339_reg_2891, buffer_data_V_addr_3_reg_2930, buffer_data_V_addr_5_reg_2935, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_data_V_address1 <= zext_ln321_358_fu_2467_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_data_V_address1 <= zext_ln321_355_fu_2417_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_data_V_address1 <= zext_ln321_351_fu_2325_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_data_V_address1 <= tmp_120_fu_2287_p3(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_data_V_address1 <= zext_ln321_349_fu_2214_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_data_V_address1 <= buffer_data_V_addr_5_reg_2935;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_data_V_address1 <= buffer_data_V_addr_3_reg_2930;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_data_V_address1 <= zext_ln321_339_reg_2891(9 - 1 downto 0);
        else 
            buffer_data_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_data_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_data_V_ce0 <= ap_const_logic_1;
        else 
            buffer_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_data_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buffer_data_V_ce1 <= ap_const_logic_1;
        else 
            buffer_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_data_V_d0_assign_proc : process(stream_in_V_data_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, buffer_data_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            buffer_data_V_d0 <= buffer_data_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_data_V_d0 <= stream_in_V_data_V_0_data_out;
        else 
            buffer_data_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_data_V_d1_assign_proc : process(tmp_data_V_17_reg_3080, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, buffer_data_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_data_V_d1 <= tmp_data_V_17_reg_3080;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            buffer_data_V_d1 <= buffer_data_V_q0;
        else 
            buffer_data_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buffer_data_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_data_V_we0 <= ap_const_logic_1;
        else 
            buffer_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_data_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln183_reg_2834_pp0_iter1_reg, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buffer_data_V_we1 <= ap_const_logic_1;
        else 
            buffer_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_dest_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln321_338_fu_1863_p1, zext_ln321_344_fu_1989_p1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0, zext_ln321_360_fu_2672_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buffer_dest_V_address0 <= zext_ln321_360_fu_2672_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_dest_V_address0 <= zext_ln321_357_fu_2450_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_dest_V_address0 <= zext_ln249_fu_2396_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_dest_V_address0 <= ap_const_lv64_151(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_dest_V_address0 <= ap_const_lv64_112(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_dest_V_address0 <= zext_ln321_347_fu_2147_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_dest_V_address0 <= zext_ln321_345_fu_2114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_dest_V_address0 <= zext_ln321_344_fu_1989_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_dest_V_address0 <= zext_ln321_338_fu_1863_p1(9 - 1 downto 0);
        else 
            buffer_dest_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_dest_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln321_339_fu_1883_p1, buffer_dest_V_addr_3_reg_2990, buffer_dest_V_addr_5_reg_2995, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_dest_V_address1 <= zext_ln321_358_fu_2467_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_dest_V_address1 <= zext_ln321_355_fu_2417_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_dest_V_address1 <= zext_ln321_351_fu_2325_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_dest_V_address1 <= tmp_120_fu_2287_p3(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_dest_V_address1 <= zext_ln321_349_fu_2214_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_dest_V_address1 <= buffer_dest_V_addr_5_reg_2995;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_dest_V_address1 <= buffer_dest_V_addr_3_reg_2990;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_dest_V_address1 <= zext_ln321_339_fu_1883_p1(9 - 1 downto 0);
        else 
            buffer_dest_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_dest_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_dest_V_ce0 <= ap_const_logic_1;
        else 
            buffer_dest_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_dest_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_dest_V_ce1 <= ap_const_logic_1;
        else 
            buffer_dest_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_dest_V_d0_assign_proc : process(stream_in_V_dest_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, buffer_dest_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            buffer_dest_V_d0 <= buffer_dest_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_dest_V_d0 <= stream_in_V_dest_V_0_data_out;
        else 
            buffer_dest_V_d0 <= "X";
        end if; 
    end process;


    buffer_dest_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_dest_V_16_reg_3110, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, buffer_dest_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_dest_V_d1 <= tmp_dest_V_16_reg_3110;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            buffer_dest_V_d1 <= buffer_dest_V_q0;
        else 
            buffer_dest_V_d1 <= "X";
        end if; 
    end process;


    buffer_dest_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_dest_V_we0 <= ap_const_logic_1;
        else 
            buffer_dest_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_dest_V_we1_assign_proc : process(icmp_ln183_reg_2834, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_dest_V_we1 <= ap_const_logic_1;
        else 
            buffer_dest_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_id_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln321_338_fu_1863_p1, zext_ln321_344_fu_1989_p1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0, zext_ln321_360_fu_2672_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buffer_id_V_address0 <= zext_ln321_360_fu_2672_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_id_V_address0 <= zext_ln321_357_fu_2450_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_id_V_address0 <= zext_ln249_fu_2396_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_id_V_address0 <= ap_const_lv64_151(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_id_V_address0 <= ap_const_lv64_112(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_id_V_address0 <= zext_ln321_347_fu_2147_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_id_V_address0 <= zext_ln321_345_fu_2114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_id_V_address0 <= zext_ln321_344_fu_1989_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_id_V_address0 <= zext_ln321_338_fu_1863_p1(9 - 1 downto 0);
        else 
            buffer_id_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_id_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln321_339_fu_1883_p1, buffer_id_V_addr_3_reg_2980, buffer_id_V_addr_5_reg_2985, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_id_V_address1 <= zext_ln321_358_fu_2467_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_id_V_address1 <= zext_ln321_355_fu_2417_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_id_V_address1 <= zext_ln321_351_fu_2325_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_id_V_address1 <= tmp_120_fu_2287_p3(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_id_V_address1 <= zext_ln321_349_fu_2214_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_id_V_address1 <= buffer_id_V_addr_5_reg_2985;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_id_V_address1 <= buffer_id_V_addr_3_reg_2980;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_id_V_address1 <= zext_ln321_339_fu_1883_p1(9 - 1 downto 0);
        else 
            buffer_id_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_id_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_id_V_ce0 <= ap_const_logic_1;
        else 
            buffer_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_id_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_id_V_ce1 <= ap_const_logic_1;
        else 
            buffer_id_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_id_V_d0_assign_proc : process(stream_in_V_id_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, buffer_id_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            buffer_id_V_d0 <= buffer_id_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_id_V_d0 <= stream_in_V_id_V_0_data_out;
        else 
            buffer_id_V_d0 <= "X";
        end if; 
    end process;


    buffer_id_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_id_V_16_reg_3105, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, buffer_id_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_id_V_d1 <= tmp_id_V_16_reg_3105;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            buffer_id_V_d1 <= buffer_id_V_q0;
        else 
            buffer_id_V_d1 <= "X";
        end if; 
    end process;


    buffer_id_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_id_V_we0 <= ap_const_logic_1;
        else 
            buffer_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_id_V_we1_assign_proc : process(icmp_ln183_reg_2834, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_id_V_we1 <= ap_const_logic_1;
        else 
            buffer_id_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_keep_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, zext_ln321_338_reg_2848, zext_ln321_344_fu_1989_p1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0, zext_ln321_360_fu_2672_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buffer_keep_V_address0 <= zext_ln321_360_fu_2672_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_keep_V_address0 <= zext_ln321_357_fu_2450_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_keep_V_address0 <= zext_ln249_fu_2396_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_keep_V_address0 <= ap_const_lv64_151(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_keep_V_address0 <= ap_const_lv64_112(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_keep_V_address0 <= zext_ln321_347_fu_2147_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_keep_V_address0 <= zext_ln321_345_fu_2114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_keep_V_address0 <= zext_ln321_344_fu_1989_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_keep_V_address0 <= zext_ln321_338_reg_2848(9 - 1 downto 0);
        else 
            buffer_keep_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_keep_V_address1_assign_proc : process(zext_ln321_339_reg_2891, buffer_keep_V_addr_3_reg_2940, buffer_keep_V_addr_5_reg_2945, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_keep_V_address1 <= zext_ln321_358_fu_2467_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_keep_V_address1 <= zext_ln321_355_fu_2417_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_keep_V_address1 <= zext_ln321_351_fu_2325_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_keep_V_address1 <= tmp_120_fu_2287_p3(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_keep_V_address1 <= zext_ln321_349_fu_2214_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_keep_V_address1 <= buffer_keep_V_addr_5_reg_2945;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_keep_V_address1 <= buffer_keep_V_addr_3_reg_2940;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_keep_V_address1 <= zext_ln321_339_reg_2891(9 - 1 downto 0);
        else 
            buffer_keep_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_keep_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_keep_V_ce0 <= ap_const_logic_1;
        else 
            buffer_keep_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_keep_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buffer_keep_V_ce1 <= ap_const_logic_1;
        else 
            buffer_keep_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_keep_V_d0_assign_proc : process(stream_in_V_keep_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, buffer_keep_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            buffer_keep_V_d0 <= buffer_keep_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_keep_V_d0 <= stream_in_V_keep_V_0_data_out;
        else 
            buffer_keep_V_d0 <= "XXXX";
        end if; 
    end process;


    buffer_keep_V_d1_assign_proc : process(tmp_keep_V_16_reg_3085, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, buffer_keep_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_keep_V_d1 <= tmp_keep_V_16_reg_3085;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            buffer_keep_V_d1 <= buffer_keep_V_q0;
        else 
            buffer_keep_V_d1 <= "XXXX";
        end if; 
    end process;


    buffer_keep_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_keep_V_we0 <= ap_const_logic_1;
        else 
            buffer_keep_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_keep_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln183_reg_2834_pp0_iter1_reg, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buffer_keep_V_we1 <= ap_const_logic_1;
        else 
            buffer_keep_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_last_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln321_338_fu_1863_p1, zext_ln321_344_fu_1989_p1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0, zext_ln321_360_fu_2672_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buffer_last_V_address0 <= zext_ln321_360_fu_2672_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_last_V_address0 <= zext_ln321_357_fu_2450_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_last_V_address0 <= zext_ln249_fu_2396_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_last_V_address0 <= ap_const_lv64_151(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_last_V_address0 <= ap_const_lv64_112(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_last_V_address0 <= zext_ln321_347_fu_2147_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_last_V_address0 <= zext_ln321_345_fu_2114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_last_V_address0 <= zext_ln321_344_fu_1989_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_last_V_address0 <= zext_ln321_338_fu_1863_p1(9 - 1 downto 0);
        else 
            buffer_last_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_last_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln321_339_fu_1883_p1, buffer_last_V_addr_3_reg_2970, buffer_last_V_addr_5_reg_2975, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_last_V_address1 <= zext_ln321_358_fu_2467_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_last_V_address1 <= zext_ln321_355_fu_2417_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_last_V_address1 <= zext_ln321_351_fu_2325_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_last_V_address1 <= tmp_120_fu_2287_p3(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_last_V_address1 <= zext_ln321_349_fu_2214_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_last_V_address1 <= buffer_last_V_addr_5_reg_2975;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_last_V_address1 <= buffer_last_V_addr_3_reg_2970;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_last_V_address1 <= zext_ln321_339_fu_1883_p1(9 - 1 downto 0);
        else 
            buffer_last_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_last_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_last_V_ce0 <= ap_const_logic_1;
        else 
            buffer_last_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_last_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_last_V_ce1 <= ap_const_logic_1;
        else 
            buffer_last_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_last_V_d0_assign_proc : process(stream_in_V_last_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, buffer_last_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            buffer_last_V_d0 <= buffer_last_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_last_V_d0 <= stream_in_V_last_V_0_data_out;
        else 
            buffer_last_V_d0 <= "X";
        end if; 
    end process;


    buffer_last_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_last_V_16_reg_3100, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, buffer_last_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_last_V_d1 <= tmp_last_V_16_reg_3100;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            buffer_last_V_d1 <= buffer_last_V_q0;
        else 
            buffer_last_V_d1 <= "X";
        end if; 
    end process;


    buffer_last_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_last_V_we0 <= ap_const_logic_1;
        else 
            buffer_last_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_last_V_we1_assign_proc : process(icmp_ln183_reg_2834, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_last_V_we1 <= ap_const_logic_1;
        else 
            buffer_last_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buffer_line_fu_1739_p2 <= std_logic_vector(unsigned(ap_phi_mux_buffer_line_0_phi_fu_1512_p4) + unsigned(ap_const_lv3_1));

    buffer_strb_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, zext_ln321_338_reg_2848, zext_ln321_344_fu_1989_p1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0)
    begin
        if (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_strb_V_address0 <= zext_ln321_357_fu_2450_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_strb_V_address0 <= zext_ln249_fu_2396_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_strb_V_address0 <= ap_const_lv64_151(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_strb_V_address0 <= ap_const_lv64_112(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_strb_V_address0 <= zext_ln321_347_fu_2147_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_strb_V_address0 <= zext_ln321_345_fu_2114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_strb_V_address0 <= zext_ln321_344_fu_1989_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_strb_V_address0 <= zext_ln321_338_reg_2848(9 - 1 downto 0);
        else 
            buffer_strb_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_strb_V_address1_assign_proc : process(zext_ln321_339_reg_2891, buffer_strb_V_addr_3_reg_2950, buffer_strb_V_addr_5_reg_2955, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_strb_V_address1 <= zext_ln321_358_fu_2467_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_strb_V_address1 <= zext_ln321_355_fu_2417_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_strb_V_address1 <= zext_ln321_351_fu_2325_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_strb_V_address1 <= tmp_120_fu_2287_p3(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_strb_V_address1 <= zext_ln321_349_fu_2214_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_strb_V_address1 <= buffer_strb_V_addr_5_reg_2955;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_strb_V_address1 <= buffer_strb_V_addr_3_reg_2950;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_strb_V_address1 <= zext_ln321_339_reg_2891(9 - 1 downto 0);
        else 
            buffer_strb_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_strb_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_strb_V_ce0 <= ap_const_logic_1;
        else 
            buffer_strb_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_strb_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buffer_strb_V_ce1 <= ap_const_logic_1;
        else 
            buffer_strb_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_strb_V_d0_assign_proc : process(stream_in_V_strb_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, buffer_strb_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            buffer_strb_V_d0 <= buffer_strb_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_strb_V_d0 <= stream_in_V_strb_V_0_data_out;
        else 
            buffer_strb_V_d0 <= "XXXX";
        end if; 
    end process;


    buffer_strb_V_d1_assign_proc : process(tmp_strb_V_1_reg_3090, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, buffer_strb_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_strb_V_d1 <= tmp_strb_V_1_reg_3090;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            buffer_strb_V_d1 <= buffer_strb_V_q0;
        else 
            buffer_strb_V_d1 <= "XXXX";
        end if; 
    end process;


    buffer_strb_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_strb_V_we0 <= ap_const_logic_1;
        else 
            buffer_strb_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_strb_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln183_reg_2834_pp0_iter1_reg, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buffer_strb_V_we1 <= ap_const_logic_1;
        else 
            buffer_strb_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_user_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln321_338_fu_1863_p1, zext_ln321_344_fu_1989_p1, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0, zext_ln321_360_fu_2672_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            buffer_user_V_address0 <= zext_ln321_360_fu_2672_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_user_V_address0 <= zext_ln321_357_fu_2450_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_user_V_address0 <= zext_ln249_fu_2396_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_user_V_address0 <= ap_const_lv64_151(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_user_V_address0 <= ap_const_lv64_112(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_user_V_address0 <= zext_ln321_347_fu_2147_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_user_V_address0 <= zext_ln321_345_fu_2114_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_user_V_address0 <= zext_ln321_344_fu_1989_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_user_V_address0 <= zext_ln321_338_fu_1863_p1(9 - 1 downto 0);
        else 
            buffer_user_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_user_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, zext_ln321_339_fu_1883_p1, buffer_user_V_addr_3_reg_2960, buffer_user_V_addr_5_reg_2965, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            buffer_user_V_address1 <= zext_ln321_358_fu_2467_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            buffer_user_V_address1 <= zext_ln321_355_fu_2417_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            buffer_user_V_address1 <= zext_ln321_351_fu_2325_p1(9 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            buffer_user_V_address1 <= tmp_120_fu_2287_p3(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_user_V_address1 <= zext_ln321_349_fu_2214_p1(9 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            buffer_user_V_address1 <= buffer_user_V_addr_5_reg_2965;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            buffer_user_V_address1 <= buffer_user_V_addr_3_reg_2960;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            buffer_user_V_address1 <= zext_ln321_339_fu_1883_p1(9 - 1 downto 0);
        else 
            buffer_user_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buffer_user_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_CS_fsm_state36, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_user_V_ce0 <= ap_const_logic_1;
        else 
            buffer_user_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_user_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_user_V_ce1 <= ap_const_logic_1;
        else 
            buffer_user_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_user_V_d0_assign_proc : process(stream_in_V_user_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, buffer_user_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            buffer_user_V_d0 <= buffer_user_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            buffer_user_V_d0 <= stream_in_V_user_V_0_data_out;
        else 
            buffer_user_V_d0 <= "X";
        end if; 
    end process;


    buffer_user_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_user_V_15_reg_3095, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, buffer_user_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            buffer_user_V_d1 <= tmp_user_V_15_reg_3095;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            buffer_user_V_d1 <= buffer_user_V_q0;
        else 
            buffer_user_V_d1 <= "X";
        end if; 
    end process;


    buffer_user_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            buffer_user_V_we0 <= ap_const_logic_1;
        else 
            buffer_user_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buffer_user_V_we1_assign_proc : process(icmp_ln183_reg_2834, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            buffer_user_V_we1 <= ap_const_logic_1;
        else 
            buffer_user_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_data_V_blk_n_assign_proc : process(corr1_out_V_data_V_full_n, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            corr1_out_V_data_V_blk_n <= corr1_out_V_data_V_full_n;
        else 
            corr1_out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr1_out_V_data_V_din <= ret_V_fu_2708_p2(15 downto 4);

    corr1_out_V_data_V_write_assign_proc : process(ap_CS_fsm_state37, io_acc_block_signal_op692)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
            corr1_out_V_data_V_write <= ap_const_logic_1;
        else 
            corr1_out_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_dest_V_blk_n_assign_proc : process(corr1_out_V_dest_V_full_n, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            corr1_out_V_dest_V_blk_n <= corr1_out_V_dest_V_full_n;
        else 
            corr1_out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr1_out_V_dest_V_din <= buffer_dest_V_q0;

    corr1_out_V_dest_V_write_assign_proc : process(ap_CS_fsm_state37, io_acc_block_signal_op692)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
            corr1_out_V_dest_V_write <= ap_const_logic_1;
        else 
            corr1_out_V_dest_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_id_V_blk_n_assign_proc : process(corr1_out_V_id_V_full_n, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            corr1_out_V_id_V_blk_n <= corr1_out_V_id_V_full_n;
        else 
            corr1_out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr1_out_V_id_V_din <= buffer_id_V_q0;

    corr1_out_V_id_V_write_assign_proc : process(ap_CS_fsm_state37, io_acc_block_signal_op692)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
            corr1_out_V_id_V_write <= ap_const_logic_1;
        else 
            corr1_out_V_id_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_keep_V_blk_n_assign_proc : process(corr1_out_V_keep_V_full_n, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            corr1_out_V_keep_V_blk_n <= corr1_out_V_keep_V_full_n;
        else 
            corr1_out_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr1_out_V_keep_V_din <= buffer_keep_V_q0;

    corr1_out_V_keep_V_write_assign_proc : process(ap_CS_fsm_state37, io_acc_block_signal_op692)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
            corr1_out_V_keep_V_write <= ap_const_logic_1;
        else 
            corr1_out_V_keep_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_last_V_blk_n_assign_proc : process(corr1_out_V_last_V_full_n, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            corr1_out_V_last_V_blk_n <= corr1_out_V_last_V_full_n;
        else 
            corr1_out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr1_out_V_last_V_din <= buffer_last_V_q0;

    corr1_out_V_last_V_write_assign_proc : process(ap_CS_fsm_state37, io_acc_block_signal_op692)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
            corr1_out_V_last_V_write <= ap_const_logic_1;
        else 
            corr1_out_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_user_V_blk_n_assign_proc : process(corr1_out_V_user_V_full_n, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            corr1_out_V_user_V_blk_n <= corr1_out_V_user_V_full_n;
        else 
            corr1_out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr1_out_V_user_V_din <= buffer_user_V_q0;

    corr1_out_V_user_V_write_assign_proc : process(ap_CS_fsm_state37, io_acc_block_signal_op692)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
            corr1_out_V_user_V_write <= ap_const_logic_1;
        else 
            corr1_out_V_user_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_valid_V_blk_n_assign_proc : process(corr1_out_V_valid_V_full_n, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            corr1_out_V_valid_V_blk_n <= corr1_out_V_valid_V_full_n;
        else 
            corr1_out_V_valid_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr1_out_V_valid_V_din <= tmp_valid_V_reg_3387;

    corr1_out_V_valid_V_write_assign_proc : process(ap_CS_fsm_state37, io_acc_block_signal_op692)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) and (io_acc_block_signal_op692 = ap_const_logic_1))) then 
            corr1_out_V_valid_V_write <= ap_const_logic_1;
        else 
            corr1_out_V_valid_V_write <= ap_const_logic_0;
        end if; 
    end process;


    correlate_img_address0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state35, grp_CORRELATE_2_fu_1655_correlate_img_V_address0, zext_ln279_fu_2593_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            correlate_img_address0 <= zext_ln279_fu_2593_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            correlate_img_address0 <= grp_CORRELATE_2_fu_1655_correlate_img_V_address0;
        else 
            correlate_img_address0 <= "XXXXXX";
        end if; 
    end process;


    correlate_img_ce0_assign_proc : process(ap_CS_fsm_state34, ap_CS_fsm_state35, grp_CORRELATE_2_fu_1655_correlate_img_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            correlate_img_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            correlate_img_ce0 <= grp_CORRELATE_2_fu_1655_correlate_img_V_ce0;
        else 
            correlate_img_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    correlate_img_we0_assign_proc : process(ap_CS_fsm_state34, grp_CORRELATE_2_fu_1655_correlate_img_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            correlate_img_we0 <= grp_CORRELATE_2_fu_1655_correlate_img_V_we0;
        else 
            correlate_img_we0 <= ap_const_logic_0;
        end if; 
    end process;

    current_filter_fu_2485_p2 <= std_logic_vector(unsigned(current_filter_0_reg_1620) + unsigned(ap_const_lv6_1));
    grp_CORRELATE_2_fu_1655_ap_start <= grp_CORRELATE_2_fu_1655_ap_start_reg;
    grp_fu_1662_p4 <= row_idx_0_reg_1485(6 downto 2);
    grp_fu_1672_p2 <= "1" when (grp_fu_1662_p4 = ap_const_lv5_0) else "0";
    icmp_ln1494_fu_2626_p2 <= "1" when (signed(aux_sum_V_fu_2616_p2) > signed(ap_const_lv12_0)) else "0";
    icmp_ln178_fu_1721_p2 <= "1" when (row_idx_0_reg_1485 = ap_const_lv7_44) else "0";
    icmp_ln181_fu_1733_p2 <= "1" when (unsigned(row_idx_0_reg_1485) > unsigned(ap_const_lv7_4)) else "0";
    icmp_ln183_fu_1745_p2 <= "1" when (indvar_flatten_reg_1497 = ap_const_lv9_110) else "0";
    icmp_ln185_fu_1757_p2 <= "1" when (buffer_col_0_reg_1519 = ap_const_lv7_44) else "0";
    icmp_ln195_1_fu_1896_p2 <= "1" when (unsigned(row_idx_0_reg_1485) > unsigned(ap_const_lv7_2)) else "0";
    icmp_ln195_fu_1890_p2 <= "1" when (row_idx_0_reg_1485 = ap_const_lv7_0) else "0";
    icmp_ln198_fu_1974_p2 <= "1" when (buffer_col14_0_reg_1530 = ap_const_lv7_42) else "0";
    icmp_ln205_fu_2077_p2 <= "1" when (buffer_col15_0_reg_1541 = ap_const_lv2_2) else "0";
    icmp_ln212_fu_2126_p2 <= "1" when (buffer_col16_0_reg_1552 = ap_const_lv7_44) else "0";
    icmp_ln220_fu_2158_p2 <= "1" when (unsigned(row_idx_0_reg_1485) > unsigned(ap_const_lv7_41)) else "0";
    icmp_ln223_fu_2170_p2 <= "1" when (buffer_col17_0_reg_1563 = ap_const_lv7_42) else "0";
    icmp_ln229_fu_2275_p2 <= "1" when (ap_phi_mux_buffer_col18_0_phi_fu_1579_p4 = ap_const_lv2_2) else "0";
    icmp_ln236_fu_2303_p2 <= "1" when (buffer_col19_0_reg_1587 = ap_const_lv7_44) else "0";
    icmp_ln244_1_fu_2342_p2 <= "0" when (row_idx_0_reg_1485 = ap_const_lv7_0) else "1";
    icmp_ln244_fu_2336_p2 <= "1" when (unsigned(row_idx_0_reg_1485) < unsigned(ap_const_lv7_3)) else "0";
    icmp_ln246_fu_2384_p2 <= "1" when (buffer_col20_0_reg_1598 = ap_const_lv7_44) else "0";
    icmp_ln256_fu_2428_p2 <= "1" when (buffer_col21_0_reg_1609 = ap_const_lv7_44) else "0";
    icmp_ln266_fu_2479_p2 <= "1" when (current_filter_0_reg_1620 = ap_const_lv6_38) else "0";
    icmp_ln270_fu_2511_p2 <= "1" when (ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 = ap_const_lv5_19) else "0";
    icmp_ln277_fu_2581_p2 <= "1" when (k_0_reg_1643 = ap_const_lv7_40) else "0";

    img_channel_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, zext_ln321_338_reg_2848, zext_ln321_344_reg_3014, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp7_iter0, ap_CS_fsm_state34, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, grp_CORRELATE_2_fu_1655_prev_output_channel_V_address0, ap_block_pp0_stage0, ap_block_pp4_stage0, zext_ln321_345_fu_2114_p1, ap_block_pp2_stage0, zext_ln321_347_fu_2147_p1, ap_block_pp3_stage0, ap_block_pp5_stage0, zext_ln249_fu_2396_p1, ap_block_pp6_stage0, zext_ln321_357_fu_2450_p1, ap_block_pp7_stage0)
    begin
        if (((ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            img_channel_V_address0 <= zext_ln321_357_fu_2450_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            img_channel_V_address0 <= zext_ln249_fu_2396_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            img_channel_V_address0 <= ap_const_lv64_151(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            img_channel_V_address0 <= ap_const_lv64_112(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            img_channel_V_address0 <= zext_ln321_347_fu_2147_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            img_channel_V_address0 <= zext_ln321_345_fu_2114_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            img_channel_V_address0 <= zext_ln321_344_reg_3014(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_V_address0 <= zext_ln321_338_reg_2848(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            img_channel_V_address0 <= grp_CORRELATE_2_fu_1655_prev_output_channel_V_address0;
        else 
            img_channel_V_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_V_address1_assign_proc : process(zext_ln321_339_reg_2891, img_channel_V_addr_4_reg_3000, img_channel_V_addr_6_reg_3005, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln321_349_fu_2214_p1, tmp_120_fu_2287_p3, zext_ln321_351_fu_2325_p1, ap_block_pp5_stage0, ap_block_pp6_stage0, zext_ln321_355_fu_2417_p1, ap_block_pp7_stage0, zext_ln321_358_fu_2467_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0))) then 
            img_channel_V_address1 <= zext_ln321_358_fu_2467_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0))) then 
            img_channel_V_address1 <= zext_ln321_355_fu_2417_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0))) then 
            img_channel_V_address1 <= zext_ln321_351_fu_2325_p1(13 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0))) then 
            img_channel_V_address1 <= tmp_120_fu_2287_p3(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_channel_V_address1 <= zext_ln321_349_fu_2214_p1(13 - 1 downto 0);
        elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0))) then 
            img_channel_V_address1 <= img_channel_V_addr_6_reg_3005;
        elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            img_channel_V_address1 <= img_channel_V_addr_4_reg_3000;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_V_address1 <= zext_ln321_339_reg_2891(13 - 1 downto 0);
        else 
            img_channel_V_address1 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp7_iter0, ap_CS_fsm_state34, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, grp_CORRELATE_2_fu_1655_prev_output_channel_V_ce0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_enable_reg_pp7_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            img_channel_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            img_channel_V_ce0 <= grp_CORRELATE_2_fu_1655_prev_output_channel_V_ce0;
        else 
            img_channel_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_V_ce1_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter0, ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            img_channel_V_ce1 <= ap_const_logic_1;
        else 
            img_channel_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_V_d0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, img_channel_V_q1, ap_block_pp2_stage0, ap_block_pp3_stage0, select_ln1148_1_fu_2069_p3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0)))) then 
            img_channel_V_d0 <= img_channel_V_q1;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            img_channel_V_d0 <= select_ln1148_1_fu_2069_p3;
        else 
            img_channel_V_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_V_d1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_pp4_stage0, ap_CS_fsm_pp5_stage0, ap_CS_fsm_pp6_stage0, ap_CS_fsm_pp7_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1, img_channel_V_q0, ap_block_pp0_stage0, ap_block_pp4_stage0, ap_block_pp5_stage0, ap_block_pp6_stage0, ap_block_pp7_stage0, select_ln1148_3_fu_2261_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_channel_V_d1 <= select_ln1148_3_fu_2261_p3;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp7_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp6_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp5_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp4_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            img_channel_V_d1 <= img_channel_V_q0;
        else 
            img_channel_V_d1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln198_reg_3010, ap_block_pp1_stage0_11001, icmp_ln205_reg_3040, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, icmp_ln212_reg_3054, ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1)
    begin
        if ((((icmp_ln212_reg_3054 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1)) or ((icmp_ln205_reg_3040 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1)) or ((icmp_ln198_reg_3010 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)))) then 
            img_channel_V_we0 <= ap_const_logic_1;
        else 
            img_channel_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_V_we1_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln183_reg_2834_pp0_iter1_reg, ap_CS_fsm_state17, icmp_ln229_reg_3136, ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, icmp_ln236_reg_3145, ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, icmp_ln246_reg_3168, ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, icmp_ln256_reg_3222, ap_CS_fsm_pp7_stage0, ap_block_pp7_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp4_iter1, ap_enable_reg_pp5_iter1, ap_enable_reg_pp6_iter1, ap_enable_reg_pp7_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp7_stage0_11001) and (icmp_ln256_reg_3222 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp7_stage0) and (ap_enable_reg_pp7_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (icmp_ln246_reg_3168 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (icmp_ln236_reg_3145 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (icmp_ln229_reg_3136 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1)) or ((icmp_ln183_reg_2834_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            img_channel_V_we1 <= ap_const_logic_1;
        else 
            img_channel_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(icmp_ln178_fu_1721_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln178_fu_1721_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op692 <= (corr1_out_V_valid_V_full_n and corr1_out_V_user_V_full_n and corr1_out_V_last_V_full_n and corr1_out_V_keep_V_full_n and corr1_out_V_id_V_full_n and corr1_out_V_dest_V_full_n and corr1_out_V_data_V_full_n);
    k_fu_2587_p2 <= std_logic_vector(unsigned(k_0_reg_1643) + unsigned(ap_const_lv7_1));
    lhs_V_fu_2697_p3 <= (select_ln14_reg_3357 & ap_const_lv4_0);
    mul_ln1148_1_fu_2733_p1 <= ap_const_lv26_1011(14 - 1 downto 0);
    mul_ln1148_fu_2725_p1 <= ap_const_lv26_1011(14 - 1 downto 0);
    or_ln220_fu_2164_p2 <= (icmp_ln220_fu_2158_p2 or grp_fu_1672_p2);
    or_ln321_3_fu_2092_p2 <= (trunc_ln321_fu_2089_p1 or buffer_col15_0_reg_1541);
    or_ln321_fu_1938_p2 <= (ap_const_lv14_2 or add_ln321_266_fu_1932_p2);
    out_layer_valid_V_address0 <= zext_ln162_10_fu_2607_p1(12 - 1 downto 0);

    out_layer_valid_V_ce0_assign_proc : process(ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            out_layer_valid_V_ce0 <= ap_const_logic_1;
        else 
            out_layer_valid_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl_fu_2684_p3 <= (select_ln7_reg_3351 & ap_const_lv4_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_fu_2708_p2 <= std_logic_vector(unsigned(zext_ln728_fu_2704_p1) + unsigned(sub_ln1192_fu_2691_p2));
    row_idx_fu_1727_p2 <= std_logic_vector(unsigned(row_idx_0_reg_1485) + unsigned(ap_const_lv7_1));
    select_ln1148_1_fu_2069_p3 <= 
        sub_ln1148_1_fu_2063_p2 when (tmp_69_reg_3024(0) = '1') else 
        sext_ln1148_2_fu_2053_p1;
    select_ln1148_2_fu_2248_p3 <= 
        sext_ln1148_4_fu_2241_p1 when (tmp_75_reg_3120(0) = '1') else 
        sext_ln1148_5_fu_2245_p1;
    select_ln1148_3_fu_2261_p3 <= 
        sub_ln1148_3_fu_2255_p2 when (tmp_75_reg_3120(0) = '1') else 
        sext_ln1148_5_fu_2245_p1;
    select_ln1148_fu_2056_p3 <= 
        sext_ln1148_1_fu_2049_p1 when (tmp_69_reg_3024(0) = '1') else 
        sext_ln1148_2_fu_2053_p1;
    select_ln14_fu_2648_p3 <= 
        add_ln203_fu_2621_p2 when (icmp_ln1494_fu_2626_p2(0) = '1') else 
        ap_const_lv11_0;
    select_ln188_1_fu_1771_p3 <= 
        buffer_line_fu_1739_p2 when (icmp_ln185_fu_1757_p2(0) = '1') else 
        ap_phi_mux_buffer_line_0_phi_fu_1512_p4;
    select_ln188_2_fu_1815_p3 <= 
        add_ln188_fu_1809_p2 when (icmp_ln185_fu_1757_p2(0) = '1') else 
        buffer_line_fu_1739_p2;
    select_ln188_fu_1763_p3 <= 
        ap_const_lv7_0 when (icmp_ln185_fu_1757_p2(0) = '1') else 
        buffer_col_0_reg_1519;
    select_ln7_fu_2640_p3 <= 
        aux_sum_V_fu_2616_p2 when (tmp_79_fu_2632_p3(0) = '1') else 
        ap_const_lv12_0;
        sext_ln1148_1_fu_2049_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_70_fu_2039_p4),12));

        sext_ln1148_2_fu_2053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_71_reg_3030),12));

        sext_ln1148_4_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_76_fu_2231_p4),12));

        sext_ln1148_5_fu_2245_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_77_reg_3126),12));

        sext_ln1192_fu_2681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln7_reg_3351),16));

    sext_ln1265_fu_2573_p0 <= biases_layer1_V_q0;
        sext_ln1265_fu_2573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1265_fu_2573_p0),12));

        sext_ln203_fu_2558_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_55_fu_2553_p2),64));

        sext_ln321_fu_1962_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln321_267_fu_1956_p2),64));

    sext_ln703_fu_2577_p0 <= biases_layer1_V_q0;
        sext_ln703_fu_2577_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_2577_p0),11));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_TDATA_blk_n_assign_proc : process(stream_in_V_data_V_0_state, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2)
    begin
        if ((((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_TDATA_blk_n <= stream_in_V_data_V_0_state(0);
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_TREADY <= stream_in_V_dest_V_0_state(1);
    stream_in_V_data_V_0_ack_in <= stream_in_V_data_V_0_state(1);

    stream_in_V_data_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_block_pp1_stage0_11001)
    begin
        if (((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_data_V_0_data_out_assign_proc : process(stream_in_V_data_V_0_payload_A, stream_in_V_data_V_0_payload_B, stream_in_V_data_V_0_sel)
    begin
        if ((stream_in_V_data_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_B;
        else 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_data_V_0_load_A <= (stream_in_V_data_V_0_state_cmp_full and not(stream_in_V_data_V_0_sel_wr));
    stream_in_V_data_V_0_load_B <= (stream_in_V_data_V_0_state_cmp_full and stream_in_V_data_V_0_sel_wr);
    stream_in_V_data_V_0_sel <= stream_in_V_data_V_0_sel_rd;
    stream_in_V_data_V_0_state_cmp_full <= '0' when (stream_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_data_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_data_V_0_vld_out <= stream_in_V_data_V_0_state(0);
    stream_in_V_dest_V_0_ack_in <= stream_in_V_dest_V_0_state(1);

    stream_in_V_dest_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_block_pp1_stage0_11001)
    begin
        if (((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_dest_V_0_data_out_assign_proc : process(stream_in_V_dest_V_0_payload_A, stream_in_V_dest_V_0_payload_B, stream_in_V_dest_V_0_sel)
    begin
        if ((stream_in_V_dest_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_B;
        else 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_dest_V_0_load_A <= (stream_in_V_dest_V_0_state_cmp_full and not(stream_in_V_dest_V_0_sel_wr));
    stream_in_V_dest_V_0_load_B <= (stream_in_V_dest_V_0_state_cmp_full and stream_in_V_dest_V_0_sel_wr);
    stream_in_V_dest_V_0_sel <= stream_in_V_dest_V_0_sel_rd;
    stream_in_V_dest_V_0_state_cmp_full <= '0' when (stream_in_V_dest_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_dest_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_dest_V_0_vld_out <= stream_in_V_dest_V_0_state(0);
    stream_in_V_id_V_0_ack_in <= stream_in_V_id_V_0_state(1);

    stream_in_V_id_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_block_pp1_stage0_11001)
    begin
        if (((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_id_V_0_data_out_assign_proc : process(stream_in_V_id_V_0_payload_A, stream_in_V_id_V_0_payload_B, stream_in_V_id_V_0_sel)
    begin
        if ((stream_in_V_id_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_B;
        else 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_id_V_0_load_A <= (stream_in_V_id_V_0_state_cmp_full and not(stream_in_V_id_V_0_sel_wr));
    stream_in_V_id_V_0_load_B <= (stream_in_V_id_V_0_state_cmp_full and stream_in_V_id_V_0_sel_wr);
    stream_in_V_id_V_0_sel <= stream_in_V_id_V_0_sel_rd;
    stream_in_V_id_V_0_state_cmp_full <= '0' when (stream_in_V_id_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_id_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_id_V_0_vld_out <= stream_in_V_id_V_0_state(0);
    stream_in_V_keep_V_0_ack_in <= stream_in_V_keep_V_0_state(1);

    stream_in_V_keep_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_block_pp1_stage0_11001)
    begin
        if (((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_V_keep_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_keep_V_0_data_out_assign_proc : process(stream_in_V_keep_V_0_payload_A, stream_in_V_keep_V_0_payload_B, stream_in_V_keep_V_0_sel)
    begin
        if ((stream_in_V_keep_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_B;
        else 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_keep_V_0_load_A <= (stream_in_V_keep_V_0_state_cmp_full and not(stream_in_V_keep_V_0_sel_wr));
    stream_in_V_keep_V_0_load_B <= (stream_in_V_keep_V_0_state_cmp_full and stream_in_V_keep_V_0_sel_wr);
    stream_in_V_keep_V_0_sel <= stream_in_V_keep_V_0_sel_rd;
    stream_in_V_keep_V_0_state_cmp_full <= '0' when (stream_in_V_keep_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_keep_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_keep_V_0_vld_out <= stream_in_V_keep_V_0_state(0);
    stream_in_V_last_V_0_ack_in <= stream_in_V_last_V_0_state(1);

    stream_in_V_last_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_block_pp1_stage0_11001)
    begin
        if (((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_last_V_0_data_out_assign_proc : process(stream_in_V_last_V_0_payload_A, stream_in_V_last_V_0_payload_B, stream_in_V_last_V_0_sel)
    begin
        if ((stream_in_V_last_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_B;
        else 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_last_V_0_load_A <= (stream_in_V_last_V_0_state_cmp_full and not(stream_in_V_last_V_0_sel_wr));
    stream_in_V_last_V_0_load_B <= (stream_in_V_last_V_0_state_cmp_full and stream_in_V_last_V_0_sel_wr);
    stream_in_V_last_V_0_sel <= stream_in_V_last_V_0_sel_rd;
    stream_in_V_last_V_0_state_cmp_full <= '0' when (stream_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_last_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_last_V_0_vld_out <= stream_in_V_last_V_0_state(0);
    stream_in_V_strb_V_0_ack_in <= stream_in_V_strb_V_0_state(1);

    stream_in_V_strb_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_block_pp1_stage0_11001)
    begin
        if (((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_V_strb_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_strb_V_0_data_out_assign_proc : process(stream_in_V_strb_V_0_payload_A, stream_in_V_strb_V_0_payload_B, stream_in_V_strb_V_0_sel)
    begin
        if ((stream_in_V_strb_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_B;
        else 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_strb_V_0_load_A <= (stream_in_V_strb_V_0_state_cmp_full and not(stream_in_V_strb_V_0_sel_wr));
    stream_in_V_strb_V_0_load_B <= (stream_in_V_strb_V_0_state_cmp_full and stream_in_V_strb_V_0_sel_wr);
    stream_in_V_strb_V_0_sel <= stream_in_V_strb_V_0_sel_rd;
    stream_in_V_strb_V_0_state_cmp_full <= '0' when (stream_in_V_strb_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_strb_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_strb_V_0_vld_out <= stream_in_V_strb_V_0_state(0);
    stream_in_V_user_V_0_ack_in <= stream_in_V_user_V_0_state(1);

    stream_in_V_user_V_0_ack_out_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, icmp_ln198_fu_1974_p2, ap_CS_fsm_state16, icmp_ln223_fu_2170_p2, ap_block_pp1_stage0_11001)
    begin
        if (((not(((icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0))) and (icmp_ln223_fu_2170_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((icmp_ln198_fu_1974_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            stream_in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_user_V_0_data_out_assign_proc : process(stream_in_V_user_V_0_payload_A, stream_in_V_user_V_0_payload_B, stream_in_V_user_V_0_sel)
    begin
        if ((stream_in_V_user_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_B;
        else 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_user_V_0_load_A <= (stream_in_V_user_V_0_state_cmp_full and not(stream_in_V_user_V_0_sel_wr));
    stream_in_V_user_V_0_load_B <= (stream_in_V_user_V_0_state_cmp_full and stream_in_V_user_V_0_sel_wr);
    stream_in_V_user_V_0_sel <= stream_in_V_user_V_0_sel_rd;
    stream_in_V_user_V_0_state_cmp_full <= '0' when (stream_in_V_user_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_user_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_user_V_0_vld_out <= stream_in_V_user_V_0_state(0);
    sub_ln1148_1_fu_2063_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(select_ln1148_fu_2056_p3));
    sub_ln1148_2_fu_2226_p2 <= std_logic_vector(unsigned(ap_const_lv25_0) - unsigned(trunc_ln1148_1_reg_3115));
    sub_ln1148_3_fu_2255_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(select_ln1148_2_fu_2248_p3));
    sub_ln1148_fu_2034_p2 <= std_logic_vector(unsigned(ap_const_lv25_0) - unsigned(trunc_ln1148_reg_3019));
    sub_ln1192_fu_2691_p2 <= std_logic_vector(signed(sext_ln1192_fu_2681_p1) - signed(p_shl_fu_2684_p3));
    sub_ln203_fu_2547_p2 <= std_logic_vector(unsigned(zext_ln203_fu_2531_p1) - unsigned(zext_ln203_92_fu_2543_p1));

    subfilter_layer_V_address0_assign_proc : process(ap_CS_fsm_pp8_stage0, ap_CS_fsm_state34, ap_enable_reg_pp8_iter1, grp_CORRELATE_2_fu_1655_filter_V_address0, ap_block_pp8_stage0, zext_ln273_1_fu_2563_p1)
    begin
        if (((ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0))) then 
            subfilter_layer_V_address0 <= zext_ln273_1_fu_2563_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            subfilter_layer_V_address0 <= grp_CORRELATE_2_fu_1655_filter_V_address0;
        else 
            subfilter_layer_V_address0 <= "XXXXX";
        end if; 
    end process;


    subfilter_layer_V_ce0_assign_proc : process(ap_CS_fsm_pp8_stage0, ap_block_pp8_stage0_11001, ap_CS_fsm_state34, ap_enable_reg_pp8_iter1, grp_CORRELATE_2_fu_1655_filter_V_ce0)
    begin
        if (((ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001))) then 
            subfilter_layer_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            subfilter_layer_V_ce0 <= grp_CORRELATE_2_fu_1655_filter_V_ce0;
        else 
            subfilter_layer_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        subfilter_layer_V_d0 <= std_logic_vector(IEEE.numeric_std.resize(signed(weights_layer1_V_0_q0),7));


    subfilter_layer_V_we0_assign_proc : process(icmp_ln270_reg_3304, ap_CS_fsm_pp8_stage0, ap_block_pp8_stage0_11001, ap_enable_reg_pp8_iter1)
    begin
        if (((icmp_ln270_reg_3304 = ap_const_lv1_0) and (ap_enable_reg_pp8_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001))) then 
            subfilter_layer_V_we0 <= ap_const_logic_1;
        else 
            subfilter_layer_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    t_V_1_fu_2180_p3 <= (trunc_ln731_1_fu_2176_p1 & ap_const_lv4_0);
    t_V_fu_2004_p3 <= (trunc_ln731_fu_2000_p1 & ap_const_lv4_0);
    tmp_118_fu_1908_p3 <= (row_idx_0_reg_1485 & ap_const_lv6_0);
    tmp_119_fu_1920_p3 <= (row_idx_0_reg_1485 & ap_const_lv2_0);
    tmp_120_fu_2287_p3 <= (ap_const_lv62_44 & buffer_col18_0_reg_1575);
    tmp_121_fu_2354_p3 <= (row_idx_0_reg_1485 & ap_const_lv6_0);
    tmp_122_fu_2366_p3 <= (row_idx_0_reg_1485 & ap_const_lv2_0);
    tmp_123_fu_2499_p3 <= (current_filter_0_reg_1620 & ap_const_lv6_0);
    tmp_124_fu_2523_p3 <= (ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 & ap_const_lv6_0);
    tmp_125_fu_2535_p3 <= (ap_phi_mux_filter_element_0_0_phi_fu_1635_p4 & ap_const_lv3_0);
    tmp_64_fu_1779_p3 <= (select_ln188_1_fu_1771_p3 & ap_const_lv6_0);
    tmp_65_fu_1791_p3 <= (select_ln188_1_fu_1771_p3 & ap_const_lv2_0);
    tmp_66_fu_1823_p3 <= (select_ln188_2_fu_1815_p3 & ap_const_lv6_0);
    tmp_67_fu_1835_p3 <= (select_ln188_2_fu_1815_p3 & ap_const_lv2_0);
    tmp_70_fu_2039_p4 <= sub_ln1148_fu_2034_p2(24 downto 20);
    tmp_72_fu_2098_p4 <= add_ln321_266_reg_2922(13 downto 2);
    tmp_73_fu_2107_p3 <= (tmp_72_fu_2098_p4 & or_ln321_3_reg_3049);
    tmp_76_fu_2231_p4 <= sub_ln1148_2_fu_2226_p2(24 downto 20);
    tmp_79_fu_2632_p3 <= aux_sum_V_fu_2616_p2(11 downto 11);
    trunc_ln1148_1_fu_2192_p1 <= mul_ln1148_1_fu_2733_p2(25 - 1 downto 0);
    trunc_ln1148_fu_2016_p1 <= mul_ln1148_fu_2725_p2(25 - 1 downto 0);
    trunc_ln321_fu_2089_p1 <= add_ln321_266_reg_2922(2 - 1 downto 0);
    trunc_ln703_fu_2612_p1 <= correlate_img_q0(11 - 1 downto 0);
    trunc_ln731_1_fu_2176_p1 <= stream_in_V_data_V_0_data_out(8 - 1 downto 0);
    trunc_ln731_fu_2000_p1 <= stream_in_V_data_V_0_data_out(8 - 1 downto 0);
    weights_layer1_V_0_address0 <= sext_ln203_fu_2558_p1(11 - 1 downto 0);

    weights_layer1_V_0_ce0_assign_proc : process(ap_CS_fsm_pp8_stage0, ap_block_pp8_stage0_11001, ap_enable_reg_pp8_iter0)
    begin
        if (((ap_enable_reg_pp8_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp8_stage0) and (ap_const_boolean_0 = ap_block_pp8_stage0_11001))) then 
            weights_layer1_V_0_ce0 <= ap_const_logic_1;
        else 
            weights_layer1_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln162_10_fu_2607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln162_fu_2602_p2),64));
    zext_ln162_9_fu_2598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_reg_1643),13));
    zext_ln162_fu_2495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_filter_0_reg_1620),12));
    zext_ln203_92_fu_2543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_125_fu_2535_p3),12));
    zext_ln203_fu_2531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_124_fu_2523_p3),12));
    zext_ln249_fu_2396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_col20_0_reg_1598),64));
    zext_ln270_fu_2507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_123_fu_2499_p3),13));
    zext_ln273_1_fu_2563_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filter_element_0_0_reg_1631),64));
    zext_ln273_fu_2491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_filter_0_reg_1620),64));
    zext_ln279_fu_2593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_0_reg_1643),64));
    zext_ln321_334_fu_1799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_1791_p3),14));
    zext_ln321_335_fu_1831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1823_p3),14));
    zext_ln321_336_fu_1843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_1835_p3),14));
    zext_ln321_337_fu_1853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln188_fu_1763_p3),14));
    zext_ln321_338_fu_1863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_264_fu_1857_p2),64));
    zext_ln321_339_fu_1883_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_265_reg_2856),64));
    zext_ln321_340_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_118_fu_1908_p3),14));
    zext_ln321_341_fu_1928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_1920_p3),14));
    zext_ln321_342_fu_1944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln321_fu_1938_p2),64));
    zext_ln321_343_fu_1980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_col14_0_reg_1530),14));
    zext_ln321_344_fu_1989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_268_fu_1984_p2),64));
    zext_ln321_345_fu_2114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_fu_2107_p3),64));
    zext_ln321_346_fu_2132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_col16_0_reg_1552),14));
    zext_ln321_347_fu_2147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_269_reg_3058),64));
    zext_ln321_348_fu_2204_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_col17_0_reg_1563),9));
    zext_ln321_349_fu_2214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_270_fu_2208_p2),64));
    zext_ln321_350_fu_2309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_col19_0_reg_1587),9));
    zext_ln321_351_fu_2325_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_271_reg_3149),64));
    zext_ln321_352_fu_2362_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_121_fu_2354_p3),14));
    zext_ln321_353_fu_2374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_122_fu_2366_p3),14));
    zext_ln321_354_fu_2408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_col20_0_reg_1598),14));
    zext_ln321_355_fu_2417_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_273_reg_3182),64));
    zext_ln321_356_fu_2440_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buffer_col21_0_reg_1609),9));
    zext_ln321_357_fu_2450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_274_fu_2444_p2),64));
    zext_ln321_358_fu_2467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_275_fu_2462_p2),64));
    zext_ln321_359_fu_2662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln282_fu_2656_p2),8));
    zext_ln321_360_fu_2672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_276_fu_2666_p2),64));
    zext_ln321_fu_1787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_64_fu_1779_p3),14));
    zext_ln728_fu_2704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_2697_p3),16));
end behav;
