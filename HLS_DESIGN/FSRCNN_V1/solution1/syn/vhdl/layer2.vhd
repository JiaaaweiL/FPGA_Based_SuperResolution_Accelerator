-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity layer2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    corr1_out_V_valid_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_valid_V_empty_n : IN STD_LOGIC;
    corr1_out_V_valid_V_read : OUT STD_LOGIC;
    corr1_out_V_data_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    corr1_out_V_data_V_empty_n : IN STD_LOGIC;
    corr1_out_V_data_V_read : OUT STD_LOGIC;
    corr1_out_V_keep_V_dout : IN STD_LOGIC_VECTOR (3 downto 0);
    corr1_out_V_keep_V_empty_n : IN STD_LOGIC;
    corr1_out_V_keep_V_read : OUT STD_LOGIC;
    corr1_out_V_user_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_user_V_empty_n : IN STD_LOGIC;
    corr1_out_V_user_V_read : OUT STD_LOGIC;
    corr1_out_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_last_V_empty_n : IN STD_LOGIC;
    corr1_out_V_last_V_read : OUT STD_LOGIC;
    corr1_out_V_id_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_id_V_empty_n : IN STD_LOGIC;
    corr1_out_V_id_V_read : OUT STD_LOGIC;
    corr1_out_V_dest_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    corr1_out_V_dest_V_empty_n : IN STD_LOGIC;
    corr1_out_V_dest_V_read : OUT STD_LOGIC;
    corr2_out_V_valid_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr2_out_V_valid_V_full_n : IN STD_LOGIC;
    corr2_out_V_valid_V_write : OUT STD_LOGIC;
    corr2_out_V_data_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    corr2_out_V_data_V_full_n : IN STD_LOGIC;
    corr2_out_V_data_V_write : OUT STD_LOGIC;
    corr2_out_V_keep_V_din : OUT STD_LOGIC_VECTOR (3 downto 0);
    corr2_out_V_keep_V_full_n : IN STD_LOGIC;
    corr2_out_V_keep_V_write : OUT STD_LOGIC;
    corr2_out_V_user_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr2_out_V_user_V_full_n : IN STD_LOGIC;
    corr2_out_V_user_V_write : OUT STD_LOGIC;
    corr2_out_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr2_out_V_last_V_full_n : IN STD_LOGIC;
    corr2_out_V_last_V_write : OUT STD_LOGIC;
    corr2_out_V_id_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr2_out_V_id_V_full_n : IN STD_LOGIC;
    corr2_out_V_id_V_write : OUT STD_LOGIC;
    corr2_out_V_dest_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    corr2_out_V_dest_V_full_n : IN STD_LOGIC;
    corr2_out_V_dest_V_write : OUT STD_LOGIC );
end;


architecture behav of layer2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000001000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000010000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000100000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (22 downto 0) := "00000000001000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (22 downto 0) := "00000000010000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (22 downto 0) := "00000000100000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (22 downto 0) := "00000001000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (22 downto 0) := "00000010000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (22 downto 0) := "00000100000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (22 downto 0) := "00001000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (22 downto 0) := "00010000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (22 downto 0) := "00100000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (22 downto 0) := "01000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (22 downto 0) := "10000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal weights_layer2_V_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal weights_layer2_V_0_ce0 : STD_LOGIC;
    signal weights_layer2_V_0_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal biases_layer2_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal biases_layer2_V_ce0 : STD_LOGIC;
    signal biases_layer2_V_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal corr1_out_V_valid_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln326_reg_1361 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln348_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal corr1_out_V_data_V_blk_n : STD_LOGIC;
    signal corr1_out_V_keep_V_blk_n : STD_LOGIC;
    signal corr1_out_V_user_V_blk_n : STD_LOGIC;
    signal corr1_out_V_last_V_blk_n : STD_LOGIC;
    signal corr1_out_V_id_V_blk_n : STD_LOGIC;
    signal corr1_out_V_dest_V_blk_n : STD_LOGIC;
    signal corr2_out_V_valid_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal corr2_out_V_data_V_blk_n : STD_LOGIC;
    signal corr2_out_V_keep_V_blk_n : STD_LOGIC;
    signal corr2_out_V_user_V_blk_n : STD_LOGIC;
    signal corr2_out_V_last_V_blk_n : STD_LOGIC;
    signal corr2_out_V_id_V_blk_n : STD_LOGIC;
    signal corr2_out_V_dest_V_blk_n : STD_LOGIC;
    signal index_input_element2_reg_683 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_input_element1_reg_694 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_input_element2_24_reg_728 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_idx_fu_810_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal row_idx_reg_1302 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_822_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1310 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln304_fu_836_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln304_reg_1315 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln303_fu_816_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_fu_840_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln323_reg_1320 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_852_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln308_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal current_input_channe_12_fu_878_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal current_input_channe_12_reg_1336 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln323_fu_892_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln323_reg_1341 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln348_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op108 : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal index_input_element_35_fu_902_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal add_ln203_52_fu_912_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln203_52_reg_1356 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln326_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp1_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op142 : STD_LOGIC;
    signal ap_block_state10_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal index_input_element_fu_932_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal add_ln203_51_fu_942_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln203_51_reg_1370 : STD_LOGIC_VECTOR (12 downto 0);
    signal current_filter_fu_962_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal current_filter_reg_1378 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln393_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln393_reg_1383 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln387_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln162_fu_972_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln162_reg_1388 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln389_fu_984_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln389_reg_1393 : STD_LOGIC_VECTOR (10 downto 0);
    signal current_input_channe_13_fu_994_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal current_input_channe_13_reg_1402 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal icmp_ln389_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln203_89_fu_1048_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln203_89_reg_1417 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal subfilter_layer_0_V_reg_1422 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln397_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln397_reg_1427 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state14_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal add_ln397_fu_1058_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln397_reg_1431 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal sext_ln46_fu_1083_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln46_reg_1441 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal index_fu_1092_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_reg_1449 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln62_fu_1098_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_reg_1454 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln46_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal channel_from_prev_ou_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal channel_from_prev_ou_10_reg_1464 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal sum_V_reg_1469 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal index_input_element_37_fu_1121_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_input_element_37_reg_1477 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal out_layer_data_V_add_9_reg_1482 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln404_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln1265_fu_1153_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1265_reg_1492 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal sext_ln703_fu_1157_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln703_reg_1497 : STD_LOGIC_VECTOR (10 downto 0);
    signal index_input_element_36_fu_1167_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal index_input_element_36_reg_1505 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal icmp_ln409_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_layer_data_V_add_10_reg_1515 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal aux_sum_V_fu_1201_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal aux_sum_V_reg_1545 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln203_fu_1206_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_reg_1551 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_63_reg_1556 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_layer_valid_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_valid_V_reg_1561 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state9 : STD_LOGIC;
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal correlate_img_V_assi_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal correlate_img_V_assi_ce0 : STD_LOGIC;
    signal correlate_img_V_assi_we0 : STD_LOGIC;
    signal correlate_img_V_assi_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_data_s_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_data_s_ce0 : STD_LOGIC;
    signal img_channel_0_data_s_we0 : STD_LOGIC;
    signal img_channel_0_data_s_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_keep_s_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_keep_s_ce0 : STD_LOGIC;
    signal img_channel_0_keep_s_we0 : STD_LOGIC;
    signal img_channel_0_keep_s_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal img_channel_0_user_s_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_user_s_ce0 : STD_LOGIC;
    signal img_channel_0_user_s_we0 : STD_LOGIC;
    signal img_channel_0_user_s_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_channel_0_last_s_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_last_s_ce0 : STD_LOGIC;
    signal img_channel_0_last_s_we0 : STD_LOGIC;
    signal img_channel_0_last_s_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_channel_0_id_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_id_V_ce0 : STD_LOGIC;
    signal img_channel_0_id_V_we0 : STD_LOGIC;
    signal img_channel_0_id_V_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_channel_0_dest_s_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal img_channel_0_dest_s_ce0 : STD_LOGIC;
    signal img_channel_0_dest_s_we0 : STD_LOGIC;
    signal img_channel_0_dest_s_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal channel_from_prev_ou_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal channel_from_prev_ou_ce0 : STD_LOGIC;
    signal channel_from_prev_ou_we0 : STD_LOGIC;
    signal out_layer_valid_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_layer_valid_V_ce0 : STD_LOGIC;
    signal out_layer_data_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_layer_data_V_ce0 : STD_LOGIC;
    signal out_layer_data_V_we0 : STD_LOGIC;
    signal out_layer_data_V_d0 : STD_LOGIC_VECTOR (11 downto 0);
    signal out_layer_data_V_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_idx_0_reg_638 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal i_0_reg_650 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln304_fu_846_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln300_fu_804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_0_reg_661 : STD_LOGIC_VECTOR (6 downto 0);
    signal current_input_channe_reg_672 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal current_filter_0_reg_705 : STD_LOGIC_VECTOR (3 downto 0);
    signal current_input_channe_19_reg_716 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_index_input_element2_24_phi_fu_732_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal index_0_i_reg_740 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal index_input_element2_25_reg_751 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal index_input_element2_26_reg_762 : STD_LOGIC_VECTOR (6 downto 0);
    signal io_acc_block_signal_op295 : STD_LOGIC;
    signal zext_ln203_82_fu_867_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_86_fu_917_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_84_fu_947_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln203_fu_1035_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln203_91_fu_1073_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln400_fu_1078_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1265_8_fu_1141_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln406_fu_1127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln162_8_fu_1182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln411_fu_1188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln703_fu_1146_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_112_fu_828_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln203_fu_858_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_50_fu_862_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_113_fu_884_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_85_fu_908_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln203_83_fu_938_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_114_fu_976_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_115_fu_1000_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_116_fu_1012_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln203_87_fu_1008_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln203_88_fu_1020_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln203_fu_1024_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln203_53_fu_1030_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_117_fu_1040_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln203_90_fu_1064_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln203_54_fu_1068_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_V_fu_1293_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1265_fu_1132_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1265_fu_1136_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1265_fu_1153_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln703_fu_1157_p0 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln321_fu_1173_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln162_fu_1177_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln703_fu_1197_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln7_fu_1224_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_1234_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_fu_1230_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_2_fu_1242_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln1494_fu_1219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln14_fu_1252_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_fu_1259_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal r_V_2_fu_1246_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln728_fu_1267_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_fu_1271_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_fu_1275_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_fu_1293_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component FSRCNN_mul_mul_12Bew IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component layer2_weights_lapcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component layer2_biases_layqcK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component layer1_correlate_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component layer2_img_channesc4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component layer2_img_channetde IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (3 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component layer2_img_channeudo IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (0 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component layer2_channel_fryd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component layer2_out_layer_zec IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component layer2_out_layer_Aem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    weights_layer2_V_0_U : component layer2_weights_lapcA
    generic map (
        DataWidth => 6,
        AddressRange => 672,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weights_layer2_V_0_address0,
        ce0 => weights_layer2_V_0_ce0,
        q0 => weights_layer2_V_0_q0);

    biases_layer2_V_U : component layer2_biases_layqcK
    generic map (
        DataWidth => 4,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => biases_layer2_V_address0,
        ce0 => biases_layer2_V_ce0,
        q0 => biases_layer2_V_q0);

    correlate_img_V_assi_U : component layer1_correlate_fYi
    generic map (
        DataWidth => 12,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => correlate_img_V_assi_address0,
        ce0 => correlate_img_V_assi_ce0,
        we0 => correlate_img_V_assi_we0,
        d0 => sum_V_reg_1469,
        q0 => correlate_img_V_assi_q0);

    img_channel_0_data_s_U : component layer2_img_channesc4
    generic map (
        DataWidth => 12,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_data_s_address0,
        ce0 => img_channel_0_data_s_ce0,
        we0 => img_channel_0_data_s_we0,
        d0 => corr1_out_V_data_V_dout,
        q0 => img_channel_0_data_s_q0);

    img_channel_0_keep_s_U : component layer2_img_channetde
    generic map (
        DataWidth => 4,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_keep_s_address0,
        ce0 => img_channel_0_keep_s_ce0,
        we0 => img_channel_0_keep_s_we0,
        d0 => corr1_out_V_keep_V_dout,
        q0 => img_channel_0_keep_s_q0);

    img_channel_0_user_s_U : component layer2_img_channeudo
    generic map (
        DataWidth => 1,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_user_s_address0,
        ce0 => img_channel_0_user_s_ce0,
        we0 => img_channel_0_user_s_we0,
        d0 => corr1_out_V_user_V_dout,
        q0 => img_channel_0_user_s_q0);

    img_channel_0_last_s_U : component layer2_img_channeudo
    generic map (
        DataWidth => 1,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_last_s_address0,
        ce0 => img_channel_0_last_s_ce0,
        we0 => img_channel_0_last_s_we0,
        d0 => corr1_out_V_last_V_dout,
        q0 => img_channel_0_last_s_q0);

    img_channel_0_id_V_U : component layer2_img_channeudo
    generic map (
        DataWidth => 1,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_id_V_address0,
        ce0 => img_channel_0_id_V_ce0,
        we0 => img_channel_0_id_V_we0,
        d0 => corr1_out_V_id_V_dout,
        q0 => img_channel_0_id_V_q0);

    img_channel_0_dest_s_U : component layer2_img_channeudo
    generic map (
        DataWidth => 1,
        AddressRange => 3584,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_channel_0_dest_s_address0,
        ce0 => img_channel_0_dest_s_ce0,
        we0 => img_channel_0_dest_s_we0,
        d0 => corr1_out_V_dest_V_dout,
        q0 => img_channel_0_dest_s_q0);

    channel_from_prev_ou_U : component layer2_channel_fryd2
    generic map (
        DataWidth => 12,
        AddressRange => 5508,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => channel_from_prev_ou_address0,
        ce0 => channel_from_prev_ou_ce0,
        we0 => channel_from_prev_ou_we0,
        d0 => img_channel_0_data_s_q0,
        q0 => channel_from_prev_ou_q0);

    out_layer_valid_V_U : component layer2_out_layer_zec
    generic map (
        DataWidth => 1,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_layer_valid_V_address0,
        ce0 => out_layer_valid_V_ce0,
        q0 => out_layer_valid_V_q0);

    out_layer_data_V_U : component layer2_out_layer_Aem
    generic map (
        DataWidth => 12,
        AddressRange => 768,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => out_layer_data_V_address0,
        ce0 => out_layer_data_V_ce0,
        we0 => out_layer_data_V_we0,
        d0 => out_layer_data_V_d0,
        q0 => out_layer_data_V_q0);

    FSRCNN_mul_mul_12Bew_U32 : component FSRCNN_mul_mul_12Bew
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 6,
        dout_WIDTH => 16)
    port map (
        din0 => channel_from_prev_ou_10_reg_1464,
        din1 => r_V_fu_1293_p1,
        dout => r_V_fu_1293_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln300_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0) and (icmp_ln323_reg_1320 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0) and (icmp_ln323_reg_1320 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln323_reg_1320 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state9))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state9);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((icmp_ln323_reg_1320 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state14))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state14);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    current_filter_0_reg_705_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                current_filter_0_reg_705 <= ap_const_lv4_0;
            elsif (((icmp_ln409_fu_1161_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                current_filter_0_reg_705 <= current_filter_reg_1378;
            end if; 
        end if;
    end process;

    current_input_channe_19_reg_716_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln404_fu_1115_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                current_input_channe_19_reg_716 <= current_input_channe_13_reg_1402;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln387_fu_956_p2 = ap_const_lv1_0))) then 
                current_input_channe_19_reg_716 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    current_input_channe_reg_672_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln303_fu_816_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                current_input_channe_reg_672 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                current_input_channe_reg_672 <= current_input_channe_12_reg_1336;
            end if; 
        end if;
    end process;

    i_0_reg_650_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln300_fu_804_p2 = ap_const_lv1_0))) then 
                i_0_reg_650 <= ap_const_lv4_0;
            elsif (((icmp_ln304_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_0_reg_650 <= i_reg_1310;
            end if; 
        end if;
    end process;

    index_0_i_reg_740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                index_0_i_reg_740 <= index_reg_1449;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                index_0_i_reg_740 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    index_input_element1_reg_694_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln323_reg_1320 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0))) then 
                index_input_element1_reg_694 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_fu_926_p2 = ap_const_lv1_0))) then 
                index_input_element1_reg_694 <= index_input_element_fu_932_p2;
            end if; 
        end if;
    end process;

    index_input_element2_24_reg_728_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                index_input_element2_24_reg_728 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln397_reg_1427 = ap_const_lv1_0))) then 
                index_input_element2_24_reg_728 <= add_ln397_reg_1431;
            end if; 
        end if;
    end process;

    index_input_element2_25_reg_751_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln46_fu_1086_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                index_input_element2_25_reg_751 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                index_input_element2_25_reg_751 <= index_input_element_37_reg_1477;
            end if; 
        end if;
    end process;

    index_input_element2_26_reg_762_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                index_input_element2_26_reg_762 <= ap_const_lv7_0;
            elsif (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                index_input_element2_26_reg_762 <= index_input_element_36_reg_1505;
            end if; 
        end if;
    end process;

    index_input_element2_reg_683_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0) and (icmp_ln323_reg_1320 = ap_const_lv1_0))) then 
                index_input_element2_reg_683 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_fu_896_p2 = ap_const_lv1_0))) then 
                index_input_element2_reg_683 <= index_input_element_35_fu_902_p2;
            end if; 
        end if;
    end process;

    j_0_reg_661_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_fu_816_p2 = ap_const_lv1_0))) then 
                j_0_reg_661 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln304_fu_846_p2 = ap_const_lv1_0))) then 
                j_0_reg_661 <= j_fu_852_p2;
            end if; 
        end if;
    end process;

    row_idx_0_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln387_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                row_idx_0_reg_638 <= row_idx_reg_1302;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                row_idx_0_reg_638 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_fu_926_p2 = ap_const_lv1_0))) then
                add_ln203_51_reg_1370 <= add_ln203_51_fu_942_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_fu_896_p2 = ap_const_lv1_0))) then
                add_ln203_52_reg_1356 <= add_ln203_52_fu_912_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                add_ln203_reg_1551 <= add_ln203_fu_1206_p2;
                aux_sum_V_reg_1545 <= aux_sum_V_fu_1201_p2;
                tmp_63_reg_1556 <= aux_sum_V_fu_1201_p2(11 downto 11);
                tmp_valid_V_reg_1561 <= out_layer_valid_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                add_ln397_reg_1431 <= add_ln397_fu_1058_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                channel_from_prev_ou_10_reg_1464 <= channel_from_prev_ou_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                current_filter_reg_1378 <= current_filter_fu_962_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                current_input_channe_12_reg_1336 <= current_input_channe_12_fu_878_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                current_input_channe_13_reg_1402 <= current_input_channe_13_fu_994_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                i_reg_1310 <= i_fu_822_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln303_fu_816_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln323_reg_1320 <= icmp_ln323_fu_840_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln326_reg_1361 <= icmp_ln326_fu_926_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln348_reg_1347 <= icmp_ln348_fu_896_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln397_reg_1427 <= icmp_ln397_fu_1052_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                index_input_element_36_reg_1505 <= index_input_element_36_fu_1167_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                index_input_element_37_reg_1477 <= index_input_element_37_fu_1121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                index_reg_1449 <= index_fu_1092_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln409_fu_1161_p2 = ap_const_lv1_0))) then
                out_layer_data_V_add_10_reg_1515 <= zext_ln162_8_fu_1182_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) and (icmp_ln404_fu_1115_p2 = ap_const_lv1_0))) then
                out_layer_data_V_add_9_reg_1482 <= zext_ln1265_8_fu_1141_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                row_idx_reg_1302 <= row_idx_fu_810_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                sext_ln1265_reg_1492 <= sext_ln1265_fu_1153_p1;
                sext_ln703_reg_1497 <= sext_ln703_fu_1157_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                sext_ln46_reg_1441 <= sext_ln46_fu_1083_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                subfilter_layer_0_V_reg_1422 <= weights_layer2_V_0_q0;
                    zext_ln203_89_reg_1417(11 downto 6) <= zext_ln203_89_fu_1048_p1(11 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                sum_V_reg_1469 <= r_V_fu_1293_p2(15 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln387_fu_956_p2 = ap_const_lv1_0))) then
                    zext_ln162_reg_1388(3 downto 0) <= zext_ln162_fu_972_p1(3 downto 0);
                    zext_ln389_reg_1393(9 downto 6) <= zext_ln389_fu_984_p1(9 downto 6);
                    zext_ln393_reg_1383(3 downto 0) <= zext_ln393_fu_968_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln303_fu_816_p2 = ap_const_lv1_0))) then
                    zext_ln304_reg_1315(9 downto 6) <= zext_ln304_fu_836_p1(9 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0))) then
                    zext_ln323_reg_1341(11 downto 6) <= zext_ln323_fu_892_p1(11 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln46_fu_1086_p2 = ap_const_lv1_0))) then
                    zext_ln62_reg_1454(6 downto 0) <= zext_ln62_fu_1098_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln304_reg_1315(5 downto 0) <= "000000";
    zext_ln304_reg_1315(10) <= '0';
    zext_ln323_reg_1341(5 downto 0) <= "000000";
    zext_ln323_reg_1341(12) <= '0';
    zext_ln393_reg_1383(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln162_reg_1388(10 downto 4) <= "0000000";
    zext_ln389_reg_1393(5 downto 0) <= "000000";
    zext_ln389_reg_1393(10) <= '0';
    zext_ln203_89_reg_1417(5 downto 0) <= "000000";
    zext_ln203_89_reg_1417(12) <= '0';
    zext_ln62_reg_1454(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state26, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln303_fu_816_p2, icmp_ln323_reg_1320, ap_CS_fsm_state4, icmp_ln308_fu_872_p2, ap_CS_fsm_state5, icmp_ln348_fu_896_p2, ap_enable_reg_pp0_iter0, icmp_ln326_fu_926_p2, ap_enable_reg_pp1_iter0, ap_CS_fsm_state11, icmp_ln387_fu_956_p2, ap_CS_fsm_state12, icmp_ln389_fu_988_p2, icmp_ln397_fu_1052_p2, ap_enable_reg_pp2_iter0, ap_CS_fsm_state17, icmp_ln46_fu_1086_p2, ap_CS_fsm_state21, icmp_ln404_fu_1115_p2, ap_CS_fsm_state24, icmp_ln409_fu_1161_p2, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_block_pp2_stage0_subdone, icmp_ln304_fu_846_p2, icmp_ln300_fu_804_p2, io_acc_block_signal_op295)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln300_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln303_fu_816_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln304_fu_846_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln308_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((icmp_ln323_reg_1320 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln308_fu_872_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln348_fu_896_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln348_fu_896_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln326_fu_926_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln326_fu_926_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln387_fu_956_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln389_fu_988_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln397_fu_1052_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln397_fu_1052_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln46_fu_1086_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln404_fu_1115_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln409_fu_1161_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln1265_fu_1136_p2 <= std_logic_vector(unsigned(zext_ln389_reg_1393) + unsigned(zext_ln1265_fu_1132_p1));
    add_ln162_fu_1177_p2 <= std_logic_vector(unsigned(zext_ln389_reg_1393) + unsigned(zext_ln321_fu_1173_p1));
    add_ln203_50_fu_862_p2 <= std_logic_vector(unsigned(zext_ln304_reg_1315) + unsigned(zext_ln203_fu_858_p1));
    add_ln203_51_fu_942_p2 <= std_logic_vector(unsigned(zext_ln323_reg_1341) + unsigned(zext_ln203_83_fu_938_p1));
    add_ln203_52_fu_912_p2 <= std_logic_vector(unsigned(zext_ln323_reg_1341) + unsigned(zext_ln203_85_fu_908_p1));
    add_ln203_53_fu_1030_p2 <= std_logic_vector(unsigned(sub_ln203_fu_1024_p2) + unsigned(zext_ln162_reg_1388));
    add_ln203_54_fu_1068_p2 <= std_logic_vector(unsigned(zext_ln203_89_reg_1417) + unsigned(zext_ln203_90_fu_1064_p1));
    add_ln203_fu_1206_p2 <= std_logic_vector(signed(sext_ln703_reg_1497) + signed(trunc_ln703_fu_1197_p1));
    add_ln397_fu_1058_p2 <= std_logic_vector(unsigned(ap_phi_mux_index_input_element2_24_phi_fu_732_p4) + unsigned(ap_const_lv7_1));
    add_ln703_fu_1146_p2 <= std_logic_vector(unsigned(correlate_img_V_assi_q0) + unsigned(out_layer_data_V_q0));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(8);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state13 <= ap_CS_fsm(10);
    ap_CS_fsm_state16 <= ap_CS_fsm(12);
    ap_CS_fsm_state17 <= ap_CS_fsm(13);
    ap_CS_fsm_state18 <= ap_CS_fsm(14);
    ap_CS_fsm_state19 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(16);
    ap_CS_fsm_state21 <= ap_CS_fsm(17);
    ap_CS_fsm_state22 <= ap_CS_fsm(18);
    ap_CS_fsm_state23 <= ap_CS_fsm(19);
    ap_CS_fsm_state24 <= ap_CS_fsm(20);
    ap_CS_fsm_state25 <= ap_CS_fsm(21);
    ap_CS_fsm_state26 <= ap_CS_fsm(22);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, io_acc_block_signal_op108)
    begin
                ap_block_pp0_stage0_11001 <= ((io_acc_block_signal_op108 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln348_reg_1347 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, io_acc_block_signal_op108)
    begin
                ap_block_pp0_stage0_subdone <= ((io_acc_block_signal_op108 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln348_reg_1347 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, io_acc_block_signal_op142)
    begin
                ap_block_pp1_stage0_11001 <= ((io_acc_block_signal_op142 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln326_reg_1361 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, io_acc_block_signal_op142)
    begin
                ap_block_pp1_stage0_subdone <= ((io_acc_block_signal_op142 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln326_reg_1361 = ap_const_lv1_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state10_pp1_stage0_iter1_assign_proc : process(icmp_ln326_reg_1361, io_acc_block_signal_op142)
    begin
                ap_block_state10_pp1_stage0_iter1 <= ((io_acc_block_signal_op142 = ap_const_logic_0) and (icmp_ln326_reg_1361 = ap_const_lv1_0));
    end process;

        ap_block_state14_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter1_assign_proc : process(icmp_ln348_reg_1347, io_acc_block_signal_op108)
    begin
                ap_block_state7_pp0_stage0_iter1 <= ((io_acc_block_signal_op108 = ap_const_logic_0) and (icmp_ln348_reg_1347 = ap_const_lv1_0));
    end process;

        ap_block_state9_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state6_assign_proc : process(icmp_ln348_fu_896_p2)
    begin
        if ((icmp_ln348_fu_896_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state9_assign_proc : process(icmp_ln326_fu_926_p2)
    begin
        if ((icmp_ln326_fu_926_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state14_assign_proc : process(icmp_ln397_fu_1052_p2)
    begin
        if ((icmp_ln397_fu_1052_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln300_fu_804_p2)
    begin
        if (((icmp_ln300_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_index_input_element2_24_phi_fu_732_p4_assign_proc : process(index_input_element2_24_reg_728, icmp_ln397_reg_1427, ap_CS_fsm_pp2_stage0, add_ln397_reg_1431, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln397_reg_1427 = ap_const_lv1_0))) then 
            ap_phi_mux_index_input_element2_24_phi_fu_732_p4 <= add_ln397_reg_1431;
        else 
            ap_phi_mux_index_input_element2_24_phi_fu_732_p4 <= index_input_element2_24_reg_728;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    aux_sum_V_fu_1201_p2 <= std_logic_vector(signed(sext_ln1265_reg_1492) + signed(out_layer_data_V_q0));
    biases_layer2_V_address0 <= zext_ln393_reg_1383(4 - 1 downto 0);

    biases_layer2_V_ce0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            biases_layer2_V_ce0 <= ap_const_logic_1;
        else 
            biases_layer2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    channel_from_prev_ou_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state17, zext_ln62_fu_1098_p1, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0, zext_ln400_fu_1078_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            channel_from_prev_ou_address0 <= zext_ln62_fu_1098_p1(13 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            channel_from_prev_ou_address0 <= zext_ln400_fu_1078_p1(13 - 1 downto 0);
        else 
            channel_from_prev_ou_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    channel_from_prev_ou_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state17, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            channel_from_prev_ou_ce0 <= ap_const_logic_1;
        else 
            channel_from_prev_ou_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    channel_from_prev_ou_we0_assign_proc : process(icmp_ln397_reg_1427, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln397_reg_1427 = ap_const_lv1_0))) then 
            channel_from_prev_ou_we0 <= ap_const_logic_1;
        else 
            channel_from_prev_ou_we0 <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_data_V_blk_n_assign_proc : process(corr1_out_V_data_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln348_reg_1347)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            corr1_out_V_data_V_blk_n <= corr1_out_V_data_V_empty_n;
        else 
            corr1_out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr1_out_V_data_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            corr1_out_V_data_V_read <= ap_const_logic_1;
        else 
            corr1_out_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_dest_V_blk_n_assign_proc : process(corr1_out_V_dest_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln348_reg_1347)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            corr1_out_V_dest_V_blk_n <= corr1_out_V_dest_V_empty_n;
        else 
            corr1_out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr1_out_V_dest_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            corr1_out_V_dest_V_read <= ap_const_logic_1;
        else 
            corr1_out_V_dest_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_id_V_blk_n_assign_proc : process(corr1_out_V_id_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln348_reg_1347)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            corr1_out_V_id_V_blk_n <= corr1_out_V_id_V_empty_n;
        else 
            corr1_out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr1_out_V_id_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            corr1_out_V_id_V_read <= ap_const_logic_1;
        else 
            corr1_out_V_id_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_keep_V_blk_n_assign_proc : process(corr1_out_V_keep_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln348_reg_1347)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            corr1_out_V_keep_V_blk_n <= corr1_out_V_keep_V_empty_n;
        else 
            corr1_out_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr1_out_V_keep_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            corr1_out_V_keep_V_read <= ap_const_logic_1;
        else 
            corr1_out_V_keep_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_last_V_blk_n_assign_proc : process(corr1_out_V_last_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln348_reg_1347)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            corr1_out_V_last_V_blk_n <= corr1_out_V_last_V_empty_n;
        else 
            corr1_out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr1_out_V_last_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            corr1_out_V_last_V_read <= ap_const_logic_1;
        else 
            corr1_out_V_last_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_user_V_blk_n_assign_proc : process(corr1_out_V_user_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln348_reg_1347)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            corr1_out_V_user_V_blk_n <= corr1_out_V_user_V_empty_n;
        else 
            corr1_out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr1_out_V_user_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            corr1_out_V_user_V_read <= ap_const_logic_1;
        else 
            corr1_out_V_user_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr1_out_V_valid_V_blk_n_assign_proc : process(corr1_out_V_valid_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln348_reg_1347)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            corr1_out_V_valid_V_blk_n <= corr1_out_V_valid_V_empty_n;
        else 
            corr1_out_V_valid_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    corr1_out_V_valid_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            corr1_out_V_valid_V_read <= ap_const_logic_1;
        else 
            corr1_out_V_valid_V_read <= ap_const_logic_0;
        end if; 
    end process;


    corr2_out_V_data_V_blk_n_assign_proc : process(corr2_out_V_data_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            corr2_out_V_data_V_blk_n <= corr2_out_V_data_V_full_n;
        else 
            corr2_out_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr2_out_V_data_V_din <= ret_V_fu_1275_p2(15 downto 4);

    corr2_out_V_data_V_write_assign_proc : process(ap_CS_fsm_state26, io_acc_block_signal_op295)
    begin
        if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            corr2_out_V_data_V_write <= ap_const_logic_1;
        else 
            corr2_out_V_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr2_out_V_dest_V_blk_n_assign_proc : process(corr2_out_V_dest_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            corr2_out_V_dest_V_blk_n <= corr2_out_V_dest_V_full_n;
        else 
            corr2_out_V_dest_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr2_out_V_dest_V_din <= img_channel_0_dest_s_q0;

    corr2_out_V_dest_V_write_assign_proc : process(ap_CS_fsm_state26, io_acc_block_signal_op295)
    begin
        if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            corr2_out_V_dest_V_write <= ap_const_logic_1;
        else 
            corr2_out_V_dest_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr2_out_V_id_V_blk_n_assign_proc : process(corr2_out_V_id_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            corr2_out_V_id_V_blk_n <= corr2_out_V_id_V_full_n;
        else 
            corr2_out_V_id_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr2_out_V_id_V_din <= img_channel_0_id_V_q0;

    corr2_out_V_id_V_write_assign_proc : process(ap_CS_fsm_state26, io_acc_block_signal_op295)
    begin
        if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            corr2_out_V_id_V_write <= ap_const_logic_1;
        else 
            corr2_out_V_id_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr2_out_V_keep_V_blk_n_assign_proc : process(corr2_out_V_keep_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            corr2_out_V_keep_V_blk_n <= corr2_out_V_keep_V_full_n;
        else 
            corr2_out_V_keep_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr2_out_V_keep_V_din <= img_channel_0_keep_s_q0;

    corr2_out_V_keep_V_write_assign_proc : process(ap_CS_fsm_state26, io_acc_block_signal_op295)
    begin
        if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            corr2_out_V_keep_V_write <= ap_const_logic_1;
        else 
            corr2_out_V_keep_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr2_out_V_last_V_blk_n_assign_proc : process(corr2_out_V_last_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            corr2_out_V_last_V_blk_n <= corr2_out_V_last_V_full_n;
        else 
            corr2_out_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr2_out_V_last_V_din <= img_channel_0_last_s_q0;

    corr2_out_V_last_V_write_assign_proc : process(ap_CS_fsm_state26, io_acc_block_signal_op295)
    begin
        if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            corr2_out_V_last_V_write <= ap_const_logic_1;
        else 
            corr2_out_V_last_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr2_out_V_user_V_blk_n_assign_proc : process(corr2_out_V_user_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            corr2_out_V_user_V_blk_n <= corr2_out_V_user_V_full_n;
        else 
            corr2_out_V_user_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr2_out_V_user_V_din <= img_channel_0_user_s_q0;

    corr2_out_V_user_V_write_assign_proc : process(ap_CS_fsm_state26, io_acc_block_signal_op295)
    begin
        if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            corr2_out_V_user_V_write <= ap_const_logic_1;
        else 
            corr2_out_V_user_V_write <= ap_const_logic_0;
        end if; 
    end process;


    corr2_out_V_valid_V_blk_n_assign_proc : process(corr2_out_V_valid_V_full_n, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            corr2_out_V_valid_V_blk_n <= corr2_out_V_valid_V_full_n;
        else 
            corr2_out_V_valid_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    corr2_out_V_valid_V_din <= tmp_valid_V_reg_1561;

    corr2_out_V_valid_V_write_assign_proc : process(ap_CS_fsm_state26, io_acc_block_signal_op295)
    begin
        if (((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            corr2_out_V_valid_V_write <= ap_const_logic_1;
        else 
            corr2_out_V_valid_V_write <= ap_const_logic_0;
        end if; 
    end process;


    correlate_img_V_assi_address0_assign_proc : process(zext_ln62_reg_1454, ap_CS_fsm_state21, ap_CS_fsm_state20, zext_ln406_fu_1127_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            correlate_img_V_assi_address0 <= zext_ln406_fu_1127_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            correlate_img_V_assi_address0 <= zext_ln62_reg_1454(6 - 1 downto 0);
        else 
            correlate_img_V_assi_address0 <= "XXXXXX";
        end if; 
    end process;


    correlate_img_V_assi_ce0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            correlate_img_V_assi_ce0 <= ap_const_logic_1;
        else 
            correlate_img_V_assi_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    correlate_img_V_assi_we0_assign_proc : process(ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            correlate_img_V_assi_we0 <= ap_const_logic_1;
        else 
            correlate_img_V_assi_we0 <= ap_const_logic_0;
        end if; 
    end process;

    current_filter_fu_962_p2 <= std_logic_vector(unsigned(current_filter_0_reg_705) + unsigned(ap_const_lv4_1));
    current_input_channe_12_fu_878_p2 <= std_logic_vector(unsigned(current_input_channe_reg_672) + unsigned(ap_const_lv6_1));
    current_input_channe_13_fu_994_p2 <= std_logic_vector(unsigned(current_input_channe_19_reg_716) + unsigned(ap_const_lv6_1));
    i_fu_822_p2 <= std_logic_vector(unsigned(i_0_reg_650) + unsigned(ap_const_lv4_1));
    icmp_ln1494_fu_1219_p2 <= "1" when (signed(aux_sum_V_reg_1545) > signed(ap_const_lv12_0)) else "0";
    icmp_ln300_fu_804_p2 <= "1" when (row_idx_0_reg_638 = ap_const_lv7_40) else "0";
    icmp_ln303_fu_816_p2 <= "1" when (i_0_reg_650 = ap_const_lv4_C) else "0";
    icmp_ln304_fu_846_p2 <= "1" when (j_0_reg_661 = ap_const_lv7_40) else "0";
    icmp_ln308_fu_872_p2 <= "1" when (current_input_channe_reg_672 = ap_const_lv6_38) else "0";
    icmp_ln323_fu_840_p2 <= "1" when (row_idx_0_reg_638 = ap_const_lv7_0) else "0";
    icmp_ln326_fu_926_p2 <= "1" when (index_input_element1_reg_694 = ap_const_lv7_40) else "0";
    icmp_ln348_fu_896_p2 <= "1" when (index_input_element2_reg_683 = ap_const_lv7_40) else "0";
    icmp_ln387_fu_956_p2 <= "1" when (current_filter_0_reg_705 = ap_const_lv4_C) else "0";
    icmp_ln389_fu_988_p2 <= "1" when (current_input_channe_19_reg_716 = ap_const_lv6_38) else "0";
    icmp_ln397_fu_1052_p2 <= "1" when (ap_phi_mux_index_input_element2_24_phi_fu_732_p4 = ap_const_lv7_40) else "0";
    icmp_ln404_fu_1115_p2 <= "1" when (index_input_element2_25_reg_751 = ap_const_lv7_40) else "0";
    icmp_ln409_fu_1161_p2 <= "1" when (index_input_element2_26_reg_762 = ap_const_lv7_40) else "0";
    icmp_ln46_fu_1086_p2 <= "1" when (index_0_i_reg_740 = ap_const_lv7_40) else "0";

    img_channel_0_data_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln203_86_fu_917_p1, zext_ln203_84_fu_947_p1, zext_ln203_91_fu_1073_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            img_channel_0_data_s_address0 <= zext_ln203_91_fu_1073_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            img_channel_0_data_s_address0 <= zext_ln203_84_fu_947_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_0_data_s_address0 <= zext_ln203_86_fu_917_p1(12 - 1 downto 0);
        else 
            img_channel_0_data_s_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_data_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            img_channel_0_data_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_data_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_data_s_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            img_channel_0_data_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_data_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_dest_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state25, zext_ln203_86_fu_917_p1, zext_ln203_84_fu_947_p1, zext_ln411_fu_1188_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            img_channel_0_dest_s_address0 <= zext_ln411_fu_1188_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            img_channel_0_dest_s_address0 <= zext_ln203_84_fu_947_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_0_dest_s_address0 <= zext_ln203_86_fu_917_p1(12 - 1 downto 0);
        else 
            img_channel_0_dest_s_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_dest_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            img_channel_0_dest_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_dest_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_dest_s_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            img_channel_0_dest_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_dest_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_id_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state25, zext_ln203_86_fu_917_p1, zext_ln203_84_fu_947_p1, zext_ln411_fu_1188_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            img_channel_0_id_V_address0 <= zext_ln411_fu_1188_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            img_channel_0_id_V_address0 <= zext_ln203_84_fu_947_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_0_id_V_address0 <= zext_ln203_86_fu_917_p1(12 - 1 downto 0);
        else 
            img_channel_0_id_V_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_id_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            img_channel_0_id_V_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_id_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_id_V_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            img_channel_0_id_V_we0 <= ap_const_logic_1;
        else 
            img_channel_0_id_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_keep_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state25, zext_ln203_86_fu_917_p1, zext_ln203_84_fu_947_p1, zext_ln411_fu_1188_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            img_channel_0_keep_s_address0 <= zext_ln411_fu_1188_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            img_channel_0_keep_s_address0 <= zext_ln203_84_fu_947_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_0_keep_s_address0 <= zext_ln203_86_fu_917_p1(12 - 1 downto 0);
        else 
            img_channel_0_keep_s_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_keep_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            img_channel_0_keep_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_keep_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_keep_s_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            img_channel_0_keep_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_keep_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_last_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state25, zext_ln203_86_fu_917_p1, zext_ln203_84_fu_947_p1, zext_ln411_fu_1188_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            img_channel_0_last_s_address0 <= zext_ln411_fu_1188_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            img_channel_0_last_s_address0 <= zext_ln203_84_fu_947_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_0_last_s_address0 <= zext_ln203_86_fu_917_p1(12 - 1 downto 0);
        else 
            img_channel_0_last_s_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_last_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            img_channel_0_last_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_last_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_last_s_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            img_channel_0_last_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_last_s_we0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_user_s_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_CS_fsm_state25, zext_ln203_86_fu_917_p1, zext_ln203_84_fu_947_p1, zext_ln411_fu_1188_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            img_channel_0_user_s_address0 <= zext_ln411_fu_1188_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            img_channel_0_user_s_address0 <= zext_ln203_84_fu_947_p1(12 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            img_channel_0_user_s_address0 <= zext_ln203_86_fu_917_p1(12 - 1 downto 0);
        else 
            img_channel_0_user_s_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    img_channel_0_user_s_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
            img_channel_0_user_s_ce0 <= ap_const_logic_1;
        else 
            img_channel_0_user_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    img_channel_0_user_s_we0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln326_reg_1361, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln348_reg_1347, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln348_reg_1347 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln326_reg_1361 = ap_const_lv1_0)))) then 
            img_channel_0_user_s_we0 <= ap_const_logic_1;
        else 
            img_channel_0_user_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    index_fu_1092_p2 <= std_logic_vector(unsigned(index_0_i_reg_740) + unsigned(ap_const_lv7_1));
    index_input_element_35_fu_902_p2 <= std_logic_vector(unsigned(index_input_element2_reg_683) + unsigned(ap_const_lv7_1));
    index_input_element_36_fu_1167_p2 <= std_logic_vector(unsigned(index_input_element2_26_reg_762) + unsigned(ap_const_lv7_1));
    index_input_element_37_fu_1121_p2 <= std_logic_vector(unsigned(index_input_element2_25_reg_751) + unsigned(ap_const_lv7_1));
    index_input_element_fu_932_p2 <= std_logic_vector(unsigned(index_input_element1_reg_694) + unsigned(ap_const_lv7_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln300_fu_804_p2)
    begin
        if (((icmp_ln300_fu_804_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op108 <= (corr1_out_V_valid_V_empty_n and corr1_out_V_user_V_empty_n and corr1_out_V_last_V_empty_n and corr1_out_V_keep_V_empty_n and corr1_out_V_id_V_empty_n and corr1_out_V_dest_V_empty_n and corr1_out_V_data_V_empty_n);
    io_acc_block_signal_op142 <= (corr1_out_V_valid_V_empty_n and corr1_out_V_user_V_empty_n and corr1_out_V_last_V_empty_n and corr1_out_V_keep_V_empty_n and corr1_out_V_id_V_empty_n and corr1_out_V_dest_V_empty_n and corr1_out_V_data_V_empty_n);
    io_acc_block_signal_op295 <= (corr2_out_V_valid_V_full_n and corr2_out_V_user_V_full_n and corr2_out_V_last_V_full_n and corr2_out_V_keep_V_full_n and corr2_out_V_id_V_full_n and corr2_out_V_dest_V_full_n and corr2_out_V_data_V_full_n);
    j_fu_852_p2 <= std_logic_vector(unsigned(j_0_reg_661) + unsigned(ap_const_lv7_1));
    lhs_V_fu_1259_p3 <= (select_ln14_fu_1252_p3 & ap_const_lv4_0);

    out_layer_data_V_address0_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state4, ap_CS_fsm_state21, out_layer_data_V_add_9_reg_1482, ap_CS_fsm_state24, out_layer_data_V_add_10_reg_1515, ap_CS_fsm_state22, zext_ln203_82_fu_867_p1, zext_ln1265_8_fu_1141_p1, zext_ln162_8_fu_1182_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            out_layer_data_V_address0 <= out_layer_data_V_add_10_reg_1515;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            out_layer_data_V_address0 <= zext_ln162_8_fu_1182_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            out_layer_data_V_address0 <= out_layer_data_V_add_9_reg_1482;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            out_layer_data_V_address0 <= zext_ln1265_8_fu_1141_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_layer_data_V_address0 <= zext_ln203_82_fu_867_p1(10 - 1 downto 0);
        else 
            out_layer_data_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    out_layer_data_V_ce0_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state4, ap_CS_fsm_state21, ap_CS_fsm_state24, ap_CS_fsm_state22, io_acc_block_signal_op295)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            out_layer_data_V_ce0 <= ap_const_logic_1;
        else 
            out_layer_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_layer_data_V_d0_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state4, ap_CS_fsm_state22, add_ln703_fu_1146_p2, ret_V_fu_1275_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            out_layer_data_V_d0 <= ret_V_fu_1275_p2(15 downto 4);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            out_layer_data_V_d0 <= add_ln703_fu_1146_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            out_layer_data_V_d0 <= ap_const_lv12_0;
        else 
            out_layer_data_V_d0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    out_layer_data_V_we0_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state4, icmp_ln304_fu_846_p2, ap_CS_fsm_state22, io_acc_block_signal_op295)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln304_fu_846_p2 = ap_const_lv1_0)) or ((io_acc_block_signal_op295 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            out_layer_data_V_we0 <= ap_const_logic_1;
        else 
            out_layer_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_layer_valid_V_address0 <= zext_ln162_8_fu_1182_p1(10 - 1 downto 0);

    out_layer_valid_V_ce0_assign_proc : process(ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            out_layer_valid_V_ce0 <= ap_const_logic_1;
        else 
            out_layer_valid_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_2_fu_1246_p2 <= std_logic_vector(signed(sext_ln1118_fu_1230_p1) + signed(sext_ln1118_2_fu_1242_p1));
    r_V_fu_1293_p1 <= sext_ln46_reg_1441(6 - 1 downto 0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_fu_1275_p2 <= std_logic_vector(unsigned(zext_ln728_fu_1267_p1) + unsigned(sext_ln1192_fu_1271_p1));
    row_idx_fu_810_p2 <= std_logic_vector(unsigned(row_idx_0_reg_638) + unsigned(ap_const_lv7_1));
    select_ln14_fu_1252_p3 <= 
        add_ln203_reg_1551 when (icmp_ln1494_fu_1219_p2(0) = '1') else 
        ap_const_lv11_0;
    select_ln7_fu_1224_p3 <= 
        aux_sum_V_reg_1545 when (tmp_63_reg_1556(0) = '1') else 
        ap_const_lv12_0;
        sext_ln1118_2_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1234_p3),15));

        sext_ln1118_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln7_fu_1224_p3),15));

        sext_ln1192_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_2_fu_1246_p2),16));

    sext_ln1265_fu_1153_p0 <= biases_layer2_V_q0;
        sext_ln1265_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1265_fu_1153_p0),12));

        sext_ln203_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln203_53_fu_1030_p2),64));

        sext_ln46_fu_1083_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(subfilter_layer_0_V_reg_1422),16));

    sext_ln703_fu_1157_p0 <= biases_layer2_V_q0;
        sext_ln703_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln703_fu_1157_p0),11));

    shl_ln_fu_1234_p3 <= (select_ln7_fu_1224_p3 & ap_const_lv2_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln203_fu_1024_p2 <= std_logic_vector(unsigned(zext_ln203_87_fu_1008_p1) - unsigned(zext_ln203_88_fu_1020_p1));
    tmp_112_fu_828_p3 <= (i_0_reg_650 & ap_const_lv6_0);
    tmp_113_fu_884_p3 <= (current_input_channe_reg_672 & ap_const_lv6_0);
    tmp_114_fu_976_p3 <= (current_filter_0_reg_705 & ap_const_lv6_0);
    tmp_115_fu_1000_p3 <= (current_input_channe_19_reg_716 & ap_const_lv4_0);
    tmp_116_fu_1012_p3 <= (current_input_channe_19_reg_716 & ap_const_lv2_0);
    tmp_117_fu_1040_p3 <= (current_input_channe_19_reg_716 & ap_const_lv6_0);
    trunc_ln703_fu_1197_p1 <= out_layer_data_V_q0(11 - 1 downto 0);
    weights_layer2_V_0_address0 <= sext_ln203_fu_1035_p1(10 - 1 downto 0);

    weights_layer2_V_0_ce0_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weights_layer2_V_0_ce0 <= ap_const_logic_1;
        else 
            weights_layer2_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1265_8_fu_1141_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1265_fu_1136_p2),64));
    zext_ln1265_fu_1132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_25_reg_751),11));
    zext_ln162_8_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln162_fu_1177_p2),64));
    zext_ln162_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_filter_0_reg_705),11));
    zext_ln203_82_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_50_fu_862_p2),64));
    zext_ln203_83_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element1_reg_694),13));
    zext_ln203_84_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_51_reg_1370),64));
    zext_ln203_85_fu_908_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_reg_683),13));
    zext_ln203_86_fu_917_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_52_reg_1356),64));
    zext_ln203_87_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_115_fu_1000_p3),11));
    zext_ln203_88_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_116_fu_1012_p3),11));
    zext_ln203_89_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_117_fu_1040_p3),13));
    zext_ln203_90_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_index_input_element2_24_phi_fu_732_p4),13));
    zext_ln203_91_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln203_54_fu_1068_p2),64));
    zext_ln203_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_661),11));
    zext_ln304_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_112_fu_828_p3),11));
    zext_ln321_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_26_reg_762),11));
    zext_ln323_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_113_fu_884_p3),13));
    zext_ln389_fu_984_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_114_fu_976_p3),11));
    zext_ln393_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(current_filter_0_reg_705),64));
    zext_ln400_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_24_reg_728),64));
    zext_ln406_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_25_reg_751),64));
    zext_ln411_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_input_element2_26_reg_762),64));
    zext_ln62_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_0_i_reg_740),64));
    zext_ln728_fu_1267_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_fu_1259_p3),16));
end behav;
